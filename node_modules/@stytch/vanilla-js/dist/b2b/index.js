'use strict';

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36, _templateObject37, _templateObject38, _templateObject39, _templateObject40, _templateObject41, _templateObject42, _templateObject43, _templateObject44, _templateObject45, _templateObject46, _templateObject47, _templateObject48, _templateObject49, _templateObject50, _templateObject51, _templateObject52, _templateObject53, _templateObject54, _templateObject55, _templateObject56, _templateObject57, _templateObject58, _templateObject59, _templateObject60, _templateObject61, _templateObject62, _templateObject63, _templateObject64, _templateObject65, _templateObject66, _templateObject67, _templateObject68, _templateObject69, _templateObject70, _templateObject71;
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var b2b_index_headless = require('./index.headless.js');
var extractErrorMessage = require('../extractErrorMessage-BThIxj3y.js');
var internal = require('../internal-Bq-MGoJK.js');
var DEFAULT_MFA_STATE = {
  primaryInfo: null,
  isEnrolling: false,
  smsOtp: {
    isSending: false,
    sendError: null,
    codeExpiration: null,
    formattedDestination: null,
    enrolledNumber: null
  },
  totp: {
    isCreating: false,
    createError: null,
    enrollment: null
  }
};
var getAuthMethodsForMember = function getAuthMethodsForMember(authMethods, member) {
  var memberHasPassword = !!(member === null || member === void 0 ? void 0 : member.member_password_id);
  return memberHasPassword ? authMethods : authMethods.filter(function (method) {
    return method !== 'password';
  });
};
var getEnabledMethods = function getEnabledMethods(_ref) {
  var allMethods = _ref.allMethods,
    orgSupportedMethods = _ref.orgSupportedMethods,
    uiIncludedMethods = _ref.uiIncludedMethods;
  if (orgSupportedMethods === null || orgSupportedMethods === void 0 ? void 0 : orgSupportedMethods.length) {
    return new Set(orgSupportedMethods);
  }
  var methodsArr = (uiIncludedMethods === null || uiIncludedMethods === void 0 ? void 0 : uiIncludedMethods.length) ? uiIncludedMethods : allMethods;
  return new Set(methodsArr);
};
var DEFAULT_SMS_OTP_EXPIRATION_MS = 1000 * 60 * 2;
function apiMfaMethodToProduct(method) {
  switch (method) {
    case 'totp':
      return internal.B2BMFAProducts.totp;
    case 'sms_otp':
      return internal.B2BMFAProducts.smsOtp;
    default:
      return undefined;
  }
}
var getSmsOtpCodeExpiration = function getSmsOtpCodeExpiration() {
  return new Date(Date.now() + DEFAULT_SMS_OTP_EXPIRATION_MS);
};
var B2B_MFA_METHODS = [internal.B2BMFAProducts.totp, internal.B2BMFAProducts.smsOtp];
var mfaReducer = function mfaReducer(state, action) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
  switch (action.type) {
    case 'primary_authenticate_success':
      {
        var memberAuthenticated = !!action.response.member_session;
        var postAuthScreen = action.resetTokenType === 'multi_tenant_magic_links' ? AppScreens$1.PasswordResetForm : AppScreens$1.LoggedIn;
        if (memberAuthenticated) {
          return Object.assign(Object.assign({}, state), {
            mfa: DEFAULT_MFA_STATE,
            primary: {},
            screen: postAuthScreen
          });
        }
        if (action.response.primary_required) {
          var primaryAuthMethods = getAuthMethodsForMember(action.response.primary_required.allowed_auth_methods, action.response.member);
          var _action$response$memb = action.response.member,
            email = _action$response$memb.email_address,
            emailVerified = _action$response$memb.email_address_verified;
          var newBaseState = Object.assign(Object.assign({}, state), {
            flowState: {
              type: internal.AuthFlowType.Organization,
              organization: action.response.organization
            },
            formState: Object.assign(Object.assign({}, state.formState), {
              passwordState: {
                email: email
              }
            }),
            primary: {
              primaryAuthMethods: primaryAuthMethods,
              email: email,
              emailVerified: emailVerified
            },
            screen: AppScreens$1.Main
          });
          if ((primaryAuthMethods === null || primaryAuthMethods === void 0 ? void 0 : primaryAuthMethods.length) === 0) {
            return Object.assign(Object.assign({}, newBaseState), {
              screen: AppScreens$1.Error,
              errorType: ErrorType.CannotJoinOrgDueToAuthPolicy
            });
          }
          return newBaseState;
        }
        var memberEnrolledInSmsOtp = action.response.member.mfa_phone_number_verified;
        var memberEnrolledInTotp = !!action.response.member.totp_registration_id;
        var primaryInfo = {
          enrolledMfaMethods: [memberEnrolledInTotp && internal.B2BMFAProducts.totp, memberEnrolledInSmsOtp && internal.B2BMFAProducts.smsOtp].filter(extractErrorMessage.isTruthy),
          memberId: action.response.member_id,
          memberPhoneNumber: action.response.member.mfa_phone_number,
          organizationId: action.response.organization.organization_id,
          organizationMfaOptionsSupported: action.response.organization.mfa_methods === 'RESTRICTED' && action.response.organization.allowed_mfa_methods ? (_a = action.response.organization.allowed_mfa_methods) === null || _a === void 0 ? void 0 : _a.map(apiMfaMethodToProduct).filter(extractErrorMessage.isTruthy) : [],
          postAuthScreen: postAuthScreen
        };
        var organizationSupportsMethod = function organizationSupportsMethod(method) {
          return primaryInfo.organizationMfaOptionsSupported.length === 0 || primaryInfo.organizationMfaOptionsSupported.includes(method);
        };
        var getDefaultMethod = function getDefaultMethod() {
          var defaultMethod = apiMfaMethodToProduct(action.response.member.default_mfa_method);
          if (defaultMethod && organizationSupportsMethod(defaultMethod) && primaryInfo.enrolledMfaMethods.includes(defaultMethod)) {
            return defaultMethod;
          }
          return undefined;
        };
        var smsImplicitlySent = ((_b = action.response.mfa_required) === null || _b === void 0 ? void 0 : _b.secondary_auth_initiated) === 'sms_otp';
        var entryMethod = smsImplicitlySent ? internal.B2BMFAProducts.smsOtp : (_c = getDefaultMethod()) !== null && _c !== void 0 ? _c : primaryInfo.enrolledMfaMethods.find(organizationSupportsMethod);
        if (entryMethod) {
          var mfaState = Object.assign(Object.assign({}, DEFAULT_MFA_STATE), {
            primaryInfo: primaryInfo
          });
          switch (entryMethod) {
            case internal.B2BMFAProducts.smsOtp:
              {
                return Object.assign(Object.assign({}, state), {
                  mfa: Object.assign(Object.assign({}, mfaState), {
                    smsOtp: Object.assign(Object.assign({}, DEFAULT_MFA_STATE.smsOtp), {
                      codeExpiration: smsImplicitlySent ? getSmsOtpCodeExpiration() : null
                    })
                  }),
                  primary: {},
                  screen: AppScreens$1.SMSOTPEntry
                });
              }
            case internal.B2BMFAProducts.totp:
              return Object.assign(Object.assign({}, state), {
                mfa: mfaState,
                primary: {},
                screen: AppScreens$1.TOTPEntry
              });
          }
        }
        var enabledMethods = getEnabledMethods({
          allMethods: B2B_MFA_METHODS,
          orgSupportedMethods: primaryInfo.organizationMfaOptionsSupported,
          uiIncludedMethods: action.includedMfaMethods
        });
        var getNextEnrollmentScreen = function getNextEnrollmentScreen() {
          if (enabledMethods.size === 1) {
            if (enabledMethods.has(internal.B2BMFAProducts.totp)) {
              return AppScreens$1.TOTPEnrollmentQRCode;
            }
            if (enabledMethods.has(internal.B2BMFAProducts.smsOtp)) {
              return AppScreens$1.SMSOTPEnrollment;
            }
          }
          return AppScreens$1.MFAEnrollmentSelection;
        };
        return Object.assign(Object.assign({}, state), {
          mfa: Object.assign(Object.assign({}, DEFAULT_MFA_STATE), {
            primaryInfo: primaryInfo,
            isEnrolling: true
          }),
          primary: {},
          screen: getNextEnrollmentScreen()
        });
      }
    case 'mfa/start_enrollment':
      {
        var screen = action.method === internal.B2BMFAProducts.smsOtp ? AppScreens$1.SMSOTPEnrollment : AppScreens$1.TOTPEnrollmentQRCode;
        return Object.assign(Object.assign({}, state), {
          screen: screen
        });
      }
    case 'sms_otp/authenticate_success':
      return Object.assign(Object.assign({}, state), {
        mfa: DEFAULT_MFA_STATE,
        screen: (_e = (_d = state.mfa.primaryInfo) === null || _d === void 0 ? void 0 : _d.postAuthScreen) !== null && _e !== void 0 ? _e : AppScreens$1.LoggedIn
      });
    case 'sms_otp/send':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            isSending: true,
            sendError: null
          })
        })
      });
    case 'sms_otp/send_success':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            isSending: false,
            sendError: null,
            codeExpiration: getSmsOtpCodeExpiration(),
            formattedDestination: (_f = action.formattedPhoneNumber) !== null && _f !== void 0 ? _f : state.mfa.smsOtp.formattedDestination,
            enrolledNumber: action.phoneNumber ? {
              phoneNumber: action.phoneNumber,
              countryCode: action.countryCode
            } : null
          })
        }),
        screen: AppScreens$1.SMSOTPEntry
      });
    case 'sms_otp/send_error':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            isSending: false,
            sendError: action.error,
            codeExpiration: (_g = state.mfa.smsOtp.codeExpiration) !== null && _g !== void 0 ? _g : new Date(Date.now() - 1000)
          })
        })
      });
    case 'sms_otp/format_destination':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          smsOtp: Object.assign(Object.assign({}, state.mfa.smsOtp), {
            formattedDestination: action.formattedPhoneNumber
          })
        })
      });
    case 'sms_otp/navigate_to_entry':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.SMSOTPEntry
      });
    case 'recovery_code/authenticate_success':
      return Object.assign(Object.assign({}, state), {
        mfa: DEFAULT_MFA_STATE,
        screen: (_j = (_h = state.mfa.primaryInfo) === null || _h === void 0 ? void 0 : _h.postAuthScreen) !== null && _j !== void 0 ? _j : AppScreens$1.LoggedIn
      });
    case 'recovery_code/navigate_to_entry':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.RecoveryCodeEntry
      });
    case 'recovery_code/save_acknowledge':
      return Object.assign(Object.assign({}, state), {
        mfa: DEFAULT_MFA_STATE,
        screen: (_l = (_k = state.mfa.primaryInfo) === null || _k === void 0 ? void 0 : _k.postAuthScreen) !== null && _l !== void 0 ? _l : AppScreens$1.LoggedIn
      });
    case 'totp/authenticate_success':
      return Object.assign(Object.assign({}, state), {
        mfa: state.mfa.isEnrolling ? state.mfa : DEFAULT_MFA_STATE,
        screen: state.mfa.isEnrolling ? AppScreens$1.RecoveryCodeSave : (_o = (_m = state.mfa.primaryInfo) === null || _m === void 0 ? void 0 : _m.postAuthScreen) !== null && _o !== void 0 ? _o : AppScreens$1.LoggedIn
      });
    case 'totp/create':
      if (state.mfa.totp.isCreating) {
        return state;
      }
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          totp: Object.assign(Object.assign({}, state.mfa.totp), {
            isCreating: true,
            createError: null
          })
        })
      });
    case 'totp/create_success':
      if (!state.mfa.isEnrolling || ((_p = state.mfa.primaryInfo) === null || _p === void 0 ? void 0 : _p.memberId) !== action.memberId || ((_q = state.mfa.primaryInfo) === null || _q === void 0 ? void 0 : _q.organizationId) !== action.organizationId) {
        return state;
      }
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          totp: Object.assign(Object.assign({}, state.mfa.totp), {
            createError: null,
            isCreating: false,
            enrollment: {
              secret: action.response.secret,
              qrCode: action.response.qr_code,
              recoveryCodes: action.response.recovery_codes,
              method: (_s = (_r = state.mfa.totp.enrollment) === null || _r === void 0 ? void 0 : _r.method) !== null && _s !== void 0 ? _s : 'qr'
            }
          })
        })
      });
    case 'totp/create_error':
      return Object.assign(Object.assign({}, state), {
        mfa: Object.assign(Object.assign({}, state.mfa), {
          totp: Object.assign(Object.assign({}, state.mfa.totp), {
            isCreating: false,
            createError: action.error
          })
        })
      });
    case 'totp/navigate_to_entry':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.TOTPEntry
      });
    case 'totp/show_code':
      {
        if (!state.mfa.isEnrolling || !state.mfa.totp.enrollment) {
          return state;
        }
        var method = (_u = (_t = action.method) !== null && _t !== void 0 ? _t : state.mfa.totp.enrollment.method) !== null && _u !== void 0 ? _u : 'qr';
        return Object.assign(Object.assign({}, state), {
          mfa: Object.assign(Object.assign({}, state.mfa), {
            totp: Object.assign(Object.assign({}, state.mfa.totp), {
              enrollment: Object.assign(Object.assign({}, state.mfa.totp.enrollment), {
                method: method
              })
            })
          }),
          screen: method === 'manual' ? AppScreens$1.TOTPEnrollmentManual : AppScreens$1.TOTPEnrollmentQRCode
        });
      }
    default:
      return state;
  }
};
var reducer = function reducer(state, action) {
  var _a, _b, _c;
  switch (action.type) {
    case 'transition':
      {
        var screenHistory = action.history === 'push' ? [].concat(_toConsumableArray(state.screenHistory), [state.screen]) : [];
        return Object.assign(Object.assign({}, state), {
          screen: action.screen,
          screenHistory: screenHistory
        });
      }
    case 'navigate_back':
      {
        var screen = state.screenHistory.at(-1);
        if (!screen) {
          return state;
        }
        var _screenHistory = state.screenHistory.slice(0, -1);
        return Object.assign(Object.assign({}, state), {
          screen: screen,
          screenHistory: _screenHistory
        });
      }
    case 'set_error_message_and_transition':
      return Object.assign(Object.assign({}, state), {
        screen: AppScreens$1.Error,
        errorType: action.errorType
      });
    case 'set_user_supplied_email':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            emailState: {
              userSuppliedEmail: action.email
            }
          })
        });
      }
    case 'set_organization':
      {
        return Object.assign(Object.assign({}, state), {
          flowState: {
            type: internal.AuthFlowType.Organization,
            organization: action.organization
          }
        });
      }
    case 'set_discovery_state':
      {
        var discoveredOrganizations = action.discoveredOrganizations;
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            discoveryState: {
              email: action.email,
              discoveredOrganizations: discoveredOrganizations
            }
          }),
          screen: AppScreens$1.Discovery
        });
      }
    case 'select_discovered_organization':
      {
        var _action$discoveredOrg = action.discoveredOrganization,
          membership = _action$discoveredOrg.membership,
          organization = _action$discoveredOrg.organization,
          primary_required = _action$discoveredOrg.primary_required;
        var email = (_b = (_a = membership.member) === null || _a === void 0 ? void 0 : _a.email_address) !== null && _b !== void 0 ? _b : state.formState.discoveryState.email;
        var primaryAuthMethods = primary_required ? getAuthMethodsForMember(primary_required.allowed_auth_methods, membership.member) : undefined;
        var newBaseState = Object.assign(Object.assign({}, state), {
          flowState: {
            type: internal.AuthFlowType.Organization,
            organization: organization
          },
          formState: Object.assign(Object.assign({}, state.formState), {
            passwordState: {
              email: email
            }
          }),
          primary: {
            primaryAuthMethods: primaryAuthMethods,
            email: email,
            emailVerified: (_c = membership.member) === null || _c === void 0 ? void 0 : _c.email_address_verified
          },
          screen: AppScreens$1.Main
        });
        if ((primaryAuthMethods === null || primaryAuthMethods === void 0 ? void 0 : primaryAuthMethods.length) === 0) {
          return Object.assign(Object.assign({}, newBaseState), {
            screen: AppScreens$1.Error,
            errorType: ErrorType.CannotJoinOrgDueToAuthPolicy
          });
        }
        return newBaseState;
      }
    case 'set_password_state':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            passwordState: {
              email: action.email
            }
          })
        });
      }
    case 'send_email_otp':
      {
        return Object.assign(Object.assign({}, state), {
          formState: Object.assign(Object.assign({}, state.formState), {
            otpState: {
              codeExpiration: action.codeExpiration
            }
          }),
          screen: AppScreens$1.EmailOTPEntry,
          screenHistory: [].concat(_toConsumableArray(state.screenHistory), [state.screen])
        });
      }
    default:
      return mfaReducer(state, action);
  }
};
var AppScreens$1;
(function (AppScreens) {
  AppScreens["Main"] = "Main";
  AppScreens["EmailConfirmation"] = "Email Confirmation";
  AppScreens["LoggedIn"] = "Logged In";
  AppScreens["Discovery"] = "Discovery";
  AppScreens["Error"] = "Error";
  AppScreens["PasswordEmailForm"] = "Password Email";
  AppScreens["PasswordAuthenticate"] = "Password Authenticate";
  AppScreens["PasswordResetForm"] = "Password Reset Form";
  AppScreens["PasswordResetVerifyConfirmation"] = "Password Reset Verify Confirmation";
  AppScreens["PasswordForgotForm"] = "Password Forgot Form";
  AppScreens["PasswordSetNewConfirmation"] = "Password Set New Confirmation";
  AppScreens["MFAEnrollmentSelection"] = "MFA Enrollment Selection";
  AppScreens["RecoveryCodeEntry"] = "Recovery Code Entry";
  AppScreens["RecoveryCodeSave"] = "Recovery Code Save";
  AppScreens["SMSOTPEnrollment"] = "SMS OTP Enrollment";
  AppScreens["SMSOTPEntry"] = "SMS OTP Entry";
  AppScreens["TOTPEnrollmentManual"] = "TOTP Enrollment Manual";
  AppScreens["TOTPEnrollmentQRCode"] = "TOTP Enrollment QR Code";
  AppScreens["TOTPEntry"] = "TOTP Entry";
  AppScreens["EmailMethodSelection"] = "Email Method Selection";
  AppScreens["EmailOTPEntry"] = "Email OTP Entry";
})(AppScreens$1 || (AppScreens$1 = {}));
var ErrorType;
(function (ErrorType) {
  ErrorType[ErrorType["Default"] = 0] = "Default";
  ErrorType[ErrorType["EmailMagicLink"] = 1] = "EmailMagicLink";
  ErrorType[ErrorType["Organization"] = 2] = "Organization";
  ErrorType[ErrorType["CannotJoinOrgDueToAuthPolicy"] = 3] = "CannotJoinOrgDueToAuthPolicy";
  ErrorType[ErrorType["AdBlockerDetected"] = 4] = "AdBlockerDetected";
})(ErrorType || (ErrorType = {}));
var DEFAULT_STATE = {
  screen: AppScreens$1.Main,
  screenHistory: [],
  formState: {
    emailState: {
      userSuppliedEmail: ''
    },
    otpState: {
      codeExpiration: null
    },
    discoveryState: {
      email: '',
      discoveredOrganizations: []
    },
    passwordState: {
      email: ''
    }
  },
  flowState: {
    type: internal.AuthFlowType.Organization,
    organization: null
  },
  mfa: DEFAULT_MFA_STATE,
  primary: {},
  errorType: ErrorType.Default
};
var DEFAULT_CONFIG = {
  products: [internal.B2BProducts.emailMagicLinks],
  authFlowType: internal.AuthFlowType.Organization,
  sessionOptions: {
    sessionDurationMinutes: 60
  }
};
var GlobalContext = /*#__PURE__*/extractErrorMessage.wn.createContext({
  client: {},
  config: DEFAULT_CONFIG,
  state: [DEFAULT_STATE, function () {
    return null;
  }]
});
var GlobalContextProvider = function GlobalContextProvider(_ref2) {
  var children = _ref2.children,
    client = _ref2.client,
    config = _ref2.config,
    callbacks = _ref2.callbacks,
    initialState = _ref2.initialState;
  var state = extractErrorMessage.wn.useReducer(reducer, initialState !== null && initialState !== void 0 ? initialState : DEFAULT_STATE);
  return /*#__PURE__*/extractErrorMessage.wn.createElement(GlobalContext.Provider, {
    value: {
      client: client,
      state: state,
      config: config,
      callbacks: callbacks
    }
  }, children);
};
var useGlobalContext = function useGlobalContext() {
  return extractErrorMessage.q(GlobalContext);
};
var useStytch = function useStytch() {
  return useGlobalContext().client;
};
var useGlobalReducer = function useGlobalReducer() {
  return useGlobalContext().state;
};
var useConfig = function useConfig() {
  return useGlobalContext().config;
};
var useErrorCallback = function useErrorCallback() {
  var _a, _b;
  return (_b = (_a = useGlobalContext().callbacks) === null || _a === void 0 ? void 0 : _a.onError) !== null && _b !== void 0 ? _b : function () {
    return void 0;
  };
};
var useEventCallback = function useEventCallback() {
  var _a, _b;
  return (_b = (_a = useGlobalContext().callbacks) === null || _a === void 0 ? void 0 : _a.onEvent) !== null && _b !== void 0 ? _b : function () {
    return void 0;
  };
};
var AppScreens;
(function (AppScreens) {
  AppScreens["Main"] = "Main";
  AppScreens["PasskeyRegistrationStart"] = "Register New Passkey";
  AppScreens["PasskeyRegistrationSuccess"] = "Passkey Registration Success";
  AppScreens["PasskeyConfirmation"] = "Passkey Confirmation";
  AppScreens["PasswordCreateOrLogin"] = "Password";
  AppScreens["PasswordResetForm"] = "Password Reset Form";
  AppScreens["PasswordForgot"] = "Password Forgot";
  AppScreens["PasswordBreached"] = "Password Breached";
  AppScreens["PasswordSetNew"] = "Password Set New";
  AppScreens["PasswordDedupe"] = "Password Dedupe";
  AppScreens["PasswordConfirmation"] = "Password Confirmation";
  AppScreens["EmailConfirmation"] = "Email Confirmation";
  AppScreens["OTPAuthenticate"] = "OTP Authenticate";
  AppScreens["OTPConfirmation"] = "OTP Confirmation";
  AppScreens["CryptoConnect"] = "Crypto Connect";
  AppScreens["CryptoSignMessage"] = "Crypto Sign Message";
  AppScreens["CryptoOtherScreen"] = "Crypto Other Screen";
  AppScreens["CryptoSetupWallet"] = "Crypto Setup Wallet";
  AppScreens["CryptoError"] = "Crypto Error";
  AppScreens["CryptoConfirmation"] = "Crypto Confirmation";
})(AppScreens || (AppScreens = {}));
({
  screen: AppScreens.Main,
  formState: {
    magicLinkState: {
      email: ''
    },
    otpState: {
      type: internal.OTPMethods.Email,
      methodId: '',
      otpDestination: ''
    },
    cryptoState: {
      walletAddress: '',
      walletOption: internal.Wallets.Metamask,
      walletChallenge: ''
    },
    passwordState: {
      email: '',
      type: 'new'
    },
    resetPasswordState: {
      token: ''
    },
    errorMessage: ''
  }
});
({
  products: [internal.Products.emailMagicLinks],
  emailMagicLinksOptions: {
    loginRedirectURL: '',
    loginExpirationMinutes: 30,
    signupRedirectURL: '',
    signupExpirationMinutes: 30,
    createUserAsPending: false
  }
});
var DEFAULT_STYLE_CONFIG = {
  container: {
    backgroundColor: '#FFFFFF',
    borderColor: '#ADBCC5',
    borderRadius: '8px',
    width: '400px'
  },
  colors: {
    primary: '#19303D',
    secondary: '#5C727D',
    success: '#0C5A56',
    error: '#8B1214'
  },
  buttons: {
    primary: {
      backgroundColor: '#19303D',
      textColor: '#FFFFFF',
      borderColor: '#19303D',
      borderRadius: '4px'
    },
    secondary: {
      backgroundColor: '#FFFFFF',
      textColor: '#19303D',
      borderColor: '#19303D',
      borderRadius: '4px'
    },
    disabled: {
      backgroundColor: '#F3F5F6',
      textColor: '#8296A1',
      borderColor: '#F3F5F6',
      borderRadius: '4px'
    }
  },
  fontFamily: 'Arial, Helvetica, sans-serif',
  hideHeaderText: false,
  logo: {
    logoImageUrl: ''
  }
};
var defaultDisabledTextColor = '#8296A1';
var createTheme = function createTheme(styles) {
  var displayWatermark = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
  var styleConfig = extractErrorMessage.merge({}, DEFAULT_STYLE_CONFIG, styles);
  return {
    typography: {
      fontFamily: styleConfig.fontFamily,
      header: {
        fontFamily: styleConfig.fontFamily,
        fontSize: 24,
        fontWeight: 600,
        lineHeight: '30px'
      },
      body: {
        fontFamily: styleConfig.fontFamily,
        fontSize: 16,
        fontWeight: 'normal',
        lineHeight: '21px'
      },
      helper: {
        fontFamily: styleConfig.fontFamily,
        fontSize: 14,
        fontWeight: '400',
        lineHeight: '20px',
        whiteSpace: 'pre-wrap'
      }
    },
    colors: {
      primary: styleConfig.colors.primary,
      secondary: styleConfig.colors.secondary,
      success: styleConfig.colors.success,
      error: styleConfig.colors.error,
      disabled: '#F3F5F6',
      disabledText: defaultDisabledTextColor
    },
    container: {
      width: styleConfig.container.width,
      border: "1px solid ".concat(styleConfig.container.borderColor),
      borderRadius: styleConfig.container.borderRadius,
      backgroundColor: styleConfig.container.backgroundColor
    },
    buttons: {
      primary: {
        backgroundColor: styleConfig.buttons.primary.backgroundColor,
        textColor: styleConfig.buttons.primary.textColor,
        border: "1px solid ".concat(styleConfig.buttons.primary.borderColor),
        borderRadius: styleConfig.buttons.primary.borderRadius
      },
      secondary: {
        backgroundColor: styleConfig.buttons.secondary.backgroundColor,
        textColor: styleConfig.buttons.secondary.textColor,
        border: "1px solid ".concat(styleConfig.buttons.secondary.borderColor),
        borderRadius: styleConfig.buttons.secondary.borderRadius
      },
      disabled: {
        textColor: styleConfig.buttons.disabled.textColor,
        backgroundColor: styleConfig.buttons.disabled.backgroundColor,
        border: "1px solid ".concat(styleConfig.buttons.disabled.borderColor),
        borderRadius: styleConfig.buttons.disabled.borderRadius
      }
    },
    inputs: {
      backgroundColor: (_b = (_a = styleConfig.inputs) === null || _a === void 0 ? void 0 : _a.backgroundColor) !== null && _b !== void 0 ? _b : 'transparent',
      textColor: (_d = (_c = styleConfig.inputs) === null || _c === void 0 ? void 0 : _c.textColor) !== null && _d !== void 0 ? _d : styleConfig.colors.primary,
      borderColor: (_f = (_e = styleConfig.inputs) === null || _e === void 0 ? void 0 : _e.borderColor) !== null && _f !== void 0 ? _f : styleConfig.colors.primary,
      borderRadius: (_h = (_g = styleConfig.inputs) === null || _g === void 0 ? void 0 : _g.borderRadius) !== null && _h !== void 0 ? _h : '4px',
      placeholderColor: (_k = (_j = styleConfig.inputs) === null || _j === void 0 ? void 0 : _j.placeholderColor) !== null && _k !== void 0 ? _k : defaultDisabledTextColor
    },
    displayHeader: !styleConfig.hideHeaderText,
    displayWatermark: displayWatermark,
    logo: {
      logoImageUrl: styleConfig.logo.logoImageUrl
    }
  };
};
var useTheme = function useTheme(_ref3) {
  var styles = _ref3.styles,
    displayWatermark = _ref3.displayWatermark;
  return extractErrorMessage.F(function () {
    return createTheme(styles, displayWatermark);
  }, [styles, displayWatermark]);
};
var e = {
    data: ""
  },
  t = function t(_t2) {
    return "object" == (typeof window === "undefined" ? "undefined" : _typeof(window)) ? ((_t2 ? _t2.querySelector("#_goober") : window._goober) || Object.assign((_t2 || document.head).appendChild(document.createElement("style")), {
      innerHTML: " ",
      id: "_goober"
    })).firstChild : _t2 || e;
  },
  l = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
  a = /\/\*[^]*?\*\/|  +/g,
  n$1 = /\n+/g,
  o = function o(e, t) {
    var r = "",
      l = "",
      a = "";
    var _loop = function _loop(_n) {
      var c = e[_n];
      "@" == _n[0] ? "i" == _n[1] ? r = _n + " " + c + ";" : l += "f" == _n[1] ? o(c, _n) : _n + "{" + o(c, "k" == _n[1] ? "" : t) + "}" : "object" == _typeof(c) ? l += o(c, t ? t.replace(/([^,])+/g, function (e) {
        return _n.replace(/(^:.*)|([^,])+/g, function (t) {
          return /&/.test(t) ? t.replace(/&/g, e) : e ? e + " " + t : t;
        });
      }) : _n) : null != c && (_n = /^--/.test(_n) ? _n : _n.replace(/[A-Z]/g, "-$&").toLowerCase(), a += o.p ? o.p(_n, c) : _n + ":" + c + ";");
    };
    for (var _n in e) {
      _loop(_n);
    }
    return r + (t && a ? t + "{" + a + "}" : a) + l;
  },
  c = {},
  s = function s(e) {
    if ("object" == _typeof(e)) {
      var _t3 = "";
      for (var r in e) _t3 += r + s(e[r]);
      return _t3;
    }
    return e;
  },
  i = function i(e, t, r, _i, p) {
    var u = s(e),
      d = c[u] || (c[u] = function (e) {
        var t = 0,
          r = 11;
        for (; t < e.length;) r = 101 * r + e.charCodeAt(t++) >>> 0;
        return "go" + r;
      }(u));
    if (!c[d]) {
      var _t4 = u !== e ? e : function (e) {
        var t,
          r,
          o = [{}];
        for (; t = l.exec(e.replace(a, ""));) t[4] ? o.shift() : t[3] ? (r = t[3].replace(n$1, " ").trim(), o.unshift(o[0][r] = o[0][r] || {})) : o[0][t[1]] = t[2].replace(n$1, " ").trim();
        return o[0];
      }(e);
      c[d] = o(p ? _defineProperty({}, "@keyframes " + d, _t4) : _t4, r ? "" : "." + d);
    }
    var f = r && c.g ? c.g : null;
    return r && (c.g = c[d]), function (e, t, r, l) {
      l ? t.data = t.data.replace(l, e) : -1 === t.data.indexOf(e) && (t.data = r ? e + t.data : t.data + e);
    }(c[d], t, _i, f), d;
  },
  p = function p(e, t, r) {
    return e.reduce(function (e, l, a) {
      var n = t[a];
      if (n && n.call) {
        var _e2 = n(r),
          _t5 = _e2 && _e2.props && _e2.props.className || /^go/.test(_e2) && _e2;
        n = _t5 ? "." + _t5 : _e2 && "object" == _typeof(_e2) ? _e2.props ? "" : o(_e2, "") : !1 === _e2 ? "" : _e2;
      }
      return e + l + (null == n ? "" : n);
    }, "");
  };
function u$1(e) {
  var r = this || {},
    l = e.call ? e(r.p) : e;
  return i(l.unshift ? l.raw ? p(l, [].slice.call(arguments, 1), r.p) : l.reduce(function (e, t) {
    return Object.assign(e, t && t.call ? t(r.p) : t);
  }, {}) : l, t(r.target), r.g, r.o, r.k);
}
var d, f, g;
u$1.bind({
  g: 1
});
var h$1 = u$1.bind({
  k: 1
});
function m(e, t, r, l) {
  o.p = t, d = e, f = r, g = l;
}
function j(e, t) {
  var r = this || {};
  return function () {
    var l = arguments;
    function a(n, o) {
      var c = Object.assign({}, n),
        s = c.className || a.className;
      r.p = Object.assign({
        theme: f && f()
      }, c), r.o = / *go\d+/.test(s), c.className = u$1.apply(r, l) + (s ? " " + s : "");
      var i = e;
      return e[0] && (i = c.as || e, delete c.as), g && i[0] && g(c), d(i, c);
    }
    return a;
  };
}
var W = function W(e) {
    return typeof e == "function";
  },
  T = function T(e, t) {
    return W(e) ? e(t) : e;
  };
var U = function () {
    var e = 0;
    return function () {
      return (++e).toString();
    };
  }(),
  b = function () {
    var e;
    return function () {
      if (e === void 0 && (typeof window === "undefined" ? "undefined" : _typeof(window)) < "u") {
        var _t6 = matchMedia("(prefers-reduced-motion: reduce)");
        e = !_t6 || _t6.matches;
      }
      return e;
    };
  }();
var Q = 20;
var S = new Map(),
  X = 1e3,
  $ = function $(e) {
    if (S.has(e)) return;
    var t = setTimeout(function () {
      S["delete"](e), u({
        type: 4,
        toastId: e
      });
    }, X);
    S.set(e, t);
  },
  J = function J(e) {
    var t = S.get(e);
    t && clearTimeout(t);
  },
  v = function v(e, t) {
    switch (t.type) {
      case 0:
        return _objectSpread(_objectSpread({}, e), {}, {
          toasts: [t.toast].concat(_toConsumableArray(e.toasts)).slice(0, Q)
        });
      case 1:
        return t.toast.id && J(t.toast.id), _objectSpread(_objectSpread({}, e), {}, {
          toasts: e.toasts.map(function (r) {
            return r.id === t.toast.id ? _objectSpread(_objectSpread({}, r), t.toast) : r;
          })
        });
      case 2:
        var _o2 = t.toast;
        return e.toasts.find(function (r) {
          return r.id === _o2.id;
        }) ? v(e, {
          type: 1,
          toast: _o2
        }) : v(e, {
          type: 0,
          toast: _o2
        });
      case 3:
        var _s2 = t.toastId;
        return _s2 ? $(_s2) : e.toasts.forEach(function (r) {
          $(r.id);
        }), _objectSpread(_objectSpread({}, e), {}, {
          toasts: e.toasts.map(function (r) {
            return r.id === _s2 || _s2 === void 0 ? _objectSpread(_objectSpread({}, r), {}, {
              visible: !1
            }) : r;
          })
        });
      case 4:
        return t.toastId === void 0 ? _objectSpread(_objectSpread({}, e), {}, {
          toasts: []
        }) : _objectSpread(_objectSpread({}, e), {}, {
          toasts: e.toasts.filter(function (r) {
            return r.id !== t.toastId;
          })
        });
      case 5:
        return _objectSpread(_objectSpread({}, e), {}, {
          pausedAt: t.time
        });
      case 6:
        var _a2 = t.time - (e.pausedAt || 0);
        return _objectSpread(_objectSpread({}, e), {}, {
          pausedAt: void 0,
          toasts: e.toasts.map(function (r) {
            return _objectSpread(_objectSpread({}, r), {}, {
              pauseDuration: r.pauseDuration + _a2
            });
          })
        });
    }
  },
  A = [],
  P = {
    toasts: [],
    pausedAt: void 0
  },
  u = function u(e) {
    P = v(P, e), A.forEach(function (t) {
      t(P);
    });
  },
  Y = {
    blank: 4e3,
    error: 4e3,
    success: 2e3,
    loading: 1 / 0,
    custom: 4e3
  },
  I = function I() {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _extractErrorMessage$ = extractErrorMessage.h(P),
      _extractErrorMessage$2 = _slicedToArray(_extractErrorMessage$, 2),
      t = _extractErrorMessage$2[0],
      o = _extractErrorMessage$2[1];
    extractErrorMessage.p(function () {
      return A.push(o), function () {
        var a = A.indexOf(o);
        a > -1 && A.splice(a, 1);
      };
    }, [t]);
    var s = t.toasts.map(function (a) {
      var r, c;
      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, e), e[a.type]), a), {}, {
        duration: a.duration || ((r = e[a.type]) == null ? void 0 : r.duration) || (e == null ? void 0 : e.duration) || Y[a.type],
        style: _objectSpread(_objectSpread(_objectSpread({}, e.style), (c = e[a.type]) == null ? void 0 : c.style), a.style)
      });
    });
    return _objectSpread(_objectSpread({}, t), {}, {
      toasts: s
    });
  };
var G = function G(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "blank";
    var o = arguments.length > 2 ? arguments[2] : undefined;
    return _objectSpread(_objectSpread({
      createdAt: Date.now(),
      visible: !0,
      type: t,
      ariaProps: {
        role: "status",
        "aria-live": "polite"
      },
      message: e,
      pauseDuration: 0
    }, o), {}, {
      id: (o == null ? void 0 : o.id) || U()
    });
  },
  h = function h(e) {
    return function (t, o) {
      var s = G(t, e, o);
      return u({
        type: 2,
        toast: s
      }), s.id;
    };
  },
  n = function n(e, t) {
    return h("blank")(e, t);
  };
n.error = h("error");
n.success = h("success");
n.loading = h("loading");
n.custom = h("custom");
n.dismiss = function (e) {
  u({
    type: 3,
    toastId: e
  });
};
n.remove = function (e) {
  return u({
    type: 4,
    toastId: e
  });
};
n.promise = function (e, t, o) {
  var s = n.loading(t.loading, _objectSpread(_objectSpread({}, o), o == null ? void 0 : o.loading));
  return e.then(function (a) {
    return n.success(T(t.success, a), _objectSpread(_objectSpread({
      id: s
    }, o), o == null ? void 0 : o.success)), a;
  })["catch"](function (a) {
    n.error(T(t.error, a), _objectSpread(_objectSpread({
      id: s
    }, o), o == null ? void 0 : o.error));
  }), e;
};
var Z = function Z(e, t) {
    u({
      type: 1,
      toast: {
        id: e,
        height: t
      }
    });
  },
  ee = function ee() {
    u({
      type: 5,
      time: Date.now()
    });
  },
  D = function D(e) {
    var _I = I(e),
      t = _I.toasts,
      o = _I.pausedAt;
    extractErrorMessage.p(function () {
      if (o) return;
      var r = Date.now(),
        c = t.map(function (i) {
          if (i.duration === 1 / 0) return;
          var d = (i.duration || 0) + i.pauseDuration - (r - i.createdAt);
          if (d < 0) {
            i.visible && n.dismiss(i.id);
            return;
          }
          return setTimeout(function () {
            return n.dismiss(i.id);
          }, d);
        });
      return function () {
        c.forEach(function (i) {
          return i && clearTimeout(i);
        });
      };
    }, [t, o]);
    var s = extractErrorMessage.T(function () {
        o && u({
          type: 6,
          time: Date.now()
        });
      }, [o]),
      a = extractErrorMessage.T(function (r, c) {
        var _g$filter;
        var _ref5 = c || {},
          _ref5$reverseOrder = _ref5.reverseOrder,
          i = _ref5$reverseOrder === void 0 ? !1 : _ref5$reverseOrder,
          _ref5$gutter = _ref5.gutter,
          d = _ref5$gutter === void 0 ? 8 : _ref5$gutter,
          p = _ref5.defaultPosition,
          g = t.filter(function (m) {
            return (m.position || p) === (r.position || p) && m.height;
          }),
          E = g.findIndex(function (m) {
            return m.id === r.id;
          }),
          x = g.filter(function (m, R) {
            return R < E && m.visible;
          }).length;
        return (_g$filter = g.filter(function (m) {
          return m.visible;
        })).slice.apply(_g$filter, _toConsumableArray(i ? [x + 1] : [0, x])).reduce(function (m, R) {
          return m + (R.height || 0) + d;
        }, 0);
      }, [t]);
    return {
      toasts: t,
      handlers: {
        updateHeight: Z,
        startPause: ee,
        endPause: s,
        calculateOffset: a
      }
    };
  };
var oe = h$1(_templateObject || (_templateObject = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"]))),
  re = h$1(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),
  se = h$1(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"]))),
  _ = j("div")(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ", ";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ", " 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ", " 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ", ";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ", " 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"])), function (e) {
    return e.primary || "#ff4b4b";
  }, oe, re, function (e) {
    return e.secondary || "#fff";
  }, se);
var ne = h$1(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"]))),
  V = j("div")(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ", ";\n  border-right-color: ", ";\n  animation: ", " 1s linear infinite;\n"])), function (e) {
    return e.secondary || "#e0e0e0";
  }, function (e) {
    return e.primary || "#616161";
  }, ne);
var pe = h$1(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"]))),
  de = h$1(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"]))),
  w = j("div")(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ", ";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ", " 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ", " 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ", ";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"])), function (e) {
    return e.primary || "#61d345";
  }, pe, de, function (e) {
    return e.secondary || "#fff";
  });
var ue = j("div")(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n  position: absolute;\n"]))),
  le = j("div")(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"]))),
  Te = h$1(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),
  fe = j("div")(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ", " 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"])), Te),
  M = function M(_ref6) {
    var e = _ref6.toast;
    var t = e.icon,
      o = e.type,
      s = e.iconTheme;
    return t !== void 0 ? typeof t == "string" ? extractErrorMessage.y(fe, null, t) : t : o === "blank" ? null : extractErrorMessage.y(le, null, extractErrorMessage.y(V, _objectSpread({}, s)), o !== "loading" && extractErrorMessage.y(ue, null, o === "error" ? extractErrorMessage.y(_, _objectSpread({}, s)) : extractErrorMessage.y(w, _objectSpread({}, s))));
  };
var ye = function ye(e) {
    return "\n0% {transform: translate3d(0,".concat(e * -200, "%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n");
  },
  ge = function ge(e) {
    return "\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,".concat(e * -150, "%,-1px) scale(.6); opacity:0;}\n");
  },
  he = "0%{opacity:0;} 100%{opacity:1;}",
  xe = "0%{opacity:1;} 100%{opacity:0;}",
  be = j("div")(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"]))),
  Se = j("div")(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"]))),
  Ae = function Ae(e, t) {
    var s = e.includes("top") ? 1 : -1,
      _ref7 = b() ? [he, xe] : [ye(s), ge(s)],
      _ref8 = _slicedToArray(_ref7, 2),
      a = _ref8[0],
      r = _ref8[1];
    return {
      animation: t ? "".concat(h$1(a), " 0.35s cubic-bezier(.21,1.02,.73,1) forwards") : "".concat(h$1(r), " 0.4s forwards cubic-bezier(.06,.71,.55,1)")
    };
  },
  F = extractErrorMessage.w(function (_ref9) {
    var e = _ref9.toast,
      t = _ref9.position,
      o = _ref9.style,
      s = _ref9.children;
    var a = e.height ? Ae(e.position || t || "top-center", e.visible) : {
        opacity: 0
      },
      r = extractErrorMessage.y(M, {
        toast: e
      }),
      c = extractErrorMessage.y(Se, _objectSpread({}, e.ariaProps), T(e.message, e));
    return extractErrorMessage.y(be, {
      className: e.className,
      style: _objectSpread(_objectSpread(_objectSpread({}, a), o), e.style)
    }, typeof s == "function" ? s({
      icon: r,
      message: c
    }) : extractErrorMessage.y(extractErrorMessage.g, null, r, c));
  });
m(extractErrorMessage.y);
var Ee = function Ee(_ref10) {
    var e = _ref10.id,
      t = _ref10.className,
      o = _ref10.style,
      s = _ref10.onHeightUpdate,
      a = _ref10.children;
    var r = extractErrorMessage.T(function (c) {
      if (c) {
        var _i2 = function _i2() {
          var d = c.getBoundingClientRect().height;
          s(e, d);
        };
        _i2(), new MutationObserver(_i2).observe(c, {
          subtree: !0,
          childList: !0,
          characterData: !0
        });
      }
    }, [e, s]);
    return extractErrorMessage.y("div", {
      ref: r,
      className: t,
      style: o
    }, a);
  },
  Re = function Re(e, t) {
    var o = e.includes("top"),
      s = o ? {
        top: 0
      } : {
        bottom: 0
      },
      a = e.includes("center") ? {
        justifyContent: "center"
      } : e.includes("right") ? {
        justifyContent: "flex-end"
      } : {};
    return _objectSpread(_objectSpread({
      left: 0,
      right: 0,
      display: "flex",
      position: "absolute",
      transition: b() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
      transform: "translateY(".concat(t * (o ? 1 : -1), "px)")
    }, s), a);
  },
  ve = u$1(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"]))),
  O = 16,
  Ie = function Ie(_ref11) {
    var e = _ref11.reverseOrder,
      _ref11$position = _ref11.position,
      t = _ref11$position === void 0 ? "top-center" : _ref11$position,
      o = _ref11.toastOptions,
      s = _ref11.gutter,
      a = _ref11.children,
      r = _ref11.containerStyle,
      c = _ref11.containerClassName;
    var _D = D(o),
      i = _D.toasts,
      d = _D.handlers;
    return extractErrorMessage.y("div", {
      style: _objectSpread({
        position: "fixed",
        zIndex: 9999,
        top: O,
        left: O,
        right: O,
        bottom: O,
        pointerEvents: "none"
      }, r),
      className: c,
      onMouseEnter: d.startPause,
      onMouseLeave: d.endPause
    }, i.map(function (p) {
      var g = p.position || t,
        E = d.calculateOffset(p, {
          reverseOrder: e,
          gutter: s,
          defaultPosition: t
        }),
        x = Re(g, E);
      return extractErrorMessage.y(Ee, {
        id: p.id,
        key: p.id,
        onHeightUpdate: d.updateHeight,
        className: p.visible ? ve : "",
        style: x
      }, p.type === "custom" ? T(p.message, p) : a ? a(p) : extractErrorMessage.y(F, {
        toast: p,
        position: g
      }));
    }));
  };
var _t = n;
var SuccessIcon = function SuccessIcon() {
  return /*#__PURE__*/extractErrorMessage.y("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM8 15L3 10L4.41 8.59L8 12.17L15.59 4.58L17 6L8 15Z",
    fill: "#0F4447"
  }));
};
var ErrorIcon = function ErrorIcon() {
  return /*#__PURE__*/extractErrorMessage.y("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM11 15H9V13H11V15ZM11 11H9V5H11V11Z",
    fill: "#590607"
  }));
};
var baseStyles = {
  display: 'flex',
  gap: '8px',
  padding: '8px',
  fontSize: '14px',
  borderRadius: '4px'
};
var successStyles = Object.assign(Object.assign({}, baseStyles), {
  background: '#ECFFF5',
  boxShadow: '0px 5px 10px rgba(15, 68, 71, 0.18)',
  color: '#0F4447'
});
var errorStyles = Object.assign(Object.assign({}, baseStyles), {
  background: '#FFEEEC',
  boxShadow: '0px 5px 10px rgba(89, 6, 7, 0.2)',
  color: '#590607'
});
var Snackbar = function Snackbar() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Ie, {
    containerStyle: {
      position: 'sticky',
      marginTop: '4px',
      marginBottom: '24px'
    },
    toastOptions: {
      success: {
        style: successStyles,
        icon: /*#__PURE__*/extractErrorMessage.wn.createElement(SuccessIcon, null)
      },
      error: {
        style: errorStyles,
        icon: /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorIcon, null)
      }
    }
  });
};
var itemOrNone = function itemOrNone(item) {
  return item !== null && item !== void 0 ? item : undefined;
};
var spaceOrNone = function spaceOrNone(space) {
  return space ? "".concat(space, "px") : undefined;
};
var Flex = extractErrorMessage.He.div(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["\n  display: ", ";\n\n  flex-direction: ", ";\n  justify-content: ", ";\n  align-items: ", ";\n  flex-grow: ", ";\n  flex-shrink: ", ";\n  order: ", ";\n  align-self: ", ";\n  flex-flow: ", ";\n  flex-wrap: ", ";\n\n  width: ", ";\n  height: ", ";\n  max-width: ", ";\n  max-height: ", ";\n  min-width: ", ";\n  min-height: ", ";\n  padding: ", ";\n  margin: ", ";\n  margin-top: ", ";\n  margin-right: ", ";\n  margin-bottom: ", ";\n  margin-left: ", ";\n  padding-top: ", ";\n  padding-right: ", ";\n  padding-bottom: ", ";\n  padding-left: ", ";\n\n  gap: ", ";\n"])), function (_ref12) {
  var inline = _ref12.inline;
  return inline ? 'inline-flex' : 'flex';
}, function (_ref13) {
  var direction = _ref13.direction;
  return itemOrNone(direction);
}, function (_ref14) {
  var justifyContent = _ref14.justifyContent,
    center = _ref14.center;
  return center ? 'center' : itemOrNone(justifyContent);
}, function (_ref15) {
  var alignItems = _ref15.alignItems,
    center = _ref15.center;
  return center ? 'center' : itemOrNone(alignItems);
}, function (_ref16) {
  var grow = _ref16.grow;
  return itemOrNone(grow);
}, function (_ref17) {
  var shrink = _ref17.shrink;
  return itemOrNone(shrink);
}, function (_ref18) {
  var order = _ref18.order;
  return itemOrNone(order);
}, function (_ref19) {
  var alignSelf = _ref19.alignSelf;
  return itemOrNone(alignSelf);
}, function (_ref20) {
  var flow = _ref20.flow;
  return itemOrNone(flow);
}, function (_ref21) {
  var wrap = _ref21.wrap;
  return itemOrNone(wrap);
}, function (_ref22) {
  var width = _ref22.width;
  return typeof width === 'string' ? width : spaceOrNone(width);
}, function (_ref23) {
  var height = _ref23.height;
  return typeof height === 'string' ? height : spaceOrNone(height);
}, function (_ref24) {
  var maxWidth = _ref24.maxWidth;
  return typeof maxWidth === 'string' ? maxWidth : spaceOrNone(maxWidth);
}, function (_ref25) {
  var maxHeight = _ref25.maxHeight;
  return typeof maxHeight === 'string' ? maxHeight : spaceOrNone(maxHeight);
}, function (_ref26) {
  var minWidth = _ref26.minWidth;
  return typeof minWidth === 'string' ? minWidth : spaceOrNone(minWidth);
}, function (_ref27) {
  var minHeight = _ref27.minHeight;
  return typeof minHeight === 'string' ? minHeight : spaceOrNone(minHeight);
}, function (_ref28) {
  var padding = _ref28.padding;
  return spaceOrNone(padding);
}, function (_ref29) {
  var margin = _ref29.margin;
  return spaceOrNone(margin);
}, function (_ref30) {
  var marginTop = _ref30.marginTop;
  return spaceOrNone(marginTop);
}, function (_ref31) {
  var marginRight = _ref31.marginRight;
  return spaceOrNone(marginRight);
}, function (_ref32) {
  var marginBottom = _ref32.marginBottom;
  return spaceOrNone(marginBottom);
}, function (_ref33) {
  var marginLeft = _ref33.marginLeft;
  return spaceOrNone(marginLeft);
}, function (_ref34) {
  var paddingTop = _ref34.paddingTop;
  return spaceOrNone(paddingTop);
}, function (_ref35) {
  var paddingRight = _ref35.paddingRight;
  return spaceOrNone(paddingRight);
}, function (_ref36) {
  var paddingBottom = _ref36.paddingBottom;
  return spaceOrNone(paddingBottom);
}, function (_ref37) {
  var paddingLeft = _ref37.paddingLeft;
  return spaceOrNone(paddingLeft);
}, function (_ref38) {
  var gap = _ref38.gap;
  return spaceOrNone(gap);
});
var Text = extractErrorMessage.He.div(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["\n  color: ", ";\n  text-align: ", ";\n  ", ";\n"])), function (props) {
  return props.color && props.theme.colors[props.color];
}, function (props) {
  return props.align;
}, function (props) {
  return props.size && props.theme.typography[props.size];
});
Text.defaultProps = {
  size: 'body',
  color: 'primary',
  align: 'left'
};
var ErrorSVG = function ErrorSVG() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    width: "200",
    height: "200",
    viewBox: "0 0 200 200",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("g", {
    opacity: "0.1"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M99.9999 0C155.229 0 200 44.7715 200 99.9999C200 155.229 155.229 200 99.9999 200C44.7715 200 0 155.229 0 99.9999C0 44.7715 44.7715 0 99.9999 0Z",
    fill: "url(#paint0_linear_4408_12810)"
  })), /*#__PURE__*/extractErrorMessage.wn.createElement("g", {
    opacity: "0.3"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M99.9993 17.5723C145.523 17.5723 182.427 54.4762 182.427 99.9993C182.427 145.523 145.523 182.427 99.9993 182.427C54.4762 182.427 17.5723 145.523 17.5723 99.9993C17.5723 54.4762 54.4762 17.5723 99.9993 17.5723Z",
    fill: "url(#paint1_linear_4408_12810)"
  })), /*#__PURE__*/extractErrorMessage.wn.createElement("g", {
    opacity: "0.7"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M99.9987 32.2305C137.487 32.2305 167.877 62.6203 167.877 100.108C167.877 137.596 137.487 167.986 99.9987 167.986C62.5109 167.986 32.1211 137.596 32.1211 100.108C32.1211 62.6203 62.5109 32.2305 99.9987 32.2305Z",
    fill: "url(#paint2_linear_4408_12810)"
  })), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M100 45.8334C70.1 45.8334 45.8333 70.1 45.8333 100C45.8333 129.9 70.1 154.167 100 154.167C129.9 154.167 154.167 129.9 154.167 100C154.167 70.1 129.9 45.8334 100 45.8334ZM105.417 127.083H94.5833V116.25H105.417V127.083ZM105.417 105.417H94.5833V72.9167H105.417V105.417Z",
    fill: "#8B1214"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("defs", null, /*#__PURE__*/extractErrorMessage.wn.createElement("linearGradient", {
    id: "paint0_linear_4408_12810",
    x1: "-87.1375",
    y1: "160.384",
    x2: "169.669",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("stop", {
    offset: "1",
    stopColor: "#8B1214"
  })), /*#__PURE__*/extractErrorMessage.wn.createElement("linearGradient", {
    id: "paint1_linear_4408_12810",
    x1: "-87.138",
    y1: "160.384",
    x2: "169.668",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("stop", {
    stopColor: "#F7F0F0"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("stop", {
    offset: "1",
    stopColor: "#8B1214"
  })), /*#__PURE__*/extractErrorMessage.wn.createElement("linearGradient", {
    id: "paint2_linear_4408_12810",
    x1: "-87.1386",
    y1: "160.493",
    x2: "169.668",
    y2: "338.405",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("stop", {
    stopColor: "#8B1214",
    stopOpacity: "0.01"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("stop", {
    offset: "1",
    stopColor: "#E4C7C7"
  }))));
};
var ErrorHeader = extractErrorMessage.He(Text)(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["\n  text-align: center;\n"])));
var ErrorScreen = function ErrorScreen() {
  var _a, _b;
  var _useGlobalReducer = useGlobalReducer(),
    _useGlobalReducer2 = _slicedToArray(_useGlobalReducer, 1),
    state = _useGlobalReducer2[0];
  var currentErrorType = state.errorType;
  var ErrorTypeMap = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, ErrorType.Default, 'Something went wrong. Try again later or contact your admin for help.'), ErrorType.EmailMagicLink, 'Something went wrong. Your login link may have expired, been revoked, or been used more than once. Request a new login link to try again, or contact your admin for help.'), ErrorType.Organization, 'The organization you are looking for could not be found. If you think this is a mistake, contact your admin.'), ErrorType.CannotJoinOrgDueToAuthPolicy, "Unable to join due to ".concat((_b = (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.organization_name) !== null && _b !== void 0 ? _b : 'the organization', "'s authentication policy. Please contact your admin for more information.")), ErrorType.AdBlockerDetected, 'The request was blocked by an Ad Blocker. Please disable your ad blocker, refresh the page, and try again.');
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24,
    alignItems: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorHeader, {
    size: "header"
  }, "Looks like there was an error!"), /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorSVG, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, ErrorTypeMap[currentErrorType]));
};
var Input = extractErrorMessage.He.input(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  height: 47px;\n  padding: 0 8px;\n  box-sizing: border-box;\n  border: 1px solid ", ";\n  border-radius: ", ";\n  color: ", ";\n  font-family: ", ";\n  font-size: 18px;\n  &::placeholder {\n    color: ", ";\n  }\n\n  &:disabled {\n    border: 1px solid ", ";\n    color: ", ";\n    background-color: ", ";\n  }\n"])), function (props) {
  return props.theme.inputs.backgroundColor;
}, function (props) {
  return props.theme.inputs.borderColor;
}, function (props) {
  return props.theme.inputs.borderRadius;
}, function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  return props.theme.inputs.placeholderColor;
}, function (props) {
  return props.theme.colors.disabledText;
}, function (props) {
  return props.theme.colors.disabledText;
}, function (props) {
  return props.theme.colors.disabled;
});
var EmailInput = function EmailInput(_ref39) {
  var email = _ref39.email,
    setEmail = _ref39.setEmail,
    _ref39$disableInput = _ref39.disableInput,
    disableInput = _ref39$disableInput === void 0 ? false : _ref39$disableInput,
    _ref39$hasPasskeys = _ref39.hasPasskeys,
    hasPasskeys = _ref39$hasPasskeys === void 0 ? false : _ref39$hasPasskeys;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Input, Object.assign({
    placeholder: "example@email.com",
    name: "email",
    type: "email",
    autoComplete: hasPasskeys ? 'email webauthn' : 'email',
    disabled: disableInput,
    id: "email-input",
    value: email,
    onChange: function onChange(e) {
      return setEmail(e.target.value);
    },
    required: true
  }, hasPasskeys ? extractErrorMessage.passwordManagerDisableAutofillProps : {}));
};
var DASHBOARD_REGEX = /https:\/\/stytch\.com\/[#a-zA-Z0-9/-]+/g;
var mapURLsToLinks = function mapURLsToLinks(str) {
  var nonLinkChunks = str.split(DASHBOARD_REGEX);
  var linkChunks = Array.from(str.matchAll(DASHBOARD_REGEX)).map(function (el) {
    return el[0];
  });
  var chunkResults = [];
  while (nonLinkChunks.length || linkChunks.length) {
    if (nonLinkChunks.length) {
      chunkResults.push(nonLinkChunks.shift());
    }
    if (linkChunks.length) {
      var chunk = linkChunks.shift();
      chunkResults.push( /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
        key: chunk + '__' + String(linkChunks.length),
        href: chunk,
        target: "_blank",
        rel: "noreferrer"
      }, chunk));
    }
  }
  return chunkResults;
};
var ErrorText = function ErrorText(_ref40) {
  var errorMessage = _ref40.errorMessage;
  var tokens = extractErrorMessage.F(function () {
    return mapURLsToLinks(errorMessage);
  }, [errorMessage]);
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "error"
  }, tokens);
};
var Button = extractErrorMessage.He.button(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["\n  all: unset;\n  width: 100%;\n  height: 45px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 18px;\n  text-transform: none;\n  font-family: ", ";\n  box-shadow: none;\n  text-align: center;\n\n  ", "\n\n  &:disabled {\n    background-color: ", ";\n    color: ", ";\n    border: ", ";\n    border-radius: ", ";\n    cursor: not-allowed;\n  }\n"])), function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  switch (props.variant) {
    case 'primary':
      return "\n          border: ".concat(props.theme.buttons.primary.border, ";\n          border-radius: ").concat(props.theme.buttons.primary.borderRadius, ";\n          color: ").concat(props.theme.buttons.primary.textColor, ";\n          background-color: ").concat(props.theme.buttons.primary.backgroundColor, ";\n        ");
    case 'outlined':
      return "\n          border: ".concat(props.theme.buttons.secondary.border, ";\n          border-radius: ").concat(props.theme.buttons.secondary.borderRadius, ";\n          color: ").concat(props.theme.buttons.secondary.textColor, ";\n          background-color: ").concat(props.theme.buttons.secondary.backgroundColor, ";\n        ");
    case 'text':
      return "\n          color: ".concat(props.theme.colors.primary, ";\n          background-color: transparent;\n          font-weight: 600;\n        ");
  }
}, function (props) {
  return props.theme.buttons.disabled.backgroundColor;
}, function (props) {
  return props.theme.buttons.disabled.textColor;
}, function (props) {
  return props.theme.buttons.disabled.border;
}, function (props) {
  return props.theme.buttons.disabled.borderRadius;
});
Button.defaultProps = {
  variant: 'primary'
};
var circularRotateKeyframe = extractErrorMessage.Ue(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n"])));
var circularDashKeyframe = extractErrorMessage.Ue(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n"])));
var AnimatedCircle = extractErrorMessage.He.circle(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["\n  stroke-dasharray: 80px, 200px;\n  stroke-dashoffset: 0;\n  animation: ", " 1.4s ease-in-out infinite;\n  stroke: ", ";\n  fill: none;\n"])), circularDashKeyframe, function (props) {
  return props.theme.colors.primary;
});
var CircularProgressRoot = extractErrorMessage.He.div(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral(["\n  width: ", "px;\n  height: ", "px;\n  animation: ", " 1.4s ease-in-out infinite;\n"])), function (props) {
  return props.size;
}, function (props) {
  return props.size;
}, circularRotateKeyframe);
var CircularProgressSVG = extractErrorMessage.He.svg(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["\n  display: block;\n"])));
var CircularProgress = function CircularProgress(_ref41) {
  var size = _ref41.size,
    thickness = _ref41.thickness;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(CircularProgressRoot, {
    size: size
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(CircularProgressSVG, {
    viewBox: "".concat(size / 2, " ").concat(size / 2, " ").concat(size, " ").concat(size)
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(AnimatedCircle, {
    cx: size,
    cy: size,
    r: (size - thickness) / 2,
    fill: "none",
    strokeWidth: thickness
  })));
};
var LoadingButton = function LoadingButton(_a) {
  var children = _a.children,
    isLoading = _a.isLoading,
    buttonProps = internal.__rest(_a, ["children", "isLoading"]);
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Button, Object.assign({}, buttonProps), isLoading ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(CircularProgress, {
    size: 18,
    thickness: 1,
    "data-testid": "loading-icon"
  }))) : children);
};
var SubmitButton = function SubmitButton(_ref42) {
  var isSubmitting = _ref42.isSubmitting,
    disabled = _ref42.disabled,
    text = _ref42.text,
    variant = _ref42.variant;
  var buttonDisabled = isSubmitting || disabled;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingButton, {
    isLoading: isSubmitting,
    type: "submit",
    disabled: buttonDisabled,
    variant: variant
  }, text);
};
var getParamsFromB2BOAuthProviderConfig = function getParamsFromB2BOAuthProviderConfig(provider) {
  var providerType = '';
  var oneTap = false;
  var customScopes = [];
  var providerParams = {};
  if (typeof provider === 'string') {
    providerType = provider;
  } else {
    providerType = provider.type;
    if (provider.type === internal.B2BOAuthProviders.Google && 'one_tap' in provider) {
      oneTap = provider.one_tap;
    }
    customScopes = provider.customScopes || [];
    providerParams = provider.providerParams || {};
  }
  var oauthProvider = providerType;
  return {
    type: oauthProvider,
    one_tap: oneTap,
    customScopes: customScopes,
    providerParams: providerParams
  };
};
var productsToAuthMethods = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, internal.B2BProducts.oauth, undefined), internal.B2BProducts.sso, 'sso'), internal.B2BProducts.emailMagicLinks, 'magic_link'), internal.B2BProducts.emailOtp, 'email_otp'), internal.B2BProducts.passwords, 'password');
var oauthProvidersToAuthMethods = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, internal.B2BOAuthProviders.Google, 'google_oauth'), internal.B2BOAuthProviders.Microsoft, 'microsoft_oauth'), internal.B2BOAuthProviders.HubSpot, 'hubspot_oauth'), internal.B2BOAuthProviders.Slack, 'slack_oauth'), internal.B2BOAuthProviders.GitHub, 'github_oauth');
var authMethodsToProducts = Object.entries(productsToAuthMethods).reduce(function (acc, _ref43) {
  var _ref44 = _slicedToArray(_ref43, 2),
    product = _ref44[0],
    method = _ref44[1];
  if (method) {
    acc[method] = product;
  }
  return acc;
}, {});
var oauthMethodsToOauthProviders = Object.entries(oauthProvidersToAuthMethods).reduce(function (acc, _ref45) {
  var _ref46 = _slicedToArray(_ref45, 2),
    provider = _ref46[0],
    method = _ref46[1];
  acc[method] = provider;
  return acc;
}, {});
var oauthProviderToAuthMethod = function oauthProviderToAuthMethod(provider) {
  return oauthProvidersToAuthMethods[provider];
};
var oauthMethodToOauthProvider = function oauthMethodToOauthProvider(authMethod) {
  return oauthMethodsToOauthProviders[authMethod];
};
var productToAuthMethod = function productToAuthMethod(product) {
  return productsToAuthMethods[product];
};
var authMethodToProduct = function authMethodToProduct(authMethod) {
  if (authMethod in oauthMethodsToOauthProviders) {
    return internal.B2BProducts.oauth;
  }
  return authMethodsToProducts[authMethod];
};
var allProducts = Object.keys(productsToAuthMethods);
var allOauthProviders = Object.values(internal.B2BOAuthProviders);
var flattenConfigToAuthMethods = function flattenConfigToAuthMethods(products, oauthProviders) {
  return products.reduce(function (acc, product) {
    if (product === internal.B2BProducts.oauth) {
      oauthProviders.forEach(function (provider) {
        var authMethod = oauthProviderToAuthMethod(typeof provider === 'string' ? provider : provider.type);
        if (authMethod) {
          acc.push(authMethod);
        }
      });
    } else {
      var authMethod = productToAuthMethod(product);
      if (authMethod) {
        acc.push(authMethod);
      }
    }
    return acc;
  }, []);
};
var useOAuthProviderConfigs = function useOAuthProviderConfigs() {
  var _a;
  var config = useConfig();
  return extractErrorMessage.F(function () {
    var _a;
    if (!((_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.providers)) {
      return [];
    }
    return config.oauthOptions.providers.map(getParamsFromB2BOAuthProviderConfig);
  }, [(_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.providers]);
};
var useRestrictedAuthMethods = function useRestrictedAuthMethods() {
  var _a, _b;
  var _useGlobalReducer3 = useGlobalReducer(),
    _useGlobalReducer4 = _slicedToArray(_useGlobalReducer3, 1),
    state = _useGlobalReducer4[0];
  var primaryAuthMethods = state.primary.primaryAuthMethods;
  var hasPrimaryAuthMethods = !!primaryAuthMethods;
  var restrictedAuthMethods = extractErrorMessage.F(function () {
    var _a, _b, _c;
    if (state.primary.primaryAuthMethods) {
      return new Set(state.primary.primaryAuthMethods);
    }
    if (((_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.auth_methods) === 'RESTRICTED') {
      return new Set((_c = (_b = state.flowState.organization) === null || _b === void 0 ? void 0 : _b.allowed_auth_methods) !== null && _c !== void 0 ? _c : []);
    }
  }, [(_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.allowed_auth_methods, (_b = state.flowState.organization) === null || _b === void 0 ? void 0 : _b.auth_methods, state.primary.primaryAuthMethods]);
  return {
    restrictedAuthMethods: restrictedAuthMethods,
    hasPrimaryAuthMethods: hasPrimaryAuthMethods
  };
};
var useEffectiveAuthConfig = function useEffectiveAuthConfig() {
  var _a;
  var _useGlobalReducer5 = useGlobalReducer(),
    _useGlobalReducer6 = _slicedToArray(_useGlobalReducer5, 1),
    state = _useGlobalReducer6[0];
  var config = useConfig();
  var _useRestrictedAuthMet = useRestrictedAuthMethods(),
    restrictedAuthMethods = _useRestrictedAuthMet.restrictedAuthMethods,
    hasPrimaryAuthMethods = _useRestrictedAuthMet.hasPrimaryAuthMethods;
  var oauthProviderConfigs = useOAuthProviderConfigs();
  var flattenedConfiguredAuthMethods = extractErrorMessage.F(function () {
    return flattenConfigToAuthMethods(config.products, oauthProviderConfigs);
  }, [config.products, oauthProviderConfigs]);
  var authMethodsToShow = extractErrorMessage.F(function () {
    var _a;
    if (!restrictedAuthMethods) {
      return flattenedConfiguredAuthMethods;
    }
    var restrictedAuthMethodsInUiConfig = flattenedConfiguredAuthMethods.filter(function (authMethod) {
      return restrictedAuthMethods.has(authMethod);
    });
    if (restrictedAuthMethodsInUiConfig.length > 0 || !hasPrimaryAuthMethods) {
      return restrictedAuthMethodsInUiConfig;
    }
    if (((_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.auth_methods) === 'RESTRICTED') {
      return flattenConfigToAuthMethods(allProducts, allOauthProviders).filter(function (authMethod) {
        return restrictedAuthMethods.has(authMethod);
      });
    }
    return ['magic_link'];
  }, [flattenedConfiguredAuthMethods, hasPrimaryAuthMethods, restrictedAuthMethods, (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.auth_methods]);
  var products = extractErrorMessage.F(function () {
    return _toConsumableArray(new Set(authMethodsToShow.map(authMethodToProduct).filter(extractErrorMessage.isTruthy)));
  }, [authMethodsToShow]);
  var oauthProviderSettings = extractErrorMessage.F(function () {
    return authMethodsToShow.map(function (authMethod) {
      var _a;
      var provider = oauthMethodToOauthProvider(authMethod);
      if (provider) {
        return (_a = oauthProviderConfigs.find(function (oauthProvider) {
          return oauthProvider.type === provider;
        })) !== null && _a !== void 0 ? _a : getParamsFromB2BOAuthProviderConfig(provider);
      }
    }).filter(extractErrorMessage.isTruthy);
  }, [authMethodsToShow, oauthProviderConfigs]);
  return {
    products: products,
    oauthProviderSettings: oauthProviderSettings
  };
};
var DEFAULT_OTP_EXPIRATION_MS = 1000 * 60 * 10;
var getOtpCodeExpiration = function getOtpCodeExpiration() {
  return new Date(Date.now() + DEFAULT_OTP_EXPIRATION_MS);
};
var mutation = function mutation() {
  return function (key, fetcher) {
    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _extractErrorMessage$3 = extractErrorMessage.useSWRConfig(),
      mutate = _extractErrorMessage$3.mutate;
    var keyRef = extractErrorMessage._(key);
    var fetcherRef = extractErrorMessage._(fetcher);
    var configRef = extractErrorMessage._(config);
    var ditchMutationsUntilRef = extractErrorMessage._(0);
    var _extractErrorMessage$4 = extractErrorMessage.useStateWithDeps({
        data: extractErrorMessage.UNDEFINED,
        error: extractErrorMessage.UNDEFINED,
        isMutating: false
      }),
      _extractErrorMessage$5 = _slicedToArray(_extractErrorMessage$4, 3),
      stateRef = _extractErrorMessage$5[0],
      stateDependencies = _extractErrorMessage$5[1],
      setState = _extractErrorMessage$5[2];
    var currentState = stateRef.current;
    var trigger = extractErrorMessage.T( /*#__PURE__*/function () {
      var _ref47 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arg, opts) {
        var _extractErrorMessage$6, _extractErrorMessage$7, serializedKey, resolvedKey, options, mutationStartedAt, data;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _extractErrorMessage$6 = extractErrorMessage.serialize(keyRef.current), _extractErrorMessage$7 = _slicedToArray(_extractErrorMessage$6, 2), serializedKey = _extractErrorMessage$7[0], resolvedKey = _extractErrorMessage$7[1];
              if (fetcherRef.current) {
                _context.next = 3;
                break;
              }
              throw new Error('Can’t trigger the mutation: missing fetcher.');
            case 3:
              if (serializedKey) {
                _context.next = 5;
                break;
              }
              throw new Error('Can’t trigger the mutation: missing key.');
            case 5:
              options = extractErrorMessage.mergeObjects(extractErrorMessage.mergeObjects({
                populateCache: false,
                throwOnError: true
              }, configRef.current), opts);
              mutationStartedAt = extractErrorMessage.getTimestamp();
              ditchMutationsUntilRef.current = mutationStartedAt;
              setState({
                isMutating: true
              });
              _context.prev = 9;
              _context.next = 12;
              return mutate(serializedKey, fetcherRef.current(resolvedKey, {
                arg: arg
              }), extractErrorMessage.mergeObjects(options, {
                throwOnError: true
              }));
            case 12:
              data = _context.sent;
              if (ditchMutationsUntilRef.current <= mutationStartedAt) {
                setState({
                  data: data,
                  isMutating: false,
                  error: undefined
                });
                options.onSuccess == null ? void 0 : options.onSuccess(data, serializedKey, options);
              }
              return _context.abrupt("return", data);
            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](9);
              if (!(ditchMutationsUntilRef.current <= mutationStartedAt)) {
                _context.next = 24;
                break;
              }
              setState({
                error: _context.t0,
                isMutating: false
              });
              options.onError == null ? void 0 : options.onError(_context.t0, serializedKey, options);
              if (!options.throwOnError) {
                _context.next = 24;
                break;
              }
              throw _context.t0;
            case 24:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[9, 17]]);
      }));
      return function (_x, _x2) {
        return _ref47.apply(this, arguments);
      };
    }(), []);
    var reset = extractErrorMessage.T(function () {
      ditchMutationsUntilRef.current = extractErrorMessage.getTimestamp();
      setState({
        data: extractErrorMessage.UNDEFINED,
        error: extractErrorMessage.UNDEFINED,
        isMutating: false
      });
    }, []);
    extractErrorMessage.useIsomorphicLayoutEffect(function () {
      keyRef.current = key;
      fetcherRef.current = fetcher;
      configRef.current = config;
    });
    return {
      trigger: trigger,
      reset: reset,
      get data() {
        stateDependencies.data = true;
        return currentState.data;
      },
      get error() {
        stateDependencies.error = true;
        return currentState.error;
      },
      get isMutating() {
        stateDependencies.isMutating = true;
        return currentState.isMutating;
      }
    };
  };
};
var index = extractErrorMessage.withMiddleware(extractErrorMessage.useSWR, mutation);
var KeyToStytchEventMap = {
  'stytch.magicLinks.authenticate': internal.StytchEventType.B2BMagicLinkAuthenticate,
  'stytch.sso.authenticate': internal.StytchEventType.B2BSSOAuthenticate,
  'stytch.magicLinks.discovery.authenticate': internal.StytchEventType.B2BMagicLinkDiscoveryAuthenticate,
  'stytch.discovery.organization.create': internal.StytchEventType.B2BDiscoveryOrganizationsCreate,
  'stytch.discovery.intermediateSessions.exchange': internal.StytchEventType.B2BDiscoveryIntermediateSessionExchange,
  'stytch.magicLinks.email.loginOrSignup': internal.StytchEventType.B2BMagicLinkEmailLoginOrSignup,
  'stytch.magicLinks.discovery.send': internal.StytchEventType.B2BMagicLinkEmailDiscoverySend,
  'stytch.oauth.authenticate': internal.StytchEventType.B2BOAuthAuthenticate,
  'stytch.oauth.discovery.authenticate': internal.StytchEventType.B2BOAuthDiscoveryAuthenticate,
  'stytch.otps.sms.send': internal.StytchEventType.B2BSMSOTPSend,
  'stytch.otps.sms.authenticate': internal.StytchEventType.B2BSMSOTPAuthenticate,
  'stytch.totp.create': internal.StytchEventType.B2BTOTPCreate,
  'stytch.totp.authenticate': internal.StytchEventType.B2BTOTPAuthenticate,
  'stytch.recoveryCodes.recover': internal.StytchEventType.B2BRecoveryCodesRecover
};
var useMutate = function useMutate(key, fetcher, options) {
  var onEvent = useEventCallback();
  var _onError = useErrorCallback();
  return index(key, fetcher, Object.assign(Object.assign({
    throwOnError: false
  }, options), {
    onSuccess: function onSuccess(data, key, config) {
      if (KeyToStytchEventMap[key]) {
        onEvent({
          type: KeyToStytchEventMap[key],
          data: data
        });
      }
      (options === null || options === void 0 ? void 0 : options.onSuccess) && options.onSuccess(data, key, config);
    },
    onError: function onError(error, key, config) {
      _onError(error);
      (options === null || options === void 0 ? void 0 : options.onError) && options.onError(error, key, config);
    }
  }));
};
var useExtractSlug = function useExtractSlug() {
  var _useGlobalReducer7 = useGlobalReducer(),
    _useGlobalReducer8 = _slicedToArray(_useGlobalReducer7, 2),
    state = _useGlobalReducer8[0],
    dispatch = _useGlobalReducer8[1];
  var _extractErrorMessage$8 = extractErrorMessage.h(),
    _extractErrorMessage$9 = _slicedToArray(_extractErrorMessage$8, 2),
    pattern = _extractErrorMessage$9[0],
    setPattern = _extractErrorMessage$9[1];
  var stytchClient = useStytch();
  var slug = extractFromPattern(pattern || null, window.location.href);
  var _useMutate = useMutate('stytchClient.organization.getBySlug', function (_, _ref48) {
      var slug = _ref48.arg.slug;
      return stytchClient.organization.getBySlug({
        organization_slug: slug
      });
    }, {
      onSuccess: function onSuccess(_ref49) {
        var organization = _ref49.organization;
        if (organization === null) {
          dispatch({
            type: 'set_error_message_and_transition',
            errorType: ErrorType.Organization
          });
        } else {
          dispatch({
            type: 'set_organization',
            organization: Object.assign({}, organization)
          });
        }
      }
    }),
    trigger = _useMutate.trigger,
    isSearching = _useMutate.isMutating;
  extractErrorMessage.p(function () {
    internal.readB2BInternals(stytchClient).bootstrap.getAsync().then(function (_ref50) {
      var slugPattern = _ref50.slugPattern;
      setPattern(slugPattern);
    });
  }, [stytchClient]);
  extractErrorMessage.p(function () {
    if (slug !== null && state.flowState.organization === null && state.screen === AppScreens$1.Main && state.flowState.type == internal.AuthFlowType.Organization) {
      trigger({
        slug: slug
      });
    }
  }, [slug, state.flowState, state.screen]);
  return {
    isSearching: isSearching,
    slug: slug,
    pattern: pattern
  };
};
var useBootstrap = function useBootstrap() {
  var stytchClient = useStytch();
  var _extractErrorMessage$10 = extractErrorMessage.h(internal.readB2BInternals(stytchClient).bootstrap.getSync()),
    _extractErrorMessage$11 = _slicedToArray(_extractErrorMessage$10, 2),
    boostrap = _extractErrorMessage$11[0],
    setBootstrap = _extractErrorMessage$11[1];
  extractErrorMessage.p(function () {
    internal.readB2BInternals(stytchClient).bootstrap.getAsync().then(function (data) {
      setBootstrap(data);
    });
  }, [stytchClient]);
  return boostrap;
};
var onAuthenticateSuccess = function onAuthenticateSuccess(data, dispatch, config) {
  dispatch({
    type: 'primary_authenticate_success',
    response: data,
    includedMfaMethods: config.mfaProductInclude
  });
};
var onDiscoveryAuthenticateSuccess = function onDiscoveryAuthenticateSuccess(data, dispatch) {
  dispatch({
    type: 'set_discovery_state',
    email: data.email_address,
    discoveredOrganizations: data.discovered_organizations
  });
};
var usePasswordInput = function usePasswordInput() {
  var _useGlobalReducer9 = useGlobalReducer(),
    _useGlobalReducer10 = _slicedToArray(_useGlobalReducer9, 2),
    state = _useGlobalReducer10[0],
    dispatch = _useGlobalReducer10[1];
  var config = useConfig();
  var stytch = useStytch();
  var onEvent = useEventCallback();
  var onError = useErrorCallback();
  var _extractErrorMessage$12 = extractErrorMessage.h(state.formState.passwordState.email),
    _extractErrorMessage$13 = _slicedToArray(_extractErrorMessage$12, 2),
    email = _extractErrorMessage$13[0],
    setEmail = _extractErrorMessage$13[1];
  var _extractErrorMessage$14 = extractErrorMessage.h(''),
    _extractErrorMessage$15 = _slicedToArray(_extractErrorMessage$14, 2),
    password = _extractErrorMessage$15[0],
    setPassword = _extractErrorMessage$15[1];
  var _extractErrorMessage$16 = extractErrorMessage.h(''),
    _extractErrorMessage$17 = _slicedToArray(_extractErrorMessage$16, 2),
    errorMessage = _extractErrorMessage$17[0],
    setErrorMessage = _extractErrorMessage$17[1];
  var _extractErrorMessage$18 = extractErrorMessage.h(false),
    _extractErrorMessage$19 = _slicedToArray(_extractErrorMessage$18, 2),
    isSubmitting = _extractErrorMessage$19[0],
    setIsSubmitting = _extractErrorMessage$19[1];
  var organization = state.flowState.organization;
  var submitPassword = function submitPassword(organization_id) {
    var _a, _b;
    setErrorMessage('');
    setIsSubmitting(true);
    stytch.passwords.authenticate({
      email_address: email,
      organization_id: organization_id,
      password: password,
      session_duration_minutes: (_b = (_a = config.sessionOptions) === null || _a === void 0 ? void 0 : _a.sessionDurationMinutes) !== null && _b !== void 0 ? _b : internal.DEFAULT_SESSION_DURATION_MINUTES
    }).then(function (data) {
      setIsSubmitting(false);
      onEvent({
        type: internal.StytchEventType.B2BPasswordAuthenticate,
        data: data
      });
      onAuthenticateSuccess(data, dispatch, config);
    })["catch"](function (err) {
      setIsSubmitting(false);
      onError(err);
      setErrorMessage('Invalid email or password. Please try again or use the link below to get help.');
    });
  };
  var submitDiscoveryPassword = function submitDiscoveryPassword() {
    setErrorMessage('');
    setIsSubmitting(true);
    stytch.passwords.discovery.authenticate({
      email_address: email,
      password: password
    }).then(function (data) {
      setIsSubmitting(false);
      onEvent({
        type: internal.StytchEventType.B2BPasswordDiscoveryAuthenticate,
        data: data
      });
      dispatch({
        type: 'transition',
        screen: AppScreens$1.Discovery
      });
      dispatch({
        type: 'set_discovery_state',
        email: data.email_address,
        discoveredOrganizations: data.discovered_organizations
      });
    })["catch"](function (err) {
      setIsSubmitting(false);
      onError(err);
      setErrorMessage('Invalid email or password. Please try again or use the link below to get help.');
    });
  };
  var emailEligibleForJITProvisioning = function emailEligibleForJITProvisioning(organization, email) {
    var emailDomain = email.split('@').pop();
    return organization.email_jit_provisioning == 'NOT_ALLOWED' || organization.email_jit_provisioning == 'RESTRICTED' && emailDomain && organization.email_allowed_domains.includes(emailDomain);
  };
  var handleNonMemberReset = function handleNonMemberReset() {
    var _a, _b, _c, _d;
    if (!organization) {
      return;
    }
    if (!emailEligibleForJITProvisioning(organization, email)) {
      setIsSubmitting(false);
      setErrorMessage(email + ' does not have access to ' + organization.organization_name + '. If you think this is a mistake, contact your admin.');
      return;
    }
    var dataLayer = internal.readB2BInternals(stytch).dataLayer;
    dataLayer.setItem('reset-email-value', email);
    stytch.magicLinks.email.loginOrSignup({
      email_address: email,
      organization_id: organization.organization_id,
      login_redirect_url: (_a = config.passwordOptions) === null || _a === void 0 ? void 0 : _a.resetPasswordRedirectURL,
      signup_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
      login_template_id: (_c = config.emailMagicLinksOptions) === null || _c === void 0 ? void 0 : _c.loginTemplateId,
      signup_template_id: (_d = config.emailMagicLinksOptions) === null || _d === void 0 ? void 0 : _d.signupTemplateId
    }).then(function () {
      setIsSubmitting(false);
      dispatch({
        type: 'set_password_state',
        email: email
      });
      dispatch({
        type: 'transition',
        screen: AppScreens$1.PasswordResetVerifyConfirmation
      });
    })["catch"](function (err) {
      onError(err);
      setErrorMessage('We were unable to verify your email. Please contact your admin.');
      setIsSubmitting(false);
    });
  };
  return {
    stytch: stytch,
    onError: onError,
    email: email,
    setEmail: setEmail,
    password: password,
    setPassword: setPassword,
    organization: organization,
    errorMessage: errorMessage,
    setErrorMessage: setErrorMessage,
    isSubmitting: isSubmitting,
    setIsSubmitting: setIsSubmitting,
    submitPassword: submitPassword,
    submitDiscoveryPassword: submitDiscoveryPassword,
    handleNonMemberReset: handleNonMemberReset
  };
};
var extractFromPattern = function extractFromPattern(pattern, href) {
  if (pattern === null) return null;
  var url = new URL(href);
  url.search = '';
  var currentUrl = url.toString().trim();
  var regexPattern = pattern.replace(/\./g, '\\.').replace(/\*/g, '(?:[^.]+)').replace('{{slug}}', '(.+)');
  var regex = new RegExp(regexPattern);
  var match = currentUrl.match(regex);
  if (match && match[1]) {
    return match[1];
  }
  return null;
};
var useEmailOtpDiscoverySend = function useEmailOtpDiscoverySend() {
  var _useGlobalReducer11 = useGlobalReducer(),
    _useGlobalReducer12 = _slicedToArray(_useGlobalReducer11, 2),
    dispatch = _useGlobalReducer12[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.otps.email.discovery.send', function (_key, _ref51) {
    var email = _ref51.arg.email;
    var _a;
    return stytchClient.otps.email.discovery.send({
      email_address: email,
      login_template_id: (_a = config.emailOtpOptions) === null || _a === void 0 ? void 0 : _a.loginTemplateId
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'send_email_otp',
        codeExpiration: getOtpCodeExpiration()
      });
    }
  });
};
var useEmailOtpLoginOrSignup = function useEmailOtpLoginOrSignup() {
  var _useGlobalReducer13 = useGlobalReducer(),
    _useGlobalReducer14 = _slicedToArray(_useGlobalReducer13, 2),
    dispatch = _useGlobalReducer14[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.otps.email.loginOrSignup', function (_key, _ref52) {
    var _ref52$arg = _ref52.arg,
      email = _ref52$arg.email,
      organization_id = _ref52$arg.organization_id;
    var _a, _b;
    return stytchClient.otps.email.loginOrSignup({
      email_address: email,
      organization_id: organization_id,
      login_template_id: (_a = config.emailOtpOptions) === null || _a === void 0 ? void 0 : _a.loginTemplateId,
      signup_template_id: (_b = config.emailOtpOptions) === null || _b === void 0 ? void 0 : _b.signupTemplateId
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'send_email_otp',
        codeExpiration: getOtpCodeExpiration()
      });
    }
  });
};
var useEmlDiscoverySend = function useEmlDiscoverySend() {
  var _useGlobalReducer15 = useGlobalReducer(),
    _useGlobalReducer16 = _slicedToArray(_useGlobalReducer15, 2),
    dispatch = _useGlobalReducer16[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.magicLinks.discovery.send', function (_, _ref53) {
    var email = _ref53.arg.email;
    var _a, _b;
    return stytchClient.magicLinks.email.discovery.send({
      email_address: email,
      discovery_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.discoveryRedirectURL,
      login_template_id: (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.loginTemplateId
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'transition',
        screen: AppScreens$1.EmailConfirmation
      });
    }
  });
};
var useEmlLoginOrSignup = function useEmlLoginOrSignup() {
  var _useGlobalReducer17 = useGlobalReducer(),
    _useGlobalReducer18 = _slicedToArray(_useGlobalReducer17, 2),
    dispatch = _useGlobalReducer18[1];
  var stytchClient = useStytch();
  var config = useConfig();
  return useMutate('stytch.magicLinks.email.loginOrSignup', function (_, _ref54) {
    var _ref54$arg = _ref54.arg,
      email = _ref54$arg.email,
      organization_id = _ref54$arg.organization_id;
    var _a, _b, _c, _d;
    return stytchClient.magicLinks.email.loginOrSignup({
      email_address: email,
      organization_id: organization_id,
      login_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
      signup_redirect_url: (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.signupRedirectURL,
      login_template_id: (_c = config.emailMagicLinksOptions) === null || _c === void 0 ? void 0 : _c.loginTemplateId,
      signup_template_id: (_d = config.emailMagicLinksOptions) === null || _d === void 0 ? void 0 : _d.signupTemplateId
    });
  }, {
    onSuccess: function onSuccess() {
      dispatch({
        type: 'transition',
        screen: AppScreens$1.EmailConfirmation
      });
    }
  });
};
var JIT_PROVISIONING_ERRORS = ['email_jit_provisioning_not_allowed', 'invalid_email_for_jit_provisioning'];
var parseErrorMessage = function parseErrorMessage(error, _ref55) {
  var email = _ref55.email,
    org = _ref55.org;
  if (JIT_PROVISIONING_ERRORS.includes(error.error_type)) {
    return "".concat(email, " does not have access to ").concat(org, ". If you think this is a mistake, contact your admin");
  } else {
    return error.error_message;
  }
};
var EmailForm = function EmailForm() {
  var _useGlobalReducer19 = useGlobalReducer(),
    _useGlobalReducer20 = _slicedToArray(_useGlobalReducer19, 2),
    state = _useGlobalReducer20[0],
    dispatch = _useGlobalReducer20[1];
  var _extractErrorMessage$20 = extractErrorMessage.h(''),
    _extractErrorMessage$21 = _slicedToArray(_extractErrorMessage$20, 2),
    emailInput = _extractErrorMessage$21[0],
    setEmailInput = _extractErrorMessage$21[1];
  var _useEffectiveAuthConf = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf.products;
  var enableEml = products.includes(internal.B2BProducts.emailMagicLinks);
  var enableOtp = products.includes(internal.B2BProducts.emailOtp);
  var providedEmail = state.primary.email;
  var email = providedEmail || emailInput;
  var _useEmlLoginOrSignup = useEmlLoginOrSignup(),
    stytchEmlLoginOrSignup = _useEmlLoginOrSignup.trigger,
    emlError = _useEmlLoginOrSignup.error,
    emlIsMutating = _useEmlLoginOrSignup.isMutating;
  var _useEmailOtpLoginOrSi = useEmailOtpLoginOrSignup(),
    stytchOtpLoginOrSignup = _useEmailOtpLoginOrSi.trigger,
    otpError = _useEmailOtpLoginOrSi.error,
    otpIsMutating = _useEmailOtpLoginOrSi.isMutating;
  var organization = state.flowState.organization;
  if (!organization) return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null);
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            e.preventDefault();
            dispatch({
              type: 'set_user_supplied_email',
              email: email
            });
            if (enableEml && enableOtp) {
              dispatch({
                type: 'transition',
                screen: AppScreens$1.EmailMethodSelection,
                history: 'push'
              });
            } else if (enableEml) {
              stytchEmlLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            } else if (enableOtp) {
              stytchOtpLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            }
          case 3:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
  };
  var isMutating = emlIsMutating || otpIsMutating;
  var error = emlError || otpError;
  var errorText = error && ( /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: parseErrorMessage(error, {
      email: email,
      org: organization.organization_name
    })
  }));
  if (providedEmail) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
      direction: "column",
      gap: 8
    }, products.filter(function (product) {
      return product === internal.B2BProducts.emailMagicLinks || product === internal.B2BProducts.emailOtp;
    }).map(function (product) {
      switch (product) {
        case internal.B2BProducts.emailMagicLinks:
          return /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingButton, {
            key: product,
            type: "button",
            onClick: function onClick() {
              dispatch({
                type: 'set_user_supplied_email',
                email: email
              });
              stytchEmlLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            },
            isLoading: emlIsMutating,
            disabled: isMutating,
            variant: "text"
          }, "Email me a link");
        case internal.B2BProducts.emailOtp:
          return /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingButton, {
            key: product,
            type: "button",
            onClick: function onClick() {
              dispatch({
                type: 'set_user_supplied_email',
                email: email
              });
              stytchOtpLoginOrSignup({
                email: email,
                organization_id: organization.organization_id
              });
            },
            isLoading: otpIsMutating,
            disabled: isMutating,
            variant: "text"
          }, "Email me a code");
      }
    }));
  }
  return /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    minHeight: 52
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmailInput
  }), errorText), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    isSubmitting: isMutating,
    text: 'Continue with email'
  })));
};
var EmailDiscoveryForm = function EmailDiscoveryForm() {
  var _useGlobalReducer21 = useGlobalReducer(),
    _useGlobalReducer22 = _slicedToArray(_useGlobalReducer21, 2),
    dispatch = _useGlobalReducer22[1];
  var _extractErrorMessage$22 = extractErrorMessage.h(''),
    _extractErrorMessage$23 = _slicedToArray(_extractErrorMessage$22, 2),
    email = _extractErrorMessage$23[0],
    setEmail = _extractErrorMessage$23[1];
  var _useEffectiveAuthConf2 = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf2.products;
  var enableEml = products.includes(internal.B2BProducts.emailMagicLinks);
  var enableOtp = products.includes(internal.B2BProducts.emailOtp);
  var _useEmlDiscoverySend = useEmlDiscoverySend(),
    stytchEmlDiscoverySend = _useEmlDiscoverySend.trigger,
    emlError = _useEmlDiscoverySend.error,
    emlIsMutating = _useEmlDiscoverySend.isMutating;
  var _useEmailOtpDiscovery = useEmailOtpDiscoverySend(),
    stytchOtpDiscoverySend = _useEmailOtpDiscovery.trigger,
    otpError = _useEmailOtpDiscovery.error,
    otpIsMutating = _useEmailOtpDiscovery.isMutating;
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            e.preventDefault();
            dispatch({
              type: 'set_user_supplied_email',
              email: email
            });
            if (enableEml && enableOtp) {
              dispatch({
                type: 'transition',
                screen: AppScreens$1.EmailMethodSelection,
                history: 'push'
              });
            } else if (enableEml) {
              stytchEmlDiscoverySend({
                email: email
              });
            } else if (enableOtp) {
              stytchOtpDiscoverySend({
                email: email
              });
            }
          case 3:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
  };
  var isMutating = emlIsMutating || otpIsMutating;
  var error = emlError || otpError;
  return /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    minHeight: 52
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  }), error && /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: error.error_message
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    isSubmitting: isMutating,
    text: 'Continue with email'
  })));
};
var SSOButton = function SSOButton(_ref56) {
  var display_name = _ref56.display_name,
    connection_id = _ref56.connection_id;
  var stytchClient = useStytch();
  var config = useConfig();
  var onButtonClick = function onButtonClick() {
    var _a, _b;
    return stytchClient.sso.start({
      connection_id: connection_id,
      signup_redirect_url: (_a = config.ssoOptions) === null || _a === void 0 ? void 0 : _a.signupRedirectURL,
      login_redirect_url: (_b = config.ssoOptions) === null || _b === void 0 ? void 0 : _b.loginRedirectURL
    });
  };
  return /*#__PURE__*/extractErrorMessage.y(Button, {
    id: "sso-".concat(display_name),
    type: "button",
    onClick: onButtonClick,
    variant: "outlined"
  }, /*#__PURE__*/extractErrorMessage.y(Flex, {
    justifyContent: "center",
    alignItems: "center",
    gap: 4
  }, /*#__PURE__*/extractErrorMessage.y("span", {
    style: {
      verticalAlign: 'middle'
    }
  }, "Continue with ".concat(display_name))));
};
var SSOButtons = function SSOButtons() {
  var _useGlobalReducer23 = useGlobalReducer(),
    _useGlobalReducer24 = _slicedToArray(_useGlobalReducer23, 1),
    state = _useGlobalReducer24[0];
  if (!state.flowState.organization) return /*#__PURE__*/extractErrorMessage.y(extractErrorMessage.g, null);
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 8,
    className: "oauth-buttons"
  }, state.flowState.organization.sso_active_connections.map(function (provider) {
    return /*#__PURE__*/extractErrorMessage.y(SSOButton, {
      key: "oauth-".concat(provider.display_name),
      display_name: provider.display_name,
      connection_id: provider.connection_id
    });
  }));
};
var DividerContainer = extractErrorMessage.He(Flex)(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (props) {
  return props.theme.colors.secondary;
});
var DividerBar = extractErrorMessage.He.div(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["\n  ", "\n  ", "\n  border-bottom: 1px solid ", ";\n  flex-grow: 1;\n"])), function (props) {
  return props.$placement === 'left' && 'margin-right: 6px;';
}, function (props) {
  return props.$placement === 'right' && 'margin-left: 6px;';
}, function (props) {
  return props.theme.colors.secondary;
});
var StyledText = extractErrorMessage.He(Text)(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (props) {
  return props.theme.colors.secondary;
});
var Divider = function Divider() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(DividerContainer, {
    alignItems: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(DividerBar, {
    "$placement": "left"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(StyledText, null, "or"), /*#__PURE__*/extractErrorMessage.wn.createElement(DividerBar, {
    "$placement": "right"
  }));
};
var PasswordIconSvg = function PasswordIconSvg(_ref57) {
  var _ref57$enabled = _ref57.enabled,
    enabled = _ref57$enabled === void 0 ? false : _ref57$enabled;
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    width: "20",
    height: "14",
    viewBox: "0 0 20 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M9.99992 2.41667C13.1583 2.41667 15.9749 4.19167 17.3499 7C15.9749 9.80833 13.1583 11.5833 9.99992 11.5833C6.84158 11.5833 4.02492 9.80833 2.64992 7C4.02492 4.19167 6.84158 2.41667 9.99992 2.41667ZM9.99992 0.75C5.83325 0.75 2.27492 3.34167 0.833252 7C2.27492 10.6583 5.83325 13.25 9.99992 13.25C14.1666 13.25 17.7249 10.6583 19.1666 7C17.7249 3.34167 14.1666 0.75 9.99992 0.75ZM9.99992 4.91667C11.1499 4.91667 12.0833 5.85 12.0833 7C12.0833 8.15 11.1499 9.08333 9.99992 9.08333C8.84992 9.08333 7.91658 8.15 7.91658 7C7.91658 5.85 8.84992 4.91667 9.99992 4.91667ZM9.99992 3.25C7.93325 3.25 6.24992 4.93333 6.24992 7C6.24992 9.06667 7.93325 10.75 9.99992 10.75C12.0666 10.75 13.7499 9.06667 13.7499 7C13.7499 4.93333 12.0666 3.25 9.99992 3.25Z",
    fill: enabled ? '#19303D' : '#5C727D'
  }));
};
var PasswordIconVisibleSvg = function PasswordIconVisibleSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    width: "20",
    height: "16",
    viewBox: "0 0 20 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M10.0002 2.97921C13.1585 2.97921 15.9752 4.75421 17.3502 7.56254C16.8585 8.57921 16.1668 9.45421 15.3418 10.1625L16.5168 11.3375C17.6752 10.3125 18.5918 9.02921 19.1668 7.56254C17.7252 3.90421 14.1668 1.31254 10.0002 1.31254C8.94183 1.31254 7.92516 1.47921 6.96683 1.78754L8.34183 3.16254C8.8835 3.05421 9.4335 2.97921 10.0002 2.97921ZM9.1085 3.92921L10.8335 5.65421C11.3085 5.86254 11.6918 6.24587 11.9002 6.72087L13.6252 8.44587C13.6918 8.16254 13.7418 7.86254 13.7418 7.55421C13.7502 5.48754 12.0668 3.81254 10.0002 3.81254C9.69183 3.81254 9.40016 3.85421 9.1085 3.92921ZM1.67516 1.20421L3.9085 3.43754C2.55016 4.50421 1.47516 5.92087 0.833496 7.56254C2.27516 11.2209 5.8335 13.8125 10.0002 13.8125C11.2668 13.8125 12.4835 13.5709 13.6002 13.1292L16.4502 15.9792L17.6252 14.8042L2.85016 0.020874L1.67516 1.20421ZM7.92516 7.45421L10.1002 9.62921C10.0668 9.63754 10.0335 9.64587 10.0002 9.64587C8.85016 9.64587 7.91683 8.71254 7.91683 7.56254C7.91683 7.52087 7.92516 7.49587 7.92516 7.45421ZM5.09183 4.62087L6.55016 6.07921C6.3585 6.53754 6.25016 7.03754 6.25016 7.56254C6.25016 9.62921 7.9335 11.3125 10.0002 11.3125C10.5252 11.3125 11.0252 11.2042 11.4752 11.0125L12.2918 11.8292C11.5585 12.0292 10.7918 12.1459 10.0002 12.1459C6.84183 12.1459 4.02516 10.3709 2.65016 7.56254C3.2335 6.37087 4.0835 5.38754 5.09183 4.62087Z",
    fill: "#19303D"
  }));
};
var BaseInput = extractErrorMessage.He.input(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["\n  border: 0;\n  padding: 0;\n  width: 100%;\n\n  background-color: transparent;\n  height: 45px;\n  color: ", ";\n  font-family: ", ";\n  font-size: 18px;\n\n  &::placeholder: {\n    color: ", ";\n  }\n\n  &:disabled {\n    color: ", ";\n    background-color: ", ";\n  }\n\n  &:focus {\n    outline: none;\n  }\n"])), function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  return props.theme.inputs.placeholderColor;
}, function (props) {
  return props.theme.colors.disabledText;
}, function (props) {
  return props.theme.colors.disabled;
});
var InputContainer = extractErrorMessage.He(Flex)(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  height: 45px;\n  padding-left: 8px;\n  padding-right: 8px;\n  border: 1px solid ", ";\n  border-radius: ", ";\n  color: ", ";\n  font-family: ", ";\n  font-size: 18px;\n  width: calc(100% - 18px);\n  & input::placeholder: {\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.inputs.backgroundColor;
}, function (props) {
  return props.theme.inputs.borderColor;
}, function (props) {
  return props.theme.inputs.borderRadius;
}, function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
}, function (props) {
  return props.theme.inputs.placeholderColor;
});
var PasswordIconButton = extractErrorMessage.He.button(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n"])));
var PasswordIcon = function PasswordIcon(_ref58) {
  var onClick = _ref58.onClick,
    enabled = _ref58.enabled,
    visible = _ref58.visible;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordIconButton, {
    onClick: onClick,
    type: "button"
  }, visible ? /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordIconVisibleSvg, null) : /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordIconSvg, {
    enabled: enabled
  }));
};
var PasswordInput = function PasswordInput(_ref59) {
  var password = _ref59.password,
    setPassword = _ref59.setPassword,
    type = _ref59.type;
  var _extractErrorMessage$24 = extractErrorMessage.h(false),
    _extractErrorMessage$25 = _slicedToArray(_extractErrorMessage$24, 2),
    visible = _extractErrorMessage$25[0],
    setVisible = _extractErrorMessage$25[1];
  return /*#__PURE__*/extractErrorMessage.wn.createElement(InputContainer, {
    gap: 2,
    alignItems: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BaseInput, {
    name: "password",
    "aria-label": "Password",
    id: "".concat(type, "-password"),
    autoComplete: "".concat(type, "-password"),
    type: visible ? 'text' : 'password',
    value: password,
    onChange: function onChange(e) {
      return setPassword(e.target.value);
    },
    required: true
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordIcon, {
    onClick: function onClick() {
      return setVisible(function (visible) {
        return !visible;
      });
    },
    enabled: !!password,
    visible: visible
  }));
};
var BackButton = extractErrorMessage.He.button(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n"])));
var BackArrowSvg = function BackArrowSvg(_ref60) {
  var color = _ref60.color;
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z",
    fill: color
  }));
};
var BackArrow = function BackArrow(_ref61) {
  var onClick = _ref61.onClick;
  var theme = extractErrorMessage.Ze();
  return /*#__PURE__*/extractErrorMessage.wn.createElement(BackButton, {
    type: "button",
    onClick: onClick,
    "aria-label": "Back"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrowSvg, {
    color: theme.colors.primary
  }));
};
var GetHelpText = extractErrorMessage.He(Text)(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["\n  font-weight: bold !important;\n  cursor: pointer;\n"])));
var PasswordsAuthenticate = function PasswordsAuthenticate() {
  var _useGlobalReducer25 = useGlobalReducer(),
    _useGlobalReducer26 = _slicedToArray(_useGlobalReducer25, 2),
    dispatch = _useGlobalReducer26[1];
  var _usePasswordInput = usePasswordInput(),
    email = _usePasswordInput.email,
    setEmail = _usePasswordInput.setEmail,
    password = _usePasswordInput.password,
    setPassword = _usePasswordInput.setPassword,
    organization = _usePasswordInput.organization,
    errorMessage = _usePasswordInput.errorMessage,
    setErrorMessage = _usePasswordInput.setErrorMessage,
    isSubmitting = _usePasswordInput.isSubmitting,
    submitPassword = _usePasswordInput.submitPassword,
    submitDiscoveryPassword = _usePasswordInput.submitDiscoveryPassword;
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            e.preventDefault();
            if (!email.match(internal.EMAIL_REGEX)) {
              setErrorMessage('Invalid email address');
            } else {
              if (!organization) {
                submitDiscoveryPassword();
              } else {
                submitPassword(organization.organization_id);
              }
            }
          case 2:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
  };
  var onGetHelp = function onGetHelp() {
    dispatch({
      type: 'set_password_state',
      email: email
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.PasswordForgotForm
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 28
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Log in with email and password"), /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Email"), /*#__PURE__*/extractErrorMessage.wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Password"), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordInput, {
    password: password,
    setPassword: setPassword,
    type: "current"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: "Continue"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    onClick: onGetHelp,
    justifyContent: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(GetHelpText, {
    color: "secondary"
  }, "Sign up or reset password")))));
};
var PasswordsEmailForm = function PasswordsEmailForm() {
  var _useGlobalReducer27 = useGlobalReducer(),
    _useGlobalReducer28 = _slicedToArray(_useGlobalReducer27, 2),
    dispatch = _useGlobalReducer28[1];
  var _usePasswordInput2 = usePasswordInput(),
    stytch = _usePasswordInput2.stytch,
    email = _usePasswordInput2.email,
    setEmail = _usePasswordInput2.setEmail,
    password = _usePasswordInput2.password,
    setPassword = _usePasswordInput2.setPassword,
    organization = _usePasswordInput2.organization,
    errorMessage = _usePasswordInput2.errorMessage,
    setErrorMessage = _usePasswordInput2.setErrorMessage,
    isSubmitting = _usePasswordInput2.isSubmitting,
    setIsSubmitting = _usePasswordInput2.setIsSubmitting,
    submitPassword = _usePasswordInput2.submitPassword,
    submitDiscoveryPassword = _usePasswordInput2.submitDiscoveryPassword,
    handleNonMemberReset = _usePasswordInput2.handleNonMemberReset;
  var _extractErrorMessage$26 = extractErrorMessage.h(!!organization && !email),
    _extractErrorMessage$27 = _slicedToArray(_extractErrorMessage$26, 2),
    hideInput = _extractErrorMessage$27[0],
    setHideInput = _extractErrorMessage$27[1];
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
      var organization_id;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            e.preventDefault();
            if (!organization) {
              _context5.next = 14;
              break;
            }
            organization_id = organization.organization_id;
            if (hideInput) {
              _context5.next = 6;
              break;
            }
            submitPassword(organization_id);
            return _context5.abrupt("return");
          case 6:
            if (email.match(internal.EMAIL_REGEX)) {
              _context5.next = 9;
              break;
            }
            setErrorMessage('Invalid email address');
            return _context5.abrupt("return");
          case 9:
            setErrorMessage('');
            setIsSubmitting(true);
            internal.readB2BInternals(stytch).searchManager.searchMember(email, organization.organization_id).then(function (_ref62) {
              var member = _ref62.member;
              if (member === null || member === void 0 ? void 0 : member.member_password_id) {
                setHideInput(false);
                setIsSubmitting(false);
                dispatch({
                  type: 'set_password_state',
                  email: email
                });
                return;
              }
              handleNonMemberReset();
            })["catch"](function (err) {
              setIsSubmitting(false);
              var message = err.message;
              if (err instanceof internal.StytchAPIError) {
                message = err.error_message;
              }
              setErrorMessage(message);
            });
            _context5.next = 15;
            break;
          case 14:
            submitDiscoveryPassword();
          case 15:
          case "end":
            return _context5.stop();
        }
      }, _callee5);
    }));
  };
  var onGetHelp = function onGetHelp() {
    dispatch({
      type: 'set_password_state',
      email: email
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.PasswordForgotForm
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 36
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Email"), /*#__PURE__*/extractErrorMessage.wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  })), !hideInput && ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Password"), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordInput, {
    password: password,
    setPassword: setPassword,
    type: "current"
  }))), /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: "Continue"
  }), !hideInput && ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    onClick: onGetHelp,
    justifyContent: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(GetHelpText, {
    color: "secondary"
  }, "Sign up or reset password"))))));
};
var CreateIcon = function CreateIcon(IconSvgComponent) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    wrapped: true
  };
  var IconComponent = function IconComponent() {
    var component = /*#__PURE__*/extractErrorMessage.wn.createElement(IconSvgComponent, null);
    return options.wrapped ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
      height: 24,
      width: 24
    }, component)) : component;
  };
  return IconComponent;
};
var GoogleIconSvg = function GoogleIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 48 48"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#FFC107",
    d: "M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#FF3D00",
    d: "M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#4CAF50",
    d: "M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#1976D2",
    d: "M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"
  }));
};
var GoogleIcon = CreateIcon(GoogleIconSvg);
var HubSpotIconSvg = function HubSpotIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    viewBox: "0 0 18 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.0762 13.9514C11.6819 13.9514 10.5516 12.8329 10.5516 11.4533C10.5516 10.0735 11.6819 8.95502 13.0762 8.95502C14.4704 8.95502 15.6007 10.0735 15.6007 11.4533C15.6007 12.8329 14.4704 13.9514 13.0762 13.9514ZM13.8319 6.64368V4.42127C14.4181 4.14728 14.8287 3.56045 14.8287 2.87942V2.82812C14.8287 1.8882 14.0516 1.11919 13.1018 1.11919H13.0502C12.1004 1.11919 11.3234 1.8882 11.3234 2.82812V2.87942C11.3234 3.56045 11.7339 4.14752 12.3201 4.42151V6.64368C11.4474 6.7772 10.65 7.13342 9.9923 7.65767L3.82629 2.91106C3.86699 2.75645 3.89557 2.59727 3.89581 2.42995C3.89678 1.36561 3.0262 0.50144 1.95021 0.500001C0.8747 0.498803 0.00121242 1.36058 1.2622e-06 2.42516C-0.0012099 3.48974 0.869371 4.35391 1.94536 4.35511C2.29587 4.35559 2.62046 4.25707 2.90484 4.09694L8.97009 8.76636C8.45437 9.53681 8.15207 10.4597 8.15207 11.4533C8.15207 12.4935 8.48417 13.4557 9.04518 14.247L7.20082 16.0724C7.055 16.029 6.90385 15.9988 6.74349 15.9988C5.85959 15.9988 5.14282 16.7079 5.14282 17.5826C5.14282 18.4576 5.85959 19.1667 6.74349 19.1667C7.62764 19.1667 8.34416 18.4576 8.34416 17.5826C8.34416 17.4244 8.31364 17.2746 8.26979 17.1303L10.0943 15.3247C10.9225 15.9502 11.9539 16.326 13.0762 16.326C15.7957 16.326 18 14.1444 18 11.4533C18 9.0171 16.1915 7.00445 13.8319 6.64368Z",
    fill: "#FF7A59"
  }));
};
var HubSpotIcon = CreateIcon(HubSpotIconSvg);
var MicrosoftIconSvg = function MicrosoftIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M9.52382 0.952381H0.952393V9.52381H9.52382V0.952381Z",
    fill: "#F25022"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M9.52382 10.4762H0.952393V19.0476H9.52382V10.4762Z",
    fill: "#00A4EF"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M19.0475 0.952381H10.4761V9.52381H19.0475V0.952381Z",
    fill: "#7FBA00"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M19.0475 10.4762H10.4761V19.0476H19.0475V10.4762Z",
    fill: "#FFB900"
  }));
};
var MicrosoftIcon = CreateIcon(MicrosoftIconSvg);
var SlackIconSvg = function SlackIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M6.78176 14.3746C6.78176 15.4153 5.9316 16.2655 4.89088 16.2655C3.85016 16.2655 3 15.4153 3 14.3746C3 13.3339 3.85016 12.4837 4.89088 12.4837H6.78176V14.3746Z",
    fill: "#E01E5A"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M7.73462 14.3746C7.73462 13.3339 8.58478 12.4837 9.6255 12.4837C10.6662 12.4837 11.5164 13.3339 11.5164 14.3746V19.1091C11.5164 20.1498 10.6662 21 9.6255 21C8.58478 21 7.73462 20.1498 7.73462 19.1091V14.3746Z",
    fill: "#E01E5A"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M9.6255 6.78176C8.58478 6.78176 7.73462 5.9316 7.73462 4.89088C7.73462 3.85016 8.58478 3 9.6255 3C10.6662 3 11.5164 3.85016 11.5164 4.89088V6.78176H9.6255Z",
    fill: "#36C5F0"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M9.62541 7.73453C10.6661 7.73453 11.5163 8.58469 11.5163 9.62541C11.5163 10.6661 10.6661 11.5163 9.62541 11.5163H4.89088C3.85016 11.5163 3 10.6661 3 9.62541C3 8.58469 3.85016 7.73453 4.89088 7.73453H9.62541Z",
    fill: "#36C5F0"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M17.2183 9.62541C17.2183 8.58469 18.0684 7.73453 19.1091 7.73453C20.1499 7.73453 21 8.58469 21 9.62541C21 10.6661 20.1499 11.5163 19.1091 11.5163H17.2183V9.62541Z",
    fill: "#2EB67D"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M16.2654 9.62541C16.2654 10.6661 15.4152 11.5163 14.3745 11.5163C13.3338 11.5163 12.4836 10.6661 12.4836 9.62541V4.89088C12.4836 3.85016 13.3338 3 14.3745 3C15.4152 3 16.2654 3.85016 16.2654 4.89088V9.62541Z",
    fill: "#2EB67D"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M14.3745 17.2182C15.4152 17.2182 16.2654 18.0684 16.2654 19.1091C16.2654 20.1498 15.4152 21 14.3745 21C13.3338 21 12.4836 20.1498 12.4836 19.1091V17.2182H14.3745Z",
    fill: "#ECB22E"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M14.3745 16.2655C13.3338 16.2655 12.4836 15.4153 12.4836 14.3746C12.4836 13.3339 13.3338 12.4837 14.3745 12.4837H19.109C20.1498 12.4837 20.9999 13.3339 20.9999 14.3746C20.9999 15.4153 20.1498 16.2655 19.109 16.2655H14.3745Z",
    fill: "#ECB22E"
  }));
};
var SlackIcon = CreateIcon(SlackIconSvg);
var GithubIconSvg = function GithubIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M12.0001 2.25C6.47791 2.25 2 6.72709 2 12.2501C2 16.6684 4.86533 20.4168 8.83867 21.7391C9.33844 21.8317 9.52192 21.5222 9.52192 21.2581C9.52192 21.0196 9.51265 20.2319 9.50834 19.3963C6.72631 20.0012 6.13927 18.2164 6.13927 18.2164C5.68437 17.0605 5.02894 16.7532 5.02894 16.7532C4.12163 16.1325 5.09733 16.1453 5.09733 16.1453C6.10151 16.2158 6.63026 17.1758 6.63026 17.1758C7.52217 18.7046 8.96965 18.2626 9.5403 18.0071C9.63006 17.3607 9.88922 16.9196 10.1752 16.6699C7.95405 16.417 5.61913 15.5595 5.61913 11.7278C5.61913 10.636 6.00977 9.74394 6.64947 9.04362C6.54564 8.79175 6.20335 7.77465 6.74635 6.39722C6.74635 6.39722 7.58609 6.12845 9.49708 7.42226C10.2948 7.20069 11.1502 7.08958 12.0001 7.08577C12.8499 7.08958 13.7061 7.20069 14.5052 7.42226C16.4139 6.12845 17.2525 6.39722 17.2525 6.39722C17.7968 7.77465 17.4544 8.79175 17.3505 9.04362C17.9917 9.74394 18.3797 10.636 18.3797 11.7278C18.3797 15.5687 16.0403 16.4144 13.8135 16.6619C14.1722 16.9723 14.4918 17.5808 14.4918 18.5138C14.4918 19.8518 14.4802 20.9287 14.4802 21.2581C14.4802 21.5242 14.6602 21.836 15.1671 21.7378C19.1383 20.414 22 16.6669 22 12.2501C22 6.72709 17.5227 2.25 12.0001 2.25ZM5.74536 16.4953C5.72333 16.545 5.64517 16.5599 5.57396 16.5258C5.50143 16.4932 5.46069 16.4254 5.48421 16.3756C5.50574 16.3244 5.58406 16.3102 5.65643 16.3445C5.72913 16.3771 5.77053 16.4455 5.74536 16.4953ZM6.23725 16.9342C6.18956 16.9785 6.09633 16.9579 6.03307 16.888C5.96766 16.8183 5.9554 16.7251 6.00376 16.6802C6.05294 16.636 6.14336 16.6567 6.20893 16.7264C6.27434 16.797 6.28709 16.8895 6.23725 16.9342ZM6.57471 17.4958C6.51344 17.5384 6.41325 17.4985 6.35132 17.4095C6.29004 17.3206 6.29004 17.214 6.35264 17.1712C6.41474 17.1285 6.51344 17.1669 6.5762 17.2552C6.6373 17.3456 6.6373 17.4523 6.57471 17.4958ZM7.14542 18.1462C7.09061 18.2066 6.97386 18.1904 6.88841 18.1079C6.80098 18.0273 6.77663 17.9129 6.83161 17.8524C6.88709 17.7918 7.0045 17.8089 7.09061 17.8907C7.17738 17.9711 7.20387 18.0864 7.14542 18.1462ZM7.88301 18.3657C7.85883 18.4441 7.74639 18.4797 7.63312 18.4464C7.52002 18.4121 7.446 18.3204 7.46885 18.2412C7.49237 18.1624 7.6053 18.1253 7.7194 18.1609C7.83234 18.195 7.90652 18.2861 7.88301 18.3657ZM8.72242 18.4589C8.72523 18.5413 8.62919 18.6097 8.51029 18.6112C8.39073 18.6139 8.29402 18.5471 8.29269 18.466C8.29269 18.3827 8.38659 18.315 8.50615 18.313C8.62505 18.3107 8.72242 18.3769 8.72242 18.4589ZM9.54704 18.4273C9.56128 18.5077 9.47865 18.5904 9.36058 18.6124C9.2445 18.6336 9.13702 18.5839 9.12229 18.5041C9.10788 18.4216 9.192 18.339 9.30792 18.3176C9.42616 18.2971 9.53197 18.3455 9.54704 18.4273Z",
    fill: "#161614"
  }));
};
var GitHubIcon = CreateIcon(GithubIconSvg);
var useIsOnlyFloatingOneTap = function useIsOnlyFloatingOneTap() {
  var config = useConfig();
  var isOnlyFloatingOneTap = extractErrorMessage.F(function () {
    var _a, _b;
    var oauthProvider = config.oauthOptions ? getParamsFromB2BOAuthProviderConfig((_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.providers[0]) : undefined;
    var isGoogleOneTap = (oauthProvider === null || oauthProvider === void 0 ? void 0 : oauthProvider.type) === internal.B2BOAuthProviders.Google && (oauthProvider === null || oauthProvider === void 0 ? void 0 : oauthProvider.one_tap) === true;
    return config.products.length === 1 && config.products.includes(internal.B2BProducts.oauth) && ((_b = config.oauthOptions) === null || _b === void 0 ? void 0 : _b.providers.length) === 1 && isGoogleOneTap;
  }, [config]);
  return isOnlyFloatingOneTap;
};
var useIsUnmounted = function useIsUnmounted() {
  var isUnmounted = extractErrorMessage._(false);
  extractErrorMessage.p(function () {
    return function () {
      isUnmounted.current = true;
    };
  }, []);
  return isUnmounted;
};
var OAuthB2BButton = function OAuthB2BButton(props) {
  var stytchClient = useStytch();
  var _useGlobalReducer29 = useGlobalReducer(),
    _useGlobalReducer30 = _slicedToArray(_useGlobalReducer29, 1),
    state = _useGlobalReducer30[0];
  var onButtonClick = function onButtonClick() {
    if (state.flowState.organization) {
      return stytchClient.oauth[props.providerType].start({
        login_redirect_url: props.loginRedirectUrl,
        signup_redirect_url: props.signupRedirectUrl,
        custom_scopes: props.customScopes,
        organization_id: state.flowState.organization.organization_id,
        provider_params: props.providerParams
      });
    }
    return stytchClient.oauth[props.providerType].discovery.start({
      discovery_redirect_url: props.discoveryRedirectUrl,
      custom_scopes: props.customScopes,
      provider_params: props.providerParams
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    id: "oauth-".concat(props.providerType),
    type: "button",
    onClick: onButtonClick,
    variant: "outlined"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    justifyContent: "center",
    alignItems: "center",
    gap: 4
  }, props.icon, /*#__PURE__*/extractErrorMessage.wn.createElement("span", {
    style: {
      verticalAlign: 'middle'
    }
  }, "Continue with ", props.providerTypeTitle)));
};
var OAuthErrorMessage = function OAuthErrorMessage(_ref63) {
  var children = _ref63.children;
  return /*#__PURE__*/extractErrorMessage.wn.createElement("div", {
    key: "oauth-error-message"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    color: "error"
  }, children));
};
var OneTapNoConfiguredClientsErrorMessage = function OneTapNoConfiguredClientsErrorMessage() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because no Google OAuth client configuration could be found for this project. Please make sure a client is configured in the\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    href: "https://stytch.com/dashboard/oauth"
  }, "dashboard."));
};
var RedirectUrlsErrorMessage = function RedirectUrlsErrorMessage(_ref64) {
  var niceName = _ref64.niceName,
    variableName = _ref64.variableName;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because there are no ", niceName, " set for this project so we are unable to verify the", ' ', /*#__PURE__*/extractErrorMessage.wn.createElement("code", null, variableName), "\xA0 provided in the configuration. To set ", niceName, " for this project please visit\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    href: "https://stytch.com/docs/javascript-sdk"
  }, "the Stytch dashboard."), "\xA0 For more information on why this validation is necessary please visit\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    href: "https://stytch.com/docs/api/url-validation"
  }, "https://stytch.com/docs/api/url-validation."));
};
var OneTapNoConfiguredLoginRedirectUrlsErrorMessage = function OneTapNoConfiguredLoginRedirectUrlsErrorMessage() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(RedirectUrlsErrorMessage, {
    niceName: "login redirect URLs",
    variableName: "oauthOptions.loginRedirectURL"
  });
};
var OneTapNoConfiguredSignupRedirectUrlsErrorMessage = function OneTapNoConfiguredSignupRedirectUrlsErrorMessage() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(RedirectUrlsErrorMessage, {
    niceName: "signup redirect URLs",
    variableName: "oauthOptions.signupRedirectURL"
  });
};
var OneTapJSOriginErrorMessage = function OneTapJSOriginErrorMessage() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because the current host\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("code", null, "\"".concat(window.location.host, "\"")), " is not allowed for this project. Make sure to put your project's host into the Google API console. When using localhost for development, you must add both\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("code", null, "http://localhost"), " and\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("code", null, "http://localhost:<port_number>"), "\xA0 to the Authorized JavaScript origins box. You can learn more\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    href: "https://stytch.com/docs/javascript-sdk"
  }, "here."));
};
var OneTapInvalidOAuthClient = function OneTapInvalidOAuthClient() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because the client ID configured for your project is not recognized by Google. \xA0 Please check that the client ID saved in ", /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    href: "https://stytch.com/dashboard/oauth/google"
  }, "the Stytch Dashboard"), "\xA0 matches the client ID in your Google Cloud Console.");
};
var OneTapNoDefaultProviderAllowedErrorMessage = function OneTapNoDefaultProviderAllowedErrorMessage() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthErrorMessage, null, "One Tap cannot render because the Stytch Default OAuth Provider is not compatible with One Tap. Please configure your own Google client in the\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    href: "https://stytch.com/dashboard/oauth"
  }, "dashboard."));
};
var OneTapErrors;
(function (OneTapErrors) {
  OneTapErrors["None"] = "none";
  OneTapErrors["OriginNotAllowedForClient"] = "origin_not_allowed_for_client";
  OneTapErrors["InvalidOAuthClient"] = "invalid_client";
  OneTapErrors["NoConfiguredOAuthClient"] = "oauth_config_not_found";
  OneTapErrors["NoConfiguredLoginRedirectUrls"] = "no_login_redirect_urls_set";
  OneTapErrors["NoConfiguredSignupRedirectUrls"] = "no_signup_redirect_urls_set";
  OneTapErrors["DefaultProviderNotAllowed"] = "default_provider_not_allowed";
})(OneTapErrors || (OneTapErrors = {}));
var ErrorMessages = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, OneTapErrors.None, /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null)), OneTapErrors.OriginNotAllowedForClient, /*#__PURE__*/extractErrorMessage.wn.createElement(OneTapJSOriginErrorMessage, null)), OneTapErrors.InvalidOAuthClient, /*#__PURE__*/extractErrorMessage.wn.createElement(OneTapInvalidOAuthClient, null)), OneTapErrors.NoConfiguredOAuthClient, /*#__PURE__*/extractErrorMessage.wn.createElement(OneTapNoConfiguredClientsErrorMessage, null)), OneTapErrors.NoConfiguredLoginRedirectUrls, /*#__PURE__*/extractErrorMessage.wn.createElement(OneTapNoConfiguredLoginRedirectUrlsErrorMessage, null)), OneTapErrors.NoConfiguredSignupRedirectUrls, /*#__PURE__*/extractErrorMessage.wn.createElement(OneTapNoConfiguredSignupRedirectUrlsErrorMessage, null)), OneTapErrors.DefaultProviderNotAllowed, /*#__PURE__*/extractErrorMessage.wn.createElement(OneTapNoDefaultProviderAllowedErrorMessage, null));
extractErrorMessage.He.div(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["\n  height: ", ";\n  display: ", ";\n  transition: all 0.5s ease-out;\n  justify-content: center;\n  align-items: center;\n"])), function (props) {
  return "".concat(props.$height, "px");
}, function (props) {
  return props.pending ? 'flex' : 'block';
});
var B2BGoogleOneTap = function B2BGoogleOneTap() {
  var _a, _b, _c, _d, _e, _f;
  var stytch = useStytch();
  var config = useConfig();
  var isOnlyFloatingOneTap = useIsOnlyFloatingOneTap();
  var _extractErrorMessage$28 = extractErrorMessage.h(OneTapErrors.None),
    _extractErrorMessage$29 = _slicedToArray(_extractErrorMessage$28, 2),
    oneTapError = _extractErrorMessage$29[0],
    setOneTapError = _extractErrorMessage$29[1];
  var isUnmounted = useIsUnmounted();
  var _useGlobalReducer31 = useGlobalReducer(),
    _useGlobalReducer32 = _slicedToArray(_useGlobalReducer31, 2),
    state = _useGlobalReducer32[0],
    dispatch = _useGlobalReducer32[1];
  var attemptToLoadOneTap = extractErrorMessage.T(function () {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
      var _g, _h, _j, _internal$readB2BInte, oneTap, clientResult, client, oneTapCallback, renderResult;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) switch (_context6.prev = _context6.next) {
          case 0:
            _internal$readB2BInte = internal.readB2BInternals(stytch), oneTap = _internal$readB2BInte.oneTap;
            _context6.next = 3;
            return oneTap.createOneTapClient();
          case 3:
            clientResult = _context6.sent;
            if (clientResult.success) {
              _context6.next = 7;
              break;
            }
            if (clientResult.reason === 'oauth_config_not_found') {
              setOneTapError(OneTapErrors.NoConfiguredOAuthClient);
            } else if (clientResult.reason === 'default_provider_not_allowed') {
              setOneTapError(OneTapErrors.DefaultProviderNotAllowed);
            } else {
              internal.logger.error('Unable to load One Tap settings for project', clientResult);
            }
            return _context6.abrupt("return");
          case 7:
            client = clientResult.client;
            if (!isUnmounted.current) {
              _context6.next = 10;
              break;
            }
            return _context6.abrupt("return");
          case 10:
            if (state.flowState.organization) {
              oneTapCallback = oneTap.createOnSuccessHandler({
                organizationId: state.flowState.organization.organization_id,
                signupRedirectUrl: (_g = config.oauthOptions) === null || _g === void 0 ? void 0 : _g.signupRedirectURL,
                loginRedirectUrl: (_h = config.oauthOptions) === null || _h === void 0 ? void 0 : _h.loginRedirectURL,
                onSuccess: oneTap.RedirectOnSuccess,
                onError: function onError() {
                  return dispatch({
                    type: 'transition',
                    screen: AppScreens$1.Error
                  });
                }
              });
            } else {
              oneTapCallback = oneTap.createOnDiscoverySuccessHandler({
                discoveryRedirectUrl: (_j = config.oauthOptions) === null || _j === void 0 ? void 0 : _j.discoveryRedirectURL,
                onSuccess: oneTap.RedirectOnSuccess,
                onError: function onError() {
                  return dispatch({
                    type: 'transition',
                    screen: AppScreens$1.Error
                  });
                }
              });
            }
            _context6.next = 13;
            return client.render({
              callback: oneTapCallback,
              style: {
                position: internal.OneTapPositions.floating
              }
            });
          case 13:
            renderResult = _context6.sent;
            if (!isUnmounted.current) {
              _context6.next = 17;
              break;
            }
            client.cancel();
            return _context6.abrupt("return");
          case 17:
            if (!renderResult.success) {
              if (renderResult.reason === 'unregistered_origin') {
                setOneTapError(OneTapErrors.OriginNotAllowedForClient);
              }
              if (renderResult.reason === 'invalid_client') {
                setOneTapError(OneTapErrors.InvalidOAuthClient);
              }
              internal.logger.error('Unable to render One Tap prompt', renderResult);
            }
            return _context6.abrupt("return", client);
          case 19:
          case "end":
            return _context6.stop();
        }
      }, _callee6);
    }));
  }, [stytch, isUnmounted, state.flowState.organization, (_a = config.oauthOptions) === null || _a === void 0 ? void 0 : _a.signupRedirectURL, (_b = config.oauthOptions) === null || _b === void 0 ? void 0 : _b.loginRedirectURL, (_c = config.oauthOptions) === null || _c === void 0 ? void 0 : _c.discoveryRedirectURL, dispatch]);
  extractErrorMessage.p(function () {
    var client;
    attemptToLoadOneTap().then(function ($client) {
      return client = $client;
    })["catch"](function (err) {
      internal.logger.error('Unable to render One Tap prompt', err);
    });
    return function () {
      return client === null || client === void 0 ? void 0 : client.cancel();
    };
  }, [attemptToLoadOneTap]);
  if (isOnlyFloatingOneTap) {
    return null;
  }
  var googleAuthButton = /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthB2BButton, {
    key: "oauth-".concat(internal.B2BOAuthProviders.Google),
    providerType: internal.B2BOAuthProviders.Google,
    icon: /*#__PURE__*/extractErrorMessage.wn.createElement(GoogleIcon, null),
    providerTypeTitle: "Google",
    loginRedirectUrl: (_d = config.oauthOptions) === null || _d === void 0 ? void 0 : _d.loginRedirectURL,
    signupRedirectUrl: (_e = config.oauthOptions) === null || _e === void 0 ? void 0 : _e.signupRedirectURL,
    discoveryRedirectUrl: (_f = config.oauthOptions) === null || _f === void 0 ? void 0 : _f.discoveryRedirectURL
  });
  var _internal$readB2BInte2 = internal.readB2BInternals(stytch),
    publicToken = _internal$readB2BInte2.publicToken;
  if (oneTapError !== OneTapErrors.None) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, internal.isTestPublicToken(publicToken) ? ErrorMessages[oneTapError] : null, googleAuthButton);
  }
  return googleAuthButton;
};
var getProviderInfo = function getProviderInfo(provider) {
  switch (provider) {
    case internal.B2BOAuthProviders.Google:
      return {
        providerTypeTitle: 'Google',
        icon: /*#__PURE__*/extractErrorMessage.y(GoogleIcon, null)
      };
    case internal.B2BOAuthProviders.Microsoft:
      return {
        providerTypeTitle: 'Microsoft',
        icon: /*#__PURE__*/extractErrorMessage.y(MicrosoftIcon, null)
      };
    case internal.B2BOAuthProviders.HubSpot:
      return {
        providerTypeTitle: 'HubSpot',
        icon: /*#__PURE__*/extractErrorMessage.y(HubSpotIcon, null)
      };
    case internal.B2BOAuthProviders.Slack:
      return {
        providerTypeTitle: 'Slack',
        icon: /*#__PURE__*/extractErrorMessage.y(SlackIcon, null)
      };
    case internal.B2BOAuthProviders.GitHub:
      return {
        providerTypeTitle: 'GitHub',
        icon: /*#__PURE__*/extractErrorMessage.y(GitHubIcon, null)
      };
    default:
      return {
        providerTypeTitle: '',
        icon: /*#__PURE__*/extractErrorMessage.y(extractErrorMessage.g, null)
      };
  }
};
var getCustomScopesForProvider = function getCustomScopesForProvider(oauthProvider, oauthOptionsCustomScopes) {
  var currentCustomScopes = oauthProvider.customScopes;
  if (Object.keys(currentCustomScopes).length == 0) {
    currentCustomScopes = oauthOptionsCustomScopes;
  }
  return currentCustomScopes;
};
var getProviderParamsForProvider = function getProviderParamsForProvider(oauthProvider, oauthOptionsProviderParams, email) {
  var currentProviderParams = oauthProvider.providerParams;
  if (Object.keys(currentProviderParams).length == 0) {
    currentProviderParams = oauthOptionsProviderParams !== null && oauthOptionsProviderParams !== void 0 ? oauthOptionsProviderParams : {};
  }
  if (email && (oauthProvider.type === internal.B2BOAuthProviders.Google || oauthProvider.type === internal.B2BOAuthProviders.Microsoft) && !('login_hint' in currentProviderParams)) {
    currentProviderParams = Object.assign(Object.assign({}, currentProviderParams), {
      login_hint: email
    });
  }
  return currentProviderParams;
};
var OAuthButtons = function OAuthButtons() {
  var _a;
  var _useGlobalReducer33 = useGlobalReducer(),
    _useGlobalReducer34 = _slicedToArray(_useGlobalReducer33, 1),
    state = _useGlobalReducer34[0];
  var _useEffectiveAuthConf3 = useEffectiveAuthConfig(),
    oauthProviderSettings = _useEffectiveAuthConf3.oauthProviderSettings;
  var config = useConfig();
  var _ref65 = (_a = config.oauthOptions) !== null && _a !== void 0 ? _a : {},
    loginRedirectURL = _ref65.loginRedirectURL,
    signupRedirectURL = _ref65.signupRedirectURL,
    discoveryRedirectURL = _ref65.discoveryRedirectURL,
    customScopes = _ref65.customScopes,
    providerParams = _ref65.providerParams;
  var mappedProviders = oauthProviderSettings.map(function (oauthProvider) {
    var _getProviderInfo = getProviderInfo(oauthProvider.type),
      icon = _getProviderInfo.icon,
      providerTypeTitle = _getProviderInfo.providerTypeTitle;
    if (oauthProvider.one_tap) {
      return /*#__PURE__*/extractErrorMessage.y(B2BGoogleOneTap, {
        key: "oauth-".concat(oauthProvider.type)
      });
    }
    return /*#__PURE__*/extractErrorMessage.y(OAuthB2BButton, {
      key: "oauth-".concat(oauthProvider.type),
      providerType: oauthProvider.type,
      icon: icon,
      providerTypeTitle: providerTypeTitle,
      loginRedirectUrl: loginRedirectURL,
      signupRedirectUrl: signupRedirectURL,
      discoveryRedirectUrl: discoveryRedirectURL,
      customScopes: getCustomScopesForProvider(oauthProvider, customScopes),
      providerParams: getProviderParamsForProvider(oauthProvider, providerParams, state.primary.email)
    });
  });
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 8,
    className: "oauth-buttons"
  }, mappedProviders);
};
var UsePasswordText = extractErrorMessage.He(Text)(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["\n  font-weight: bold !important;\n  cursor: pointer;\n"])));
var PasswordUseButton = function PasswordUseButton() {
  var _useGlobalReducer35 = useGlobalReducer(),
    _useGlobalReducer36 = _slicedToArray(_useGlobalReducer35, 2),
    dispatch = _useGlobalReducer36[1];
  var handleUsePassword = function handleUsePassword() {
    dispatch({
      type: 'transition',
      screen: AppScreens$1.PasswordAuthenticate
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(UsePasswordText, {
    onClick: handleUsePassword
  }, "Use a password instead"));
};
var Component;
(function (Component) {
  Component["EmailForm"] = "EmailForm";
  Component["EmailDiscoveryForm"] = "EmailDiscoveryForm";
  Component["OAuthButtons"] = "OAuthButtons";
  Component["SSOButtons"] = "SSOButtons";
  Component["PasswordsEmailForm"] = "PasswordsEmailForm";
  Component["PasswordEmailCombined"] = "PasswordEmailCombined";
  Component["PasswordEmailCombinedDiscovery"] = "PasswordEmailCombinedDiscovery";
  Component["Divider"] = "Divider";
})(Component || (Component = {}));
var generateProductComponentsOrdering = function generateProductComponentsOrdering(products, flowState) {
  var flowStateType = flowState.type;
  var productsSet = new Set(products);
  var displayEmailAndPasswordsTogether = (productsSet.has(internal.B2BProducts.emailMagicLinks) || productsSet.has(internal.B2BProducts.emailOtp)) && productsSet.has(internal.B2BProducts.passwords);
  var emailPasswordCombinedComponent = flowStateType === internal.AuthFlowType.Organization ? Component.PasswordEmailCombined : Component.PasswordEmailCombinedDiscovery;
  var productComponentsSet = products.reduce(function (components, product) {
    var _a, _b, _c;
    switch (product) {
      case internal.B2BProducts.emailMagicLinks:
      case internal.B2BProducts.emailOtp:
        if (displayEmailAndPasswordsTogether) {
          components.add(emailPasswordCombinedComponent);
        } else {
          components.add(flowStateType === internal.AuthFlowType.Organization ? Component.EmailForm : Component.EmailDiscoveryForm);
        }
        break;
      case internal.B2BProducts.oauth:
        components.add(Component.OAuthButtons);
        break;
      case internal.B2BProducts.sso:
        var isSsoValid = ((_c = (_b = (_a = flowState.organization) === null || _a === void 0 ? void 0 : _a.sso_active_connections) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) > 0;
        if (flowStateType === internal.AuthFlowType.Organization && isSsoValid) {
          components.add(Component.SSOButtons);
        }
        break;
      case internal.B2BProducts.passwords:
        components.add(displayEmailAndPasswordsTogether ? emailPasswordCombinedComponent : Component.PasswordsEmailForm);
        break;
    }
    return components;
  }, new Set());
  var productComponents = Array.from(productComponentsSet);
  var hasButtons = productComponentsSet.has(Component.OAuthButtons) || productComponentsSet.has(Component.SSOButtons);
  var hasInput = productsSet.has(internal.B2BProducts.emailMagicLinks) || productsSet.has(internal.B2BProducts.passwords);
  var showDivider = hasButtons && hasInput;
  if (productComponents.length > 1 && showDivider) {
    productComponents.splice(productComponents.length - 1, 0, Component.Divider);
  }
  return productComponents;
};
var Container$1 = extractErrorMessage.He(Flex)(_templateObject37 || (_templateObject37 = _taggedTemplateLiteral(["\n  > * + * {\n    margin-top: 24px;\n  }\n"])));
var LogoImage$1 = extractErrorMessage.He.img(_templateObject38 || (_templateObject38 = _taggedTemplateLiteral(["\n  max-height: 50px;\n  max-width: 100px;\n"])));
var Header = extractErrorMessage.He(Text)(_templateObject39 || (_templateObject39 = _taggedTemplateLiteral(["\n  text-align: center;\n"])));
var Logo$1 = function Logo$1(_ref66) {
  var orgLogo = _ref66.orgLogo,
    appLogo = _ref66.appLogo;
  if (orgLogo !== '' && appLogo !== '') return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null);
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    justifyContent: "center",
    gap: 4
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(LogoImage$1, {
    src: orgLogo
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(LogoImage$1, {
    src: appLogo
  }));
};
var ProductComponents = function ProductComponents(_ref67) {
  var components = _ref67.components;
  var renderedComponents = components.map(function (component) {
    switch (component) {
      case Component.EmailForm:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(EmailForm, {
          key: component
        });
      case Component.EmailDiscoveryForm:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(EmailDiscoveryForm, {
          key: component
        });
      case Component.OAuthButtons:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(OAuthButtons, {
          key: component
        });
      case Component.SSOButtons:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(SSOButtons, {
          key: component
        });
      case Component.PasswordsEmailForm:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordsEmailForm, {
          key: component
        });
      case Component.PasswordEmailCombined:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
          key: "email_password",
          direction: "column",
          gap: 12
        }, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailForm, {
          key: "email"
        }), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordUseButton, {
          key: "password"
        }));
      case Component.PasswordEmailCombinedDiscovery:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
          key: "email_password_discovery",
          direction: "column",
          gap: 12
        }, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailDiscoveryForm, {
          key: "email"
        }), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordUseButton, {
          key: "password"
        }));
      case Component.Divider:
        return /*#__PURE__*/extractErrorMessage.wn.createElement(Divider, {
          key: "divider"
        });
    }
  });
  return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, renderedComponents);
};
var MainScreen = function MainScreen() {
  var _a, _b, _c, _d;
  var _extractErrorMessage$30 = extractErrorMessage.Ze(),
    displayHeader = _extractErrorMessage$30.displayHeader,
    logo = _extractErrorMessage$30.logo;
  var _useGlobalReducer37 = useGlobalReducer(),
    _useGlobalReducer38 = _slicedToArray(_useGlobalReducer37, 1),
    state = _useGlobalReducer38[0];
  var _state$primary = state.primary,
    primaryAuthMethods = _state$primary.primaryAuthMethods,
    email = _state$primary.email,
    emailVerified = _state$primary.emailVerified;
  var _useEffectiveAuthConf4 = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf4.products;
  var ProductComponentsOrdering = generateProductComponentsOrdering(products, state.flowState);
  var title;
  switch (state.flowState.type) {
    case internal.AuthFlowType.Discovery:
      title = 'Sign up or log in';
      break;
    case internal.AuthFlowType.PasswordReset:
      title = '';
      break;
    default:
      title = "Continue to ".concat((_b = (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.organization_name) !== null && _b !== void 0 ? _b : '...');
      break;
  }
  var showVerifyEmailCopy = email && emailVerified === false && primaryAuthMethods;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Container$1, {
    direction: "column"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Logo$1, {
    appLogo: logo.logoImageUrl,
    orgLogo: (_d = (_c = state.flowState.organization) === null || _c === void 0 ? void 0 : _c.organization_logo_url) !== null && _d !== void 0 ? _d : ''
  }), displayHeader && (showVerifyEmailCopy ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    justifyContent: "center",
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Verify your email"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Confirm your email address with one of the following:"))) : title && ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    justifyContent: "center"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Header, {
    size: "header"
  }, title)))), /*#__PURE__*/extractErrorMessage.wn.createElement(ProductComponents, {
    components: ProductComponentsOrdering
  }));
};
var GmailIconSvg = function GmailIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 48 48"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#4caf50",
    d: "M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#1e88e5",
    d: "M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("polygon", {
    fill: "#e53935",
    points: "35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#c62828",
    d: "M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    fill: "#fbc02d",
    d: "M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z"
  }));
};
var GmailIcon = CreateIcon(GmailIconSvg);
var OutlookIconSvg = function OutlookIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    version: "1.1",
    id: "Layer_1",
    viewBox: "0 0 103.17322 104.31332",
    xmlSpace: "preserve"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("defs", {
    id: "defs43"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "m 64.566509,22.116383 v 20.404273 l 7.130526,4.489881 c 0.188058,0.05485 0.595516,0.05877 0.783574,0 L 103.16929,26.320259 c 0,-2.44867 -2.28412,-4.203876 -3.573094,-4.203876 H 64.566509 z",
    id: "path3",
    style: {
      fill: '#0072c6'
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "m 64.566509,50.13308 6.507584,4.470291 c 0.916782,0.673874 2.021622,0 2.021622,0 -1.100922,0.673874 30.077495,-20.035993 30.077495,-20.035993 v 37.501863 c 0,4.082422 -2.61322,5.794531 -5.551621,5.794531 H 64.562591 V 50.13308 z",
    id: "path5",
    style: {
      fill: '#0072c6'
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("g", {
    id: "g23",
    transform: "matrix(3.9178712,0,0,3.9178712,-13.481403,-41.384473)"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "m 11.321,20.958 c -0.566,0 -1.017,0.266 -1.35,0.797 -0.333,0.531 -0.5,1.234 -0.5,2.109 0,0.888 0.167,1.59 0.5,2.106 0.333,0.517 0.77,0.774 1.31,0.774 0.557,0 0.999,-0.251 1.325,-0.753 0.326,-0.502 0.49,-1.199 0.49,-2.09 0,-0.929 -0.158,-1.652 -0.475,-2.169 -0.317,-0.516 -0.75,-0.774 -1.3,-0.774 z",
    id: "path25",
    style: {
      fill: '#0072c6'
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "m 3.441,13.563 v 20.375 l 15.5,3.25 V 10.563 l -15.5,3 z m 10.372,13.632 c -0.655,0.862 -1.509,1.294 -2.563,1.294 -1.027,0 -1.863,-0.418 -2.51,-1.253 C 8.094,26.4 7.77,25.312 7.77,23.97 c 0,-1.417 0.328,-2.563 0.985,-3.438 0.657,-0.875 1.527,-1.313 2.61,-1.313 1.023,0 1.851,0.418 2.482,1.256 0.632,0.838 0.948,1.942 0.948,3.313 10e-4,1.409 -0.327,2.545 -0.982,3.407 z",
    id: "path27",
    style: {
      fill: '#0072c6'
    }
  })));
};
var OutlookIcon = CreateIcon(OutlookIconSvg);
var YahooIconSvg = function YahooIconSvg() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("rect", {
    x: "2",
    y: "2",
    width: "20",
    height: "20",
    rx: "1",
    fill: "#671BDF"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M5 8.7284H7.71407L9.29444 12.7716L10.8953 8.7284H13.5379L9.55876 18.3H6.89942L7.98865 15.7637L5 8.7284Z",
    fill: "white"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M14.2 16.2028C15.108 16.2028 15.8441 15.4667 15.8441 14.5587C15.8441 13.6507 15.108 12.9146 14.2 12.9146C13.292 12.9146 12.5559 13.6507 12.5559 14.5587C12.5559 15.4667 13.292 16.2028 14.2 16.2028Z",
    fill: "white"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M16.3842 12.3106H13.4243L16.0512 6H19L16.3842 12.3106Z",
    fill: "white"
  }));
};
var YahooIcon = CreateIcon(YahooIconSvg);
var inboxLinks$1 = function inboxLinks$1(emailDomain) {
  if (!emailDomain) {
    return {
      GMAIL: 'https://mail.google.com/mail/u/0/#search/in%3Aanywhere',
      OUTLOOK: 'https://outlook.office.com/mail/0/inbox',
      YAHOO: 'https://mail.yahoo.com/d/search/referrer=unread'
    };
  }
  var gmailQuery = encodeURIComponent("from:@".concat(emailDomain, " in:anywhere"));
  return {
    GMAIL: "https://mail.google.com/mail/u/0/#search/".concat(gmailQuery),
    OUTLOOK: 'https://outlook.office.com/mail/0/inbox',
    YAHOO: "https://mail.yahoo.com/d/search/keyword=".concat(emailDomain)
  };
};
var Link$1 = extractErrorMessage.He.a(_templateObject40 || (_templateObject40 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n    text-decoration-color: ", ";\n  }\n"])), function (props) {
  return props.theme.colors.primary;
});
var EmailProviderLink$1 = function EmailProviderLink$1(_ref68) {
  var label = _ref68.label,
    href = _ref68.href,
    Icon = _ref68.Icon;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 4
  }, Icon, /*#__PURE__*/extractErrorMessage.wn.createElement(Link$1, {
    href: href,
    target: "_blank",
    rel: "noopener noreferrer"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Open in ", label)));
};
var EmailConfirmation$1 = function EmailConfirmation$1(_ref69) {
  var emailDomain = _ref69.emailDomain,
    reset = _ref69.reset,
    email = _ref69.email;
  var _inboxLinks$ = inboxLinks$1(emailDomain),
    GMAIL = _inboxLinks$.GMAIL,
    YAHOO = _inboxLinks$.YAHOO,
    OUTLOOK = _inboxLinks$.OUTLOOK;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Check your email"), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 12
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "An email was sent to ", /*#__PURE__*/extractErrorMessage.wn.createElement("b", null, email), "."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailProviderLink$1, {
    href: GMAIL,
    label: 'Gmail',
    Icon: /*#__PURE__*/extractErrorMessage.wn.createElement(GmailIcon, null)
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(EmailProviderLink$1, {
    href: YAHOO,
    label: 'Yahoo',
    Icon: /*#__PURE__*/extractErrorMessage.wn.createElement(YahooIcon, null)
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(EmailProviderLink$1, {
    href: OUTLOOK,
    label: 'Outlook',
    Icon: /*#__PURE__*/extractErrorMessage.wn.createElement(OutlookIcon, null)
  }))), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    onClick: reset
  }, "Try again"));
};
var useEmailDomain$1 = function useEmailDomain$1() {
  var _a, _b;
  var stytch = useStytch();
  var config = useConfig();
  var _extractErrorMessage$31 = extractErrorMessage.h(function () {
      var _internal$readB2BInte3 = internal.readB2BInternals(stytch).bootstrap.getSync(),
        emailDomains = _internal$readB2BInte3.emailDomains;
      return emailDomains;
    }),
    _extractErrorMessage$32 = _slicedToArray(_extractErrorMessage$31, 2),
    emailDomains = _extractErrorMessage$32[0],
    setEmailDomains = _extractErrorMessage$32[1];
  extractErrorMessage.p(function () {
    internal.readB2BInternals(stytch).bootstrap.getAsync().then(function (_ref70) {
      var emailDomains = _ref70.emailDomains;
      setEmailDomains(emailDomains);
    });
  }, [stytch]);
  if ((_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.domainHint) {
    return (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.domainHint;
  }
  if (emailDomains.length === 1) {
    return emailDomains[0];
  }
  return null;
};
var EmailConfirmation = function EmailConfirmation() {
  var _useGlobalReducer39 = useGlobalReducer(),
    _useGlobalReducer40 = _slicedToArray(_useGlobalReducer39, 2),
    state = _useGlobalReducer40[0],
    dispatch = _useGlobalReducer40[1];
  var emailDomain = useEmailDomain$1();
  var reset = function reset() {
    dispatch({
      type: 'set_user_supplied_email',
      email: ''
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(EmailConfirmation$1, {
    emailDomain: emailDomain,
    reset: reset,
    email: state.formState.emailState.userSuppliedEmail
  });
};
var LoggingInScreen = function LoggingInScreen() {
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 36,
    alignItems: "center"
  }, /*#__PURE__*/extractErrorMessage.y(Text, {
    size: "header"
  }, "Logging in..."), /*#__PURE__*/extractErrorMessage.y(CircularProgress, {
    size: 100,
    thickness: 8
  }));
};
var LoadingScreen = function LoadingScreen() {
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 36,
    alignItems: "center"
  }, /*#__PURE__*/extractErrorMessage.y(CircularProgress, {
    size: 100,
    thickness: 8
  }));
};
var isJoinViaJitType = function isJoinViaJitType(type) {
  return type === 'eligible_to_join_by_email_domain' || type === 'eligible_to_join_by_oauth_tenant';
};
var OrganizationsContainer = extractErrorMessage.He(Flex)(_templateObject41 || (_templateObject41 = _taggedTemplateLiteral(["\n  border: ", ";\n  border-radius: ", ";\n  > div + div {\n    border-top: ", ";\n  }\n"])), function (_ref71) {
  var theme = _ref71.theme;
  return theme.container.border;
}, function (_ref72) {
  var theme = _ref72.theme;
  return theme.container.borderRadius;
}, function (_ref73) {
  var theme = _ref73.theme;
  return theme.container.border;
});
var OrganizationsRow = extractErrorMessage.He(Flex)(_templateObject42 || (_templateObject42 = _taggedTemplateLiteral(["\n  cursor: pointer;\n  gap: 8px;\n"])));
var LogoImage = extractErrorMessage.He.img(_templateObject43 || (_templateObject43 = _taggedTemplateLiteral(["\n  height: 40px;\n  width: 40px;\n  flex-shrink: 0;\n  border-radius: 4px;\n"])));
var LogoText = extractErrorMessage.He(Flex)(_templateObject44 || (_templateObject44 = _taggedTemplateLiteral(["\n  height: 40px;\n  width: 40px;\n  flex-shrink: 0;\n  background-color: ", ";\n  color: ", ";\n  border-radius: 4px;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 25px;\n"])), function (_ref74) {
  var theme = _ref74.theme;
  return theme.buttons.primary.backgroundColor;
}, function (_ref75) {
  var theme = _ref75.theme;
  return theme.buttons.primary.textColor;
});
var SvgNoShrink = extractErrorMessage.He.svg(_templateObject45 || (_templateObject45 = _taggedTemplateLiteral(["\n  flex-shrink: 0;\n"])));
var RightArrowSVG = function RightArrowSVG() {
  return /*#__PURE__*/extractErrorMessage.y(SvgNoShrink, {
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M7 0.333313L5.825 1.50831L10.475 6.16665H0.333334V7.83331H10.475L5.825 12.4916L7 13.6666L13.6667 6.99998L7 0.333313Z",
    fill: "#19303D"
  }));
};
var Logo = function Logo(_ref76) {
  var name = _ref76.name,
    logo = _ref76.logo;
  if (logo !== '') {
    return /*#__PURE__*/extractErrorMessage.y(LogoImage, {
      src: logo
    });
  }
  return /*#__PURE__*/extractErrorMessage.y(LogoText, {
    alignItems: "center",
    justifyContent: "center"
  }, name[0]);
};
var ArrowText = function ArrowText(_ref77) {
  var type = _ref77.type;
  if (isJoinViaJitType(type) || type === 'pending_member') return /*#__PURE__*/extractErrorMessage.y(Text, {
    align: "right"
  }, "Join");
  if (type === 'invited_member') return /*#__PURE__*/extractErrorMessage.y(Text, {
    align: "right"
  }, "Accept Invite");
  return /*#__PURE__*/extractErrorMessage.y(extractErrorMessage.g, null);
};
var DiscoverNoOrganizations = function DiscoverNoOrganizations() {
  var _useGlobalReducer41 = useGlobalReducer(),
    _useGlobalReducer42 = _slicedToArray(_useGlobalReducer41, 2),
    state = _useGlobalReducer42[0],
    dispatch = _useGlobalReducer42[1];
  var stytchClient = useStytch();
  var config = useConfig();
  var _useBootstrap = useBootstrap(),
    createOrganizationEnabled = _useBootstrap.createOrganizationEnabled;
  var goBack = function goBack() {
    return dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  var _useMutate2 = useMutate("stytch.discovery.organization.create", function () {
      return stytchClient.discovery.organizations.create({
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      },
      onError: function onError() {
        dispatch({
          type: 'transition',
          screen: AppScreens$1.Error
        });
      }
    }),
    stytchCreateOrganization = _useMutate2.trigger,
    isCreateLoading = _useMutate2.isMutating;
  if (isCreateLoading) {
    return /*#__PURE__*/extractErrorMessage.y(LoadingScreen, null);
  }
  if (createOrganizationEnabled && !config.disableCreateOrganization) {
    return /*#__PURE__*/extractErrorMessage.y(Flex, {
      direction: "column",
      gap: 24
    }, /*#__PURE__*/extractErrorMessage.y(BackArrow, {
      onClick: goBack
    }), /*#__PURE__*/extractErrorMessage.y(Text, {
      size: "header"
    }, "Create an organization to get started"), /*#__PURE__*/extractErrorMessage.y(Button, {
      type: "button",
      onClick: function onClick() {
        return stytchCreateOrganization();
      }
    }, "Create an organization"), /*#__PURE__*/extractErrorMessage.y(Text, null, state.formState.discoveryState.email, " does not have an account. Think this is a mistake? Try a different email address, or contact your admin."));
  }
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.y(BackArrow, {
    onClick: goBack
  }), /*#__PURE__*/extractErrorMessage.y(Text, {
    size: "header"
  }, state.formState.discoveryState.email, " does not belong to any organizations."), /*#__PURE__*/extractErrorMessage.y(Text, null, "Make sure your email address is correct. Otherwise, you might need to be invited by your admin."), /*#__PURE__*/extractErrorMessage.y(Button, {
    type: "button",
    variant: "outlined",
    onClick: goBack
  }, "Try a different email address"));
};
var shouldAllowDirectLoginToOrganization = function shouldAllowDirectLoginToOrganization(organizations, config) {
  if (!(config === null || config === void 0 ? void 0 : config.status)) {
    return null;
  }
  var activeOrganizations = organizations.filter(function (org) {
    return org.membership.type === 'active_member';
  });
  var hasBlockingConditions = organizations.some(function (org) {
    return (org.membership.type === 'pending_member' || org.membership.type === 'invited_member') && !config.ignoreInvites || isJoinViaJitType(org.membership.type) && !config.ignoreJitProvisioning;
  });
  return activeOrganizations.length === 1 && !hasBlockingConditions ? activeOrganizations[0] : null;
};
var Discovery = function Discovery() {
  var _a;
  var _useGlobalReducer43 = useGlobalReducer(),
    _useGlobalReducer44 = _slicedToArray(_useGlobalReducer43, 2),
    state = _useGlobalReducer44[0],
    dispatch = _useGlobalReducer44[1];
  var stytchClient = useStytch();
  var config = useConfig();
  var shouldDirectLoginConfigEnabled = !!((_a = config.directLoginForSingleMembership) === null || _a === void 0 ? void 0 : _a.status);
  var _useBootstrap2 = useBootstrap(),
    createOrganizationEnabled = _useBootstrap2.createOrganizationEnabled;
  extractErrorMessage.p(function () {
    var directLoginOrganization = shouldAllowDirectLoginToOrganization(state.formState.discoveryState.discoveredOrganizations, config.directLoginForSingleMembership);
    if (shouldDirectLoginConfigEnabled && directLoginOrganization !== null) {
      handleDiscoveryOrganizationStart(directLoginOrganization);
    }
  }, [shouldDirectLoginConfigEnabled, state.formState.discoveryState.discoveredOrganizations, config.directLoginForSingleMembership]);
  var handleDiscoveryOrganizationStart = function handleDiscoveryOrganizationStart(discoveredOrganization) {
    var organization = discoveredOrganization.organization;
    if (discoveredOrganization.primary_required) {
      var allowedAuthMethods = discoveredOrganization.primary_required.allowed_auth_methods;
      if (allowedAuthMethods && allowedAuthMethods.length === 1 && allowedAuthMethods[0] === 'sso' && organization.sso_default_connection_id) {
        startSso(organization.sso_default_connection_id);
      } else {
        dispatch({
          type: 'select_discovered_organization',
          discoveredOrganization: discoveredOrganization
        });
      }
    } else {
      stytchDiscoveryExchange({
        organizationId: organization.organization_id
      });
    }
  };
  var startSso = extractErrorMessage.T(function (connectionId) {
    stytchClient.sso.start({
      connection_id: connectionId
    });
  }, [stytchClient]);
  var _useMutate3 = useMutate("stytch.discovery.intermediateSessions.exchange", function (_, _ref78) {
      var organizationId = _ref78.arg.organizationId;
      return stytchClient.discovery.intermediateSessions.exchange({
        organization_id: organizationId,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      }
    }),
    stytchDiscoveryExchange = _useMutate3.trigger,
    isExchangeLoading = _useMutate3.isMutating;
  var _useMutate4 = useMutate("stytch.discovery.organization.create", function () {
      return stytchClient.discovery.organizations.create({
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      },
      onError: function onError() {
        dispatch({
          type: 'transition',
          screen: AppScreens$1.Error
        });
      }
    }),
    stytchCreateOrganization = _useMutate4.trigger,
    isCreateLoading = _useMutate4.isMutating;
  if (isExchangeLoading) {
    return /*#__PURE__*/extractErrorMessage.y(LoggingInScreen, null);
  }
  if (isCreateLoading) {
    return /*#__PURE__*/extractErrorMessage.y(LoadingScreen, null);
  }
  if (state.formState.discoveryState.discoveredOrganizations.length === 0) {
    return /*#__PURE__*/extractErrorMessage.y(DiscoverNoOrganizations, null);
  }
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.y(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/extractErrorMessage.y(Text, {
    size: "header"
  }, "Select an organization to continue"), /*#__PURE__*/extractErrorMessage.y(OrganizationsContainer, {
    direction: "column"
  }, state.formState.discoveryState.discoveredOrganizations.map(function (discoveredOrganization) {
    var organization = discoveredOrganization.organization,
      membership = discoveredOrganization.membership;
    return /*#__PURE__*/extractErrorMessage.y(OrganizationsRow, {
      padding: 8,
      justifyContent: "space-between",
      key: organization.organization_id,
      alignItems: "center",
      onClick: function onClick() {
        return handleDiscoveryOrganizationStart(discoveredOrganization);
      }
    }, /*#__PURE__*/extractErrorMessage.y(Flex, {
      gap: 4,
      alignItems: "center"
    }, /*#__PURE__*/extractErrorMessage.y(Logo, {
      name: organization.organization_name,
      logo: organization.organization_logo_url
    }), /*#__PURE__*/extractErrorMessage.y(Text, null, organization.organization_name)), /*#__PURE__*/extractErrorMessage.y(Flex, {
      gap: 4,
      alignItems: "center"
    }, /*#__PURE__*/extractErrorMessage.y(ArrowText, {
      type: membership.type
    }), /*#__PURE__*/extractErrorMessage.y(RightArrowSVG, null)));
  })), createOrganizationEnabled && ( /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.y(Divider, null), /*#__PURE__*/extractErrorMessage.y(Button, {
    type: "button",
    variant: "outlined",
    onClick: function onClick() {
      return stytchCreateOrganization();
    }
  }, "Create an organization"))));
};
var ConfirmationSVG = function ConfirmationSVG() {
  return /*#__PURE__*/extractErrorMessage.y("svg", {
    width: "201",
    height: "200",
    viewBox: "0 0 201 200",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("g", {
    opacity: "0.1"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.5 0C155.729 0 200.5 44.7715 200.5 99.9999C200.5 155.229 155.729 200 100.5 200C45.2715 200 0.5 155.229 0.5 99.9999C0.5 44.7715 45.2715 0 100.5 0Z",
    fill: "url(#paint0_linear_1356_5135)"
  })), /*#__PURE__*/extractErrorMessage.y("g", {
    opacity: "0.3"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.5 17.5728C146.023 17.5728 182.927 54.4767 182.927 99.9998C182.927 145.523 146.023 182.427 100.5 182.427C54.9768 182.427 18.0729 145.523 18.0729 99.9998C18.0729 54.4767 54.9768 17.5728 100.5 17.5728Z",
    fill: "url(#paint1_linear_1356_5135)"
  })), /*#__PURE__*/extractErrorMessage.y("g", {
    opacity: "0.7"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.5 32.231C137.988 32.231 168.378 62.6208 168.378 100.109C168.378 137.597 137.988 167.987 100.5 167.987C63.012 167.987 32.6222 137.597 32.6222 100.109C32.6222 62.6208 63.012 32.231 100.5 32.231Z",
    fill: "url(#paint2_linear_1356_5135)"
  })), /*#__PURE__*/extractErrorMessage.y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.605 48.7734C128.955 48.7734 151.937 71.7553 151.937 100.105C151.937 128.455 128.955 151.437 100.605 151.437C72.255 151.437 49.2731 128.455 49.2731 100.105C49.2731 71.7553 72.255 48.7734 100.605 48.7734Z",
    fill: "#00AC26",
    fillOpacity: "0.12"
  }), /*#__PURE__*/extractErrorMessage.y("mask", {
    id: "mask0_1356_5135",
    style: {
      maskType: 'alpha'
    },
    maskUnits: "userSpaceOnUse",
    x: "49",
    y: "48",
    width: "103",
    height: "104"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M100.605 48.7734C128.955 48.7734 151.937 71.7553 151.937 100.105C151.937 128.455 128.955 151.437 100.605 151.437C72.255 151.437 49.2731 128.455 49.2731 100.105C49.2731 71.7553 72.255 48.7734 100.605 48.7734Z",
    fill: "white"
  })), /*#__PURE__*/extractErrorMessage.y("g", {
    mask: "url(#mask0_1356_5135)"
  }), /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M88 117.5L70.5 100L64.6667 105.833L88 129.167L138 79.1666L132.167 73.3333L88 117.5Z",
    fill: "white"
  }), /*#__PURE__*/extractErrorMessage.y("defs", null, /*#__PURE__*/extractErrorMessage.y("linearGradient", {
    id: "paint0_linear_1356_5135",
    x1: "-86.6375",
    y1: "160.384",
    x2: "170.169",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/extractErrorMessage.y("stop", {
    stopColor: "white"
  }), /*#__PURE__*/extractErrorMessage.y("stop", {
    offset: "1",
    stopColor: "#09F33D"
  })), /*#__PURE__*/extractErrorMessage.y("linearGradient", {
    id: "paint1_linear_1356_5135",
    x1: "-86.6374",
    y1: "160.384",
    x2: "170.169",
    y2: "338.297",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/extractErrorMessage.y("stop", {
    stopColor: "#00AC26",
    stopOpacity: "0.4"
  }), /*#__PURE__*/extractErrorMessage.y("stop", {
    offset: "1",
    stopColor: "#BDFFBC",
    stopOpacity: "0.58"
  })), /*#__PURE__*/extractErrorMessage.y("linearGradient", {
    id: "paint2_linear_1356_5135",
    x1: "-86.6375",
    y1: "160.493",
    x2: "170.169",
    y2: "338.406",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/extractErrorMessage.y("stop", {
    stopColor: "#F8FFF5"
  }), /*#__PURE__*/extractErrorMessage.y("stop", {
    offset: "1",
    stopColor: "#00AC26",
    stopOpacity: "0.26"
  }))));
};
var Confirmation = function Confirmation() {
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    direction: "column",
    gap: 24,
    alignItems: "center"
  }, /*#__PURE__*/extractErrorMessage.y(Text, {
    size: "header"
  }, "Success!"), /*#__PURE__*/extractErrorMessage.y(Text, null, "You have successfully logged in."), /*#__PURE__*/extractErrorMessage.y(ConfirmationSVG, null));
};
var useMountEffect = function useMountEffect(effect) {
  var effectRef = extractErrorMessage._(effect);
  extractErrorMessage.p(function () {
    return effectRef.current();
  }, []);
};
var ConfirmationScreen = function ConfirmationScreen() {
  var onEvent = useEventCallback();
  useMountEffect(function () {
    onEvent({
      type: internal.StytchEventType.AuthenticateFlowComplete,
      data: {}
    });
  });
  return /*#__PURE__*/extractErrorMessage.y(Confirmation, null);
};
var assertUnreachable = function assertUnreachable() {
  throw new Error('Assertion failure');
};
var Chevron = function Chevron() {
  return /*#__PURE__*/extractErrorMessage.wn.createElement("svg", {
    viewBox: "0 0 25 25",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("path", {
    d: "M9.09 7.91L13.67 12.5L9.09 17.09L10.5 18.5L16.5 12.5L10.5 6.5L9.09 7.91Z",
    fill: "currentColor"
  }));
};
var Chevron$1 = CreateIcon(Chevron);
var StyledButton = extractErrorMessage.He.button(_templateObject46 || (_templateObject46 = _taggedTemplateLiteral(["\n  all: unset;\n  color: ", ";\n  cursor: pointer;\n  padding: 20px 0;\n  border-bottom: 1px solid #e5e8eb;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n"])), function (props) {
  return props.theme.colors.primary;
});
var MenuText = extractErrorMessage.He.div(_templateObject47 || (_templateObject47 = _taggedTemplateLiteral(["\n  flex: 1 1 auto;\n"])));
var ChevronContainer = extractErrorMessage.He.span(_templateObject48 || (_templateObject48 = _taggedTemplateLiteral(["\n  flex: 0 0 auto;\n"])));
var MenuButton = function MenuButton(_ref79) {
  var children = _ref79.children,
    disabled = _ref79.disabled,
    onClick = _ref79.onClick;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(StyledButton, {
    type: "button",
    onClick: onClick,
    disabled: disabled
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(MenuText, null, children), /*#__PURE__*/extractErrorMessage.wn.createElement(ChevronContainer, {
    "aria-hidden": true
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Chevron$1, null)));
};
var options = _defineProperty(_defineProperty({}, internal.B2BProducts.emailMagicLinks, {
  label: 'Email me a log in link'
}), internal.B2BProducts.emailOtp, {
  label: 'Email me a log in code'
});
var EmailMethodSelectionScreen = function EmailMethodSelectionScreen() {
  var _useEffectiveAuthConf5 = useEffectiveAuthConfig(),
    products = _useEffectiveAuthConf5.products;
  var _useGlobalReducer45 = useGlobalReducer(),
    _useGlobalReducer46 = _slicedToArray(_useGlobalReducer45, 2),
    state = _useGlobalReducer46[0],
    dispatch = _useGlobalReducer46[1];
  var _useEmlDiscoverySend2 = useEmlDiscoverySend(),
    sendDiscoveryEml = _useEmlDiscoverySend2.trigger,
    isSendingDiscoveryEml = _useEmlDiscoverySend2.isMutating,
    sendDiscoveryEmlError = _useEmlDiscoverySend2.error,
    resetSendDiscoveryEml = _useEmlDiscoverySend2.reset;
  var _useEmailOtpDiscovery2 = useEmailOtpDiscoverySend(),
    sendDiscoveryOtp = _useEmailOtpDiscovery2.trigger,
    isSendingDiscoveryOtp = _useEmailOtpDiscovery2.isMutating,
    sendDiscoveryOtpError = _useEmailOtpDiscovery2.error,
    resetSendDiscoveryOtp = _useEmailOtpDiscovery2.reset;
  var _useEmlLoginOrSignup2 = useEmlLoginOrSignup(),
    sendLoginOrSignupEml = _useEmlLoginOrSignup2.trigger,
    isSendingLoginOrSignupEml = _useEmlLoginOrSignup2.isMutating,
    sendLoginOrSignupEmlError = _useEmlLoginOrSignup2.error,
    resetSendLoginOrSignupEml = _useEmlLoginOrSignup2.reset;
  var _useEmailOtpLoginOrSi2 = useEmailOtpLoginOrSignup(),
    sendLoginOrSignupOtp = _useEmailOtpLoginOrSi2.trigger,
    isSendingLoginOrSignupOtp = _useEmailOtpLoginOrSi2.isMutating,
    sendLoginOrSignupOtpError = _useEmailOtpLoginOrSi2.error,
    resetSendLoginOrSignupOtp = _useEmailOtpLoginOrSi2.reset;
  var isSending = isSendingDiscoveryEml || isSendingDiscoveryOtp || isSendingLoginOrSignupEml || isSendingLoginOrSignupOtp;
  var error = sendDiscoveryEmlError || sendDiscoveryOtpError || sendLoginOrSignupEmlError || sendLoginOrSignupOtpError;
  var errorMessage = extractErrorMessage.extractErrorMessage(error);
  var handleChooseMethod = function handleChooseMethod(method) {
    resetSendDiscoveryEml();
    resetSendDiscoveryOtp();
    resetSendLoginOrSignupEml();
    resetSendLoginOrSignupOtp();
    switch (method) {
      case internal.B2BProducts.emailMagicLinks:
        if (state.flowState.type === internal.AuthFlowType.Discovery) {
          sendDiscoveryEml({
            email: state.formState.emailState.userSuppliedEmail
          });
        } else if (state.flowState.type === internal.AuthFlowType.Organization && state.flowState.organization) {
          sendLoginOrSignupEml({
            email: state.formState.emailState.userSuppliedEmail,
            organization_id: state.flowState.organization.organization_id
          });
        }
        break;
      case internal.B2BProducts.emailOtp:
        if (state.flowState.type === internal.AuthFlowType.Discovery) {
          sendDiscoveryOtp({
            email: state.formState.emailState.userSuppliedEmail
          });
        } else if (state.flowState.type === internal.AuthFlowType.Organization && state.flowState.organization) {
          sendLoginOrSignupOtp({
            email: state.formState.emailState.userSuppliedEmail,
            organization_id: state.flowState.organization.organization_id
          });
        }
        break;
    }
  };
  var displayOptions = extractErrorMessage.F(function () {
    return products.filter(function (product) {
      return product in options;
    }).map(function (product) {
      var option = options[product];
      return {
        option: product,
        label: option.label
      };
    });
  }, [products]);
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Select how you\u2019d like to continue."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column"
  }, displayOptions.map(function (_ref80) {
    var option = _ref80.option,
      label = _ref80.label;
    return /*#__PURE__*/extractErrorMessage.wn.createElement(MenuButton, {
      key: option,
      disabled: isSending,
      onClick: function onClick() {
        handleChooseMethod(option);
      }
    }, label);
  })), errorMessage && /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage
  }));
};
var InlineButton = function InlineButton(_ref81) {
  var onClick = _ref81.onClick,
    children = _ref81.children;
  return /*#__PURE__*/extractErrorMessage.wn.createElement("button", {
    onClick: onClick,
    style: {
      all: 'unset'
    }
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("b", {
    style: {
      cursor: 'pointer'
    }
  }, children));
};
var Wrapper = extractErrorMessage.He.div(_templateObject49 || (_templateObject49 = _taggedTemplateLiteral(["\n  display: grid;\n  grid-template-rows: ", ";\n  transition: grid-template-rows 0.15s ease-out;\n"])), function (_ref82) {
  var isOpen = _ref82.isOpen;
  return isOpen ? '1fr' : '0fr';
});
var Inner = extractErrorMessage.He.div(_templateObject50 || (_templateObject50 = _taggedTemplateLiteral(["\n  overflow: hidden;\n"])));
var AnimatedContainer = function AnimatedContainer(_ref83) {
  var isOpen = _ref83.isOpen,
    children = _ref83.children;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Wrapper, {
    isOpen: isOpen
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Inner, null, children));
};
var Container = extractErrorMessage.He.div(_templateObject51 || (_templateObject51 = _taggedTemplateLiteral(["\n  height: 4px;\n  background-color: ", ";\n  border-radius: 3px;\n  overflow: hidden;\n"])), function (_ref84) {
  var theme = _ref84.theme;
  return theme.colors.disabled;
});
var loading = extractErrorMessage.Ue(_templateObject52 || (_templateObject52 = _taggedTemplateLiteral(["\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(-1%);\n  }\n"])));
var Progress = extractErrorMessage.He.div(_templateObject53 || (_templateObject53 = _taggedTemplateLiteral(["\n  height: 100%;\n  width: 100%;\n  background-color: ", ";\n  animation: ", " 10s cubic-bezier(0.22, 1, 0.36, 1);\n"])), function (_ref85) {
  var theme = _ref85.theme;
  return theme.colors.primary;
}, loading);
var LoadingBar = function LoadingBar(_ref86) {
  var isLoading = _ref86.isLoading;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Container, null, isLoading && /*#__PURE__*/extractErrorMessage.wn.createElement(Progress, null));
};
var GAP = '8px';
var WIDTH = '46px';
var INPUT_HEIGHT = '46px';
var Digit = extractErrorMessage.He.div(_templateObject54 || (_templateObject54 = _taggedTemplateLiteral(["\n  border: 1px solid ", ";\n  border-radius: 4px;\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  justify-content: center;\n  height: ", ";\n  width: ", ";\n  background: ", ";\n  color: ", ";\n"])), function (_ref87) {
  var disabled = _ref87.disabled,
    theme = _ref87.theme;
  return disabled ? theme.colors.disabled : '#ADBCC5';
}, INPUT_HEIGHT, WIDTH, function (_ref88) {
  var disabled = _ref88.disabled,
    theme = _ref88.theme;
  return disabled ? theme.colors.disabled : theme.inputs.backgroundColor;
}, function (_ref89) {
  var disabled = _ref89.disabled,
    theme = _ref89.theme;
  return disabled ? theme.colors.disabledText : theme.inputs.textColor;
});
var digitsContainerStyles = {
  display: 'flex',
  justifyContent: 'space-between',
  gap: GAP,
  position: 'relative',
  zIndex: -1
};
var otpContainerStyles = {
  overflow: 'hidden',
  position: 'relative',
  textAlign: 'initial',
  zIndex: 1
};
var invisibleInputStyles = {
  background: 'transparent',
  border: 'none',
  color: 'transparent',
  height: INPUT_HEIGHT,
  margin: 0,
  outline: 'none',
  position: 'absolute',
  width: "calc(100% - (0.5 * ".concat(WIDTH, "))"),
  caretColor: '#ADBCC5',
  letterSpacing: "calc(".concat(WIDTH, " - 1ch + ").concat(GAP, ")"),
  paddingLeft: "calc(0.5 * ".concat(WIDTH, ")"),
  zIndex: 10
};
var DigitAtIndex = function DigitAtIndex(_ref90) {
  var index = _ref90.index,
    disabled = _ref90.disabled,
    otp = _ref90.otp;
  var fill = otp ? otp[index] : '';
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Digit, {
    disabled: disabled,
    "data-testid": "otp-".concat(index)
  }, fill);
};
var OTPInput = function OTPInput(_ref91) {
  var otp = _ref91.otp,
    setOtp = _ref91.setOtp,
    disabled = _ref91.disabled;
  var onPasscodeChange = function onPasscodeChange(e) {
    if (!/^\d*$/.test(e.target.value)) {
      return;
    }
    setOtp(e.target.value);
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement("div", {
    style: otpContainerStyles
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("input", Object.assign({
    "aria-label": "One-time passcode",
    autoComplete: "one-time-code",
    autoFocus: true,
    disabled: disabled,
    style: invisibleInputStyles,
    maxLength: 6,
    onChange: onPasscodeChange,
    type: "text",
    inputMode: "numeric",
    value: otp
  }, extractErrorMessage.passwordManagerDisableAutofillProps)), /*#__PURE__*/extractErrorMessage.wn.createElement("div", {
    style: digitsContainerStyles
  }, _toConsumableArray(Array(6).keys()).map(function (i) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(DigitAtIndex, {
      key: "digit-".concat(i),
      index: i,
      otp: otp,
      disabled: !!disabled
    });
  })));
};
var OTP_CODE_LENGTH = 6;
var OTPControl = function OTPControl(_ref92) {
  var isSubmitting = _ref92.isSubmitting,
    onSubmit = _ref92.onSubmit,
    errorMessage = _ref92.errorMessage;
  var _extractErrorMessage$33 = extractErrorMessage.h(''),
    _extractErrorMessage$34 = _slicedToArray(_extractErrorMessage$33, 2),
    otp = _extractErrorMessage$34[0],
    setOtp = _extractErrorMessage$34[1];
  var handleOtpChange = function handleOtpChange(otp) {
    setOtp(otp);
    if (otp.length === OTP_CODE_LENGTH) {
      onSubmit(otp);
    }
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    maxWidth: 316
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(OTPInput, {
    otp: otp,
    setOtp: handleOtpChange,
    disabled: isSubmitting
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(AnimatedContainer, {
    isOpen: isSubmitting
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8,
    marginTop: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    color: "secondary",
    size: "helper"
  }, "Verifying passcode..."), /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingBar, {
    isLoading: isSubmitting
  }))), !isSubmitting && /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage !== null && errorMessage !== void 0 ? errorMessage : ''
  }));
};
var OTPEntry = function OTPEntry(_ref93) {
  var header = _ref93.header,
    helperContent = _ref93.helperContent,
    instruction = _ref93.instruction,
    isSubmitting = _ref93.isSubmitting,
    onSubmit = _ref93.onSubmit,
    errorMessage = _ref93.errorMessage;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, header), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, instruction), /*#__PURE__*/extractErrorMessage.wn.createElement(OTPControl, {
    isSubmitting: isSubmitting,
    onSubmit: onSubmit,
    errorMessage: errorMessage
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, helperContent));
};
var getSecondsRemaining = function getSecondsRemaining(expiration) {
  var now = new Date();
  return Math.ceil((expiration.getTime() - now.getTime()) / 1000);
};
var ExpirationMessage = function ExpirationMessage(_ref94) {
  var expiration = _ref94.expiration,
    resendOTP = _ref94.resendOTP;
  var _extractErrorMessage$35 = extractErrorMessage.h(function () {
      return getSecondsRemaining(expiration);
    }),
    _extractErrorMessage$36 = _slicedToArray(_extractErrorMessage$35, 2),
    seconds = _extractErrorMessage$36[0],
    setSeconds = _extractErrorMessage$36[1];
  var codeExpired = seconds <= 0;
  extractErrorMessage.p(function () {
    if (!codeExpired) {
      var updateSeconds = function updateSeconds() {
        return setSeconds(getSecondsRemaining(expiration));
      };
      var interval = setInterval(updateSeconds, 1000);
      updateSeconds();
      return function () {
        return clearInterval(interval);
      };
    }
  }, [codeExpired, expiration]);
  var displayMinutes = Math.floor(Number(seconds / 60));
  var displaySeconds = seconds - displayMinutes * 60;
  var formattedTime = "".concat(displayMinutes, ":").concat(displaySeconds < 10 ? "0".concat(displaySeconds) : displaySeconds);
  var formattedText = seconds > 0 ? "Your code expires in ".concat(formattedTime, ". Didn't get it? ") : 'Your code has expired. ';
  return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, formattedText, /*#__PURE__*/extractErrorMessage.wn.createElement(InlineButton, {
    onClick: resendOTP
  }, "Resend code"));
};
var SentOTPEntry = function SentOTPEntry(_ref95) {
  var expiration = _ref95.expiration,
    formattedDestination = _ref95.formattedDestination,
    isSubmitting = _ref95.isSubmitting,
    onSubmit = _ref95.onSubmit,
    errorMessage = _ref95.errorMessage,
    resendOTP = _ref95.resendOTP;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OTPEntry, {
    header: "Enter passcode",
    helperContent: /*#__PURE__*/extractErrorMessage.wn.createElement(ExpirationMessage, {
      expiration: expiration,
      resendOTP: resendOTP
    }),
    instruction: /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, "A 6-digit passcode was sent to you at ", /*#__PURE__*/extractErrorMessage.wn.createElement("b", null, formattedDestination), "."),
    isSubmitting: isSubmitting,
    onSubmit: onSubmit,
    errorMessage: errorMessage
  });
};
var EmailOTPEntryScreen = function EmailOTPEntryScreen() {
  var stytchClient = useStytch();
  var config = useConfig();
  var _useGlobalReducer47 = useGlobalReducer(),
    _useGlobalReducer48 = _slicedToArray(_useGlobalReducer47, 2),
    state = _useGlobalReducer48[0],
    dispatch = _useGlobalReducer48[1];
  var codeExpiration = state.formState.otpState.codeExpiration;
  var userSuppliedEmail = state.formState.emailState.userSuppliedEmail;
  var _useEmailOtpLoginOrSi3 = useEmailOtpLoginOrSignup(),
    sendOtp = _useEmailOtpLoginOrSi3.trigger,
    isSendingOtp = _useEmailOtpLoginOrSi3.isMutating,
    sendOtpError = _useEmailOtpLoginOrSi3.error;
  var _useEmailOtpDiscovery3 = useEmailOtpDiscoverySend(),
    sendOtpDiscovery = _useEmailOtpDiscovery3.trigger,
    isSendingDiscovery = _useEmailOtpDiscovery3.isMutating,
    sendDiscoveryError = _useEmailOtpDiscovery3.error,
    resetSendDiscovery = _useEmailOtpDiscovery3.reset;
  var isSending = isSendingDiscovery || isSendingOtp;
  var sendError = sendDiscoveryError || sendOtpError;
  var _useMutate5 = useMutate('stytch.otps.email.discovery.authenticate', function (_, _ref96) {
      var _ref96$arg = _ref96.arg,
        otp = _ref96$arg.otp,
        email = _ref96$arg.email;
      return stytchClient.otps.email.discovery.authenticate({
        code: otp,
        email_address: email
      });
    }, {
      onSuccess: function onSuccess(data) {
        onDiscoveryAuthenticateSuccess(data, dispatch);
      }
    }),
    discoveryAuthenticate = _useMutate5.trigger,
    isDiscoveryAuthenticating = _useMutate5.isMutating,
    discoveryAuthenticateError = _useMutate5.error,
    resetDiscoveryAuthenticate = _useMutate5.reset;
  var _useMutate6 = useMutate('stytch.otps.email.authenticate', function (_, _ref97) {
      var _ref97$arg = _ref97.arg,
        otp = _ref97$arg.otp,
        emailAddress = _ref97$arg.emailAddress,
        organizationId = _ref97$arg.organizationId,
        sessionDurationMinutes = _ref97$arg.sessionDurationMinutes;
      return stytchClient.otps.email.authenticate({
        code: otp,
        email_address: emailAddress,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess(data) {
        onAuthenticateSuccess(data, dispatch, config);
      }
    }),
    authenticate = _useMutate6.trigger,
    isAuthenticating = _useMutate6.isMutating,
    authenticateError = _useMutate6.error,
    resetAuthenticate = _useMutate6.reset;
  var isAuthenticatingAny = isDiscoveryAuthenticating || isAuthenticating;
  var authenticateAnyError = discoveryAuthenticateError || authenticateError;
  var errorAny = authenticateAnyError || sendError;
  var errorMessage = errorAny ? 'Invalid passcode, please try again.' : undefined;
  var resetAll = function resetAll() {
    resetDiscoveryAuthenticate();
    resetAuthenticate();
    resetSendDiscovery();
  };
  var handleSubmit = function handleSubmit(otp) {
    resetAll();
    if (state.flowState.type === internal.AuthFlowType.Discovery) {
      discoveryAuthenticate({
        otp: otp,
        email: userSuppliedEmail
      });
    } else if (state.flowState.type === internal.AuthFlowType.Organization && state.flowState.organization && state.formState.emailState.userSuppliedEmail) {
      authenticate({
        otp: otp,
        emailAddress: state.formState.emailState.userSuppliedEmail,
        organizationId: state.flowState.organization.organization_id,
        sessionDurationMinutes: config.sessionOptions.sessionDurationMinutes
      });
    }
  };
  var handleResendOTP = function handleResendOTP() {
    resetAll();
    if (!isSending) {
      if (state.flowState.type === internal.AuthFlowType.Discovery) {
        sendOtpDiscovery({
          email: userSuppliedEmail
        });
      } else if (state.flowState.type === internal.AuthFlowType.Organization && state.flowState.organization) {
        sendOtp({
          email: userSuppliedEmail,
          organization_id: state.flowState.organization.organization_id
        });
      }
    }
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'navigate_back'
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: handleBack
  }), codeExpiration !== null ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(SentOTPEntry, {
    isSubmitting: isAuthenticatingAny,
    onSubmit: handleSubmit,
    errorMessage: errorMessage,
    expiration: codeExpiration,
    formattedDestination: userSuppliedEmail,
    resendOTP: handleResendOTP
  })) : ( /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingScreen, null)));
};
var mfaOptions = _defineProperty(_defineProperty({}, internal.B2BMFAProducts.totp, {
  label: 'Use an authenticator app'
}), internal.B2BMFAProducts.smsOtp, {
  label: 'Text me a code'
});
var MFAEnrollmentSelectionScreen = function MFAEnrollmentSelectionScreen() {
  var _useConfig = useConfig(),
    mfaProductInclude = _useConfig.mfaProductInclude,
    mfaProductOrder = _useConfig.mfaProductOrder;
  var _useGlobalReducer49 = useGlobalReducer(),
    _useGlobalReducer50 = _slicedToArray(_useGlobalReducer49, 2),
    state = _useGlobalReducer50[0],
    dispatch = _useGlobalReducer50[1];
  var organizationMfaOptionsSupported = state.mfa.primaryInfo.organizationMfaOptionsSupported;
  var handleChooseMethod = function handleChooseMethod(method) {
    dispatch({
      type: 'mfa/start_enrollment',
      method: method
    });
  };
  var displayOptions = extractErrorMessage.F(function () {
    var optionsToDisplay = getEnabledMethods({
      allMethods: B2B_MFA_METHODS,
      orgSupportedMethods: organizationMfaOptionsSupported,
      uiIncludedMethods: mfaProductInclude
    });
    var sortedOptions = (mfaProductOrder !== null && mfaProductOrder !== void 0 ? mfaProductOrder : B2B_MFA_METHODS).reduce(function (acc, cur) {
      if (optionsToDisplay.has(cur)) {
        acc.push({
          option: cur,
          label: mfaOptions[cur].label
        });
        optionsToDisplay["delete"](cur);
      }
      return acc;
    }, []);
    optionsToDisplay.forEach(function (option) {
      sortedOptions.push({
        option: option,
        label: mfaOptions[option].label
      });
    });
    return sortedOptions;
  }, [mfaProductInclude, mfaProductOrder, organizationMfaOptionsSupported]);
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Set up Multi-Factor Authentication"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Your organization requires an additional form of verification to make your account more secure."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column"
  }, displayOptions.map(function (_ref98) {
    var option = _ref98.option,
      label = _ref98.label;
    return /*#__PURE__*/extractErrorMessage.wn.createElement(MenuButton, {
      key: option,
      onClick: function onClick() {
        handleChooseMethod(option);
      }
    }, label);
  })));
};
var inboxLinks = function inboxLinks(emailDomain) {
  if (!emailDomain) {
    return {
      GMAIL: 'https://mail.google.com/mail/u/0/#search/in%3Aanywhere',
      OUTLOOK: 'https://outlook.office.com/mail/0/inbox'
    };
  }
  var gmailQuery = encodeURIComponent("from:@".concat(emailDomain, " in:anywhere"));
  return {
    GMAIL: "https://mail.google.com/mail/u/0/#search/".concat(gmailQuery),
    OUTLOOK: 'https://outlook.office.com/mail/0/inbox'
  };
};
var Link = extractErrorMessage.He.a(_templateObject55 || (_templateObject55 = _taggedTemplateLiteral(["\n  all: unset;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n    text-decoration-color: ", ";\n  }\n"])), function (props) {
  return props.theme.colors.primary;
});
var EmailProviderLink = function EmailProviderLink(_ref99) {
  var label = _ref99.label,
    href = _ref99.href,
    Icon = _ref99.Icon;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 4
  }, Icon, /*#__PURE__*/extractErrorMessage.wn.createElement(Link, {
    href: href,
    target: "_blank",
    rel: "noopener noreferrer"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Open in ", label)));
};
var VerifyEmailConfirmation = function VerifyEmailConfirmation(_ref100) {
  var emailDomain = _ref100.emailDomain,
    reset = _ref100.reset,
    email = _ref100.email;
  var _inboxLinks = inboxLinks(emailDomain),
    GMAIL = _inboxLinks.GMAIL,
    OUTLOOK = _inboxLinks.OUTLOOK;
  var _useGlobalReducer51 = useGlobalReducer(),
    _useGlobalReducer52 = _slicedToArray(_useGlobalReducer51, 2),
    dispatch = _useGlobalReducer52[1];
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Verify your email first."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 12
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "A login link was sent to you at ", /*#__PURE__*/extractErrorMessage.wn.createElement("b", null, email), "."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailProviderLink, {
    href: GMAIL,
    label: 'Gmail',
    Icon: /*#__PURE__*/extractErrorMessage.wn.createElement(GmailIcon, null)
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(EmailProviderLink, {
    href: OUTLOOK,
    label: 'Outlook',
    Icon: /*#__PURE__*/extractErrorMessage.wn.createElement(OutlookIcon, null)
  }))), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "row"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    color: "secondary"
  }, "Didn't get it?"), "\xA0", /*#__PURE__*/extractErrorMessage.wn.createElement(GetHelpText, {
    color: "secondary",
    onClick: reset
  }, "Resend email")));
};
var useEmailDomain = function useEmailDomain() {
  var _a, _b;
  var stytch = useStytch();
  var config = useConfig();
  var _extractErrorMessage$37 = extractErrorMessage.h(function () {
      var _internal$readB2BInte4 = internal.readB2BInternals(stytch).bootstrap.getSync(),
        emailDomains = _internal$readB2BInte4.emailDomains;
      return emailDomains;
    }),
    _extractErrorMessage$38 = _slicedToArray(_extractErrorMessage$37, 2),
    emailDomains = _extractErrorMessage$38[0],
    setEmailDomains = _extractErrorMessage$38[1];
  extractErrorMessage.p(function () {
    internal.readB2BInternals(stytch).bootstrap.getAsync().then(function (_ref101) {
      var emailDomains = _ref101.emailDomains;
      setEmailDomains(emailDomains);
    });
  }, [stytch]);
  if ((_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.domainHint) {
    return (_b = config.emailMagicLinksOptions) === null || _b === void 0 ? void 0 : _b.domainHint;
  }
  if (emailDomains.length === 1) {
    return emailDomains[0];
  }
  return null;
};
var PasswordResetConfirmation = function PasswordResetConfirmation() {
  var _useGlobalReducer53 = useGlobalReducer(),
    _useGlobalReducer54 = _slicedToArray(_useGlobalReducer53, 2),
    state = _useGlobalReducer54[0],
    dispatch = _useGlobalReducer54[1];
  var emailDomain = useEmailDomain();
  var reset = function reset() {
    dispatch({
      type: 'set_user_supplied_email',
      email: ''
    });
    dispatch({
      type: 'transition',
      screen: AppScreens$1.Main
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(VerifyEmailConfirmation, {
    emailDomain: emailDomain,
    reset: reset,
    email: state.formState.passwordState.email
  });
};
var Block = extractErrorMessage.He.div(_templateObject56 || (_templateObject56 = _taggedTemplateLiteral(["\n  height: 4px;\n  width: 25%;\n  background-color: ", ";\n"])), function (props) {
  return props.$bgColor;
});
var PasswordStrengthCheck = function PasswordStrengthCheck(_ref102) {
  var score = _ref102.score;
  var blocks = [];
  switch (score) {
    case 0:
    case 1:
      blocks = ['#8B1214', '#ADBCC5', '#ADBCC5', '#ADBCC5'];
      break;
    case 2:
      blocks = ['#8B1214', '#8B1214', '#ADBCC5', '#ADBCC5'];
      break;
    case 3:
      blocks = ['#0C5A56', '#0C5A56', '#0C5A56', '#ADBCC5'];
      break;
    case 4:
      blocks = ['#0C5A56', '#0C5A56', '#0C5A56', '#0C5A56'];
      break;
    default:
      blocks = ['#ADBCC5', '#ADBCC5', '#ADBCC5', '#ADBCC5'];
      break;
  }
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 2
  }, blocks.map(function (block, i) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(Block, {
      key: "".concat(block, "-").concat(i),
      "$bgColor": block
    });
  }));
};
var CheckIcon = function CheckIcon() {
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    height: 16,
    width: 16
  }, /*#__PURE__*/extractErrorMessage.y("svg", {
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M5.86332 10.5833L3.08332 7.80333L2.13666 8.74333L5.86332 12.47L13.8633 4.47L12.9233 3.53L5.86332 10.5833Z",
    fill: "#0C5A56"
  })));
};
var CrossIcon = function CrossIcon() {
  return /*#__PURE__*/extractErrorMessage.y(Flex, {
    height: 16,
    width: 16
  }, /*#__PURE__*/extractErrorMessage.y("svg", {
    width: "16",
    height: "16",
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M12.6667 4.27334L11.7267 3.33334L8.00001 7.06001L4.27334 3.33334L3.33334 4.27334L7.06001 8.00001L3.33334 11.7267L4.27334 12.6667L8.00001 8.94001L11.7267 12.6667L12.6667 11.7267L8.94001 8.00001L12.6667 4.27334Z",
    fill: "#8B1214"
  })));
};
var PasswordB2BError = function PasswordB2BError(props) {
  var _a, _b;
  var bootstrap = useBootstrap();
  var complexity = (_a = bootstrap.passwordConfig) === null || _a === void 0 ? void 0 : _a.ludsComplexity;
  var characterLength = (_b = bootstrap.passwordConfig) === null || _b === void 0 ? void 0 : _b.ludsMinimumCount;
  if (props.passwordPolicy === 'none') {
    return null;
  }
  if (props.passwordPolicy === 'zxcvbn') {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordStrengthCheck, {
      score: props.passwordScore
    }), /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
      errorMessage: props.errorMessage !== '' ? props.errorMessage : props.passwordFeedback
    }));
  }
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 4
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 4
  }, props.missingCharacters === 0 ? /*#__PURE__*/extractErrorMessage.wn.createElement(CheckIcon, null) : /*#__PURE__*/extractErrorMessage.wn.createElement(CrossIcon, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: props.missingCharacters === 0 ? 'success' : 'error'
  }, "Must be at least ", characterLength, " characters long")), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 4
  }, props.missingComplexity === 0 ? /*#__PURE__*/extractErrorMessage.wn.createElement(CheckIcon, null) : /*#__PURE__*/extractErrorMessage.wn.createElement(CrossIcon, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: props.missingComplexity === 0 ? 'success' : 'error'
  }, "Must contain ", complexity, " of the following: uppercase letter, lowercase letter, number, symbol")), props.isPasswordBreached && ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 4
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(CrossIcon, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "error"
  }, "This password may have been used on a different site that experienced a security issue. Please choose another password."))));
};
var clearStytchSearchParams = function clearStytchSearchParams() {
  var url = removeStytchParams(window.location.toString());
  window.history.replaceState(null, document.title, url);
};
var removeStytchParams = function removeStytchParams(value) {
  var url = new URL(value);
  var params = url.searchParams;
  params["delete"]('token');
  params["delete"]('stytch_token_type');
  return url;
};
var Form = extractErrorMessage.He.form(_templateObject57 || (_templateObject57 = _taggedTemplateLiteral(["\n  width: 100%;\n"])));
var PasswordResetForm = function PasswordResetForm() {
  var stytchClient = useStytch();
  var config = useConfig();
  var _useGlobalReducer55 = useGlobalReducer(),
    _useGlobalReducer56 = _slicedToArray(_useGlobalReducer55, 2),
    dispatch = _useGlobalReducer56[1];
  var onEvent = useEventCallback();
  var onError = useErrorCallback();
  var _extractErrorMessage$39 = extractErrorMessage.h(''),
    _extractErrorMessage$40 = _slicedToArray(_extractErrorMessage$39, 2),
    resetTokenType = _extractErrorMessage$40[0],
    setResetTokenType = _extractErrorMessage$40[1];
  var _extractErrorMessage$41 = extractErrorMessage.h(''),
    _extractErrorMessage$42 = _slicedToArray(_extractErrorMessage$41, 2),
    resetToken = _extractErrorMessage$42[0],
    setResetToken = _extractErrorMessage$42[1];
  var dataLayer = internal.readB2BInternals(stytchClient).dataLayer;
  var email = dataLayer.getItem('reset-email-value');
  var _extractErrorMessage$43 = extractErrorMessage.h(''),
    _extractErrorMessage$44 = _slicedToArray(_extractErrorMessage$43, 2),
    password = _extractErrorMessage$44[0],
    setPassword = _extractErrorMessage$44[1];
  var _extractErrorMessage$45 = extractErrorMessage.h(''),
    _extractErrorMessage$46 = _slicedToArray(_extractErrorMessage$45, 2),
    errorMessage = _extractErrorMessage$46[0],
    setErrorMessage = _extractErrorMessage$46[1];
  var _extractErrorMessage$47 = extractErrorMessage.h(0),
    _extractErrorMessage$48 = _slicedToArray(_extractErrorMessage$47, 2),
    passwordScore = _extractErrorMessage$48[0],
    setPasswordScore = _extractErrorMessage$48[1];
  var _extractErrorMessage$49 = extractErrorMessage.h(''),
    _extractErrorMessage$50 = _slicedToArray(_extractErrorMessage$49, 2),
    passwordFeedback = _extractErrorMessage$50[0],
    setPasswordFeedback = _extractErrorMessage$50[1];
  var _extractErrorMessage$51 = extractErrorMessage.h(true),
    _extractErrorMessage$52 = _slicedToArray(_extractErrorMessage$51, 2),
    invalidPassword = _extractErrorMessage$52[0],
    setInvalidPassword = _extractErrorMessage$52[1];
  var _extractErrorMessage$53 = extractErrorMessage.h(false),
    _extractErrorMessage$54 = _slicedToArray(_extractErrorMessage$53, 2),
    isSubmitting = _extractErrorMessage$54[0],
    setIsSubmitting = _extractErrorMessage$54[1];
  var _extractErrorMessage$55 = extractErrorMessage.h('none'),
    _extractErrorMessage$56 = _slicedToArray(_extractErrorMessage$55, 2),
    strengthPolicy = _extractErrorMessage$56[0],
    setStrengthPolicy = _extractErrorMessage$56[1];
  var _extractErrorMessage$57 = extractErrorMessage.h(0),
    _extractErrorMessage$58 = _slicedToArray(_extractErrorMessage$57, 2),
    missingCharacters = _extractErrorMessage$58[0],
    setMissingCharacters = _extractErrorMessage$58[1];
  var _extractErrorMessage$59 = extractErrorMessage.h(0),
    _extractErrorMessage$60 = _slicedToArray(_extractErrorMessage$59, 2),
    missingComplexity = _extractErrorMessage$60[0],
    setMissingComplexity = _extractErrorMessage$60[1];
  var _extractErrorMessage$61 = extractErrorMessage.h(false),
    _extractErrorMessage$62 = _slicedToArray(_extractErrorMessage$61, 2),
    isPasswordBreached = _extractErrorMessage$62[0],
    setIsPasswordBreached = _extractErrorMessage$62[1];
  var updateStrengthCheck = extractErrorMessage.F(function () {
    return internal.debounce(function (password) {
      return stytchClient.passwords.strengthCheck({
        password: password
      }).then(function (_ref103) {
        var score = _ref103.score,
          valid_password = _ref103.valid_password,
          zxcvbn_feedback = _ref103.zxcvbn_feedback,
          luds_feedback = _ref103.luds_feedback,
          strength_policy = _ref103.strength_policy,
          breached_password = _ref103.breached_password;
        setStrengthPolicy(strength_policy);
        setInvalidPassword(!valid_password);
        if (strength_policy === 'zxcvbn') {
          setPasswordScore(score);
          setPasswordFeedback(zxcvbn_feedback.warning);
        } else if (strength_policy === 'luds') {
          setMissingCharacters(luds_feedback.missing_characters);
          setMissingComplexity(luds_feedback.missing_complexity);
          setIsPasswordBreached(breached_password);
        }
      });
    });
  }, [stytchClient.passwords]);
  extractErrorMessage.p(function () {
    var _a, _b;
    var params = new URLSearchParams(window.location.search);
    var token = (_a = params.get('token')) !== null && _a !== void 0 ? _a : '';
    var tokenType = (_b = params.get('stytch_token_type')) !== null && _b !== void 0 ? _b : '';
    setResetToken(token);
    setResetTokenType(tokenType);
  }, []);
  extractErrorMessage.p(function () {
    var _a, _b;
    if (resetTokenType === 'multi_tenant_magic_links') {
      stytchClient.magicLinks.authenticate({
        magic_links_token: resetToken,
        session_duration_minutes: (_b = (_a = config.sessionOptions) === null || _a === void 0 ? void 0 : _a.sessionDurationMinutes) !== null && _b !== void 0 ? _b : internal.DEFAULT_SESSION_DURATION_MINUTES
      }).then(function (data) {
        clearStytchSearchParams();
        dispatch({
          type: 'primary_authenticate_success',
          response: data,
          includedMfaMethods: config.mfaProductInclude,
          resetTokenType: resetTokenType
        });
      })["catch"](function (e) {
        setErrorMessage('We were unable to verify your email. Please contact your admin for help.');
        onError(e);
      });
      return;
    }
  }, [resetTokenType]);
  var onPasswordChange = function onPasswordChange(password) {
    setPassword(password);
    updateStrengthCheck(password);
  };
  var handleSubmit = function handleSubmit(e) {
    var _a, _b;
    e.preventDefault();
    setErrorMessage('');
    setIsSubmitting(true);
    if (resetTokenType == 'multi_tenant_passwords') {
      stytchClient.passwords.resetByEmail({
        password_reset_token: resetToken,
        password: password,
        session_duration_minutes: (_b = (_a = config.sessionOptions) === null || _a === void 0 ? void 0 : _a.sessionDurationMinutes) !== null && _b !== void 0 ? _b : internal.DEFAULT_SESSION_DURATION_MINUTES
      }).then(function (data) {
        setIsSubmitting(false);
        onEvent({
          type: internal.StytchEventType.B2BPasswordResetByEmail,
          data: data
        });
        onAuthenticateSuccess(data, dispatch, config);
      })["catch"](function (e) {
        onError(e);
        var message = e.message;
        if (e instanceof internal.StytchAPIError) {
          message = e.error_message;
        }
        setErrorMessage(message);
        setIsSubmitting(false);
      });
    } else if (resetTokenType == 'discovery') {
      stytchClient.passwords.discovery.resetByEmail({
        password_reset_token: resetToken,
        password: password
      }).then(function (data) {
        setIsSubmitting(false);
        onEvent({
          type: internal.StytchEventType.B2BDiscoveryPasswordReset,
          data: data
        });
        dispatch({
          type: 'transition',
          screen: AppScreens$1.Discovery
        });
        dispatch({
          type: 'set_discovery_state',
          email: data.email_address,
          discoveredOrganizations: data.discovered_organizations
        });
      })["catch"](function (e) {
        onError(e);
        var message = e.message;
        if (e instanceof internal.StytchAPIError) {
          message = e.error_message;
        }
        setErrorMessage(message);
        setIsSubmitting(false);
      });
    } else {
      stytchClient.passwords.resetBySession({
        password: password
      }).then(function (data) {
        setIsSubmitting(false);
        onEvent({
          type: internal.StytchEventType.B2BPasswordResetBySession,
          data: data
        });
        dispatch({
          type: 'transition',
          screen: AppScreens$1.LoggedIn
        });
      })["catch"](function (e) {
        onError(e);
        var message = e.message;
        if (e instanceof internal.StytchAPIError) {
          message = e.error_message;
        }
        setErrorMessage(message);
        setIsSubmitting(false);
      });
    }
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 36,
    className: 'resetPasswordContainer'
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Set a new password"), /*#__PURE__*/extractErrorMessage.wn.createElement(Form, {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 8
  }, email ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Email"), /*#__PURE__*/extractErrorMessage.wn.createElement(Input, {
    disabled: true,
    name: "email",
    id: "email-input",
    value: email
  }))) : ( /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null)), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 2
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Password"), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordInput, {
    password: password,
    setPassword: onPasswordChange,
    type: "new"
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordB2BError, {
    passwordPolicy: strengthPolicy,
    passwordScore: passwordScore,
    errorMessage: errorMessage,
    passwordFeedback: passwordFeedback,
    missingCharacters: missingCharacters,
    missingComplexity: missingComplexity,
    isPasswordBreached: isPasswordBreached
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: "Continue",
    disabled: invalidPassword
  }))));
};
var PasswordSetNew = function PasswordSetNew() {
  var _useGlobalReducer57 = useGlobalReducer(),
    _useGlobalReducer58 = _slicedToArray(_useGlobalReducer57, 2),
    dispatch = _useGlobalReducer58[1];
  var onEvent = useEventCallback();
  var config = useConfig();
  var _usePasswordInput3 = usePasswordInput(),
    stytch = _usePasswordInput3.stytch,
    onError = _usePasswordInput3.onError,
    email = _usePasswordInput3.email,
    organization = _usePasswordInput3.organization,
    setIsSubmitting = _usePasswordInput3.setIsSubmitting;
  var resendResetPassword = function resendResetPassword() {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    if (!organization) {
      stytch.passwords.discovery.resetByEmailStart({
        email_address: email,
        discovery_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
        reset_password_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
        reset_password_expiration_minutes: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.resetPasswordExpirationMinutes,
        reset_password_template_id: (_d = config.passwordOptions) === null || _d === void 0 ? void 0 : _d.resetPasswordTemplateId
      }).then(function (data) {
        _t.success('Email resent');
        setIsSubmitting(false);
        onEvent({
          type: internal.StytchEventType.B2BPasswordDiscoveryResetStart,
          data: data
        });
      });
    } else {
      stytch.passwords.resetByEmailStart({
        email_address: email,
        organization_id: organization.organization_id,
        login_redirect_url: (_e = config.emailMagicLinksOptions) === null || _e === void 0 ? void 0 : _e.loginTemplateId,
        reset_password_redirect_url: (_f = config.passwordOptions) === null || _f === void 0 ? void 0 : _f.resetPasswordRedirectURL,
        reset_password_expiration_minutes: (_g = config.passwordOptions) === null || _g === void 0 ? void 0 : _g.resetPasswordExpirationMinutes,
        reset_password_template_id: (_h = config.passwordOptions) === null || _h === void 0 ? void 0 : _h.resetPasswordTemplateId
      }).then(function (data) {
        _t.success('Email resent');
        setIsSubmitting(false);
        onEvent({
          type: internal.StytchEventType.B2BPasswordResetByEmailStart,
          data: data
        });
      })["catch"](function (e) {
        onError(e);
      });
    }
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Check your email!"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "A login link was sent to you at ", /*#__PURE__*/extractErrorMessage.wn.createElement("b", null, email), "."), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Didn't get it?", ' ', /*#__PURE__*/extractErrorMessage.wn.createElement("button", {
    onClick: resendResetPassword,
    style: {
      all: 'unset'
    }
  }, /*#__PURE__*/extractErrorMessage.wn.createElement("b", {
    style: {
      cursor: 'pointer'
    }
  }, "Resend email"))));
};
var PasswordsForgotForm = function PasswordsForgotForm() {
  var _useGlobalReducer59 = useGlobalReducer(),
    _useGlobalReducer60 = _slicedToArray(_useGlobalReducer59, 2),
    dispatch = _useGlobalReducer60[1];
  var config = useConfig();
  var onEvent = useEventCallback();
  var _usePasswordInput4 = usePasswordInput(),
    stytch = _usePasswordInput4.stytch,
    email = _usePasswordInput4.email,
    setEmail = _usePasswordInput4.setEmail,
    organization = _usePasswordInput4.organization,
    errorMessage = _usePasswordInput4.errorMessage,
    setErrorMessage = _usePasswordInput4.setErrorMessage,
    isSubmitting = _usePasswordInput4.isSubmitting,
    setIsSubmitting = _usePasswordInput4.setIsSubmitting,
    handleNonMemberReset = _usePasswordInput4.handleNonMemberReset;
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
      var _a, _b, _c, _d;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            e.preventDefault();
            if (email.match(internal.EMAIL_REGEX)) {
              _context7.next = 4;
              break;
            }
            setErrorMessage('Invalid email address');
            return _context7.abrupt("return");
          case 4:
            setErrorMessage('');
            setIsSubmitting(true);
            if (organization) {
              internal.readB2BInternals(stytch).searchManager.searchMember(email, organization.organization_id).then(function (_ref104) {
                var member = _ref104.member;
                var _a, _b, _c, _d;
                if (!(member === null || member === void 0 ? void 0 : member.member_password_id)) {
                  handleNonMemberReset();
                  return;
                }
                stytch.passwords.resetByEmailStart({
                  email_address: email,
                  organization_id: organization.organization_id,
                  login_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
                  reset_password_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
                  reset_password_expiration_minutes: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.resetPasswordExpirationMinutes,
                  reset_password_template_id: (_d = config.passwordOptions) === null || _d === void 0 ? void 0 : _d.resetPasswordTemplateId
                }).then(function (data) {
                  setIsSubmitting(false);
                  onEvent({
                    type: internal.StytchEventType.B2BPasswordResetByEmailStart,
                    data: data
                  });
                  dispatch({
                    type: 'set_password_state',
                    email: email
                  });
                  dispatch({
                    type: 'transition',
                    screen: AppScreens$1.PasswordSetNewConfirmation
                  });
                })["catch"](function (err) {
                  setIsSubmitting(false);
                  setErrorMessage(err.error_message);
                });
              })["catch"](function (err) {
                setIsSubmitting(false);
                var message = err.message;
                if (err instanceof internal.StytchAPIError) {
                  message = err.error_message;
                }
                setErrorMessage(message);
              });
            } else {
              stytch.passwords.discovery.resetByEmailStart({
                email_address: email,
                discovery_redirect_url: (_a = config.emailMagicLinksOptions) === null || _a === void 0 ? void 0 : _a.loginRedirectURL,
                reset_password_redirect_url: (_b = config.passwordOptions) === null || _b === void 0 ? void 0 : _b.resetPasswordRedirectURL,
                reset_password_expiration_minutes: (_c = config.passwordOptions) === null || _c === void 0 ? void 0 : _c.resetPasswordExpirationMinutes,
                reset_password_template_id: (_d = config.passwordOptions) === null || _d === void 0 ? void 0 : _d.resetPasswordTemplateId
              }).then(function () {
                setIsSubmitting(false);
                dispatch({
                  type: 'set_password_state',
                  email: email
                });
                dispatch({
                  type: 'transition',
                  screen: AppScreens$1.PasswordSetNewConfirmation
                });
              })["catch"](function (err) {
                setIsSubmitting(false);
                setErrorMessage(err.error_message);
              });
            }
          case 7:
          case "end":
            return _context7.stop();
        }
      }, _callee7);
    }));
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: function onClick() {
      return dispatch({
        type: 'transition',
        screen: AppScreens$1.Main
      });
    }
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Check your email for help signing in!"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, !organization ? "We'll email you a verification link to sign up for an account or reset your password if you have one." : "We'll email you a login link to sign in to your account directly or reset your password if you have one."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 4
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "helper",
    color: "secondary"
  }, "Email"), /*#__PURE__*/extractErrorMessage.wn.createElement(EmailInput, {
    email: email,
    setEmail: setEmail
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    isSubmitting: isSubmitting,
    text: "Continue"
  }))));
};
var RecoveryCodeEntryScreen = function RecoveryCodeEntryScreen() {
  var stytchClient = useStytch();
  var _useConfig2 = useConfig(),
    sessionDurationMinutes = _useConfig2.sessionOptions.sessionDurationMinutes;
  var _useGlobalReducer61 = useGlobalReducer(),
    _useGlobalReducer62 = _slicedToArray(_useGlobalReducer61, 2),
    state = _useGlobalReducer62[0],
    dispatch = _useGlobalReducer62[1];
  var _state$mfa$primaryInf = state.mfa.primaryInfo,
    memberId = _state$mfa$primaryInf.memberId,
    organizationId = _state$mfa$primaryInf.organizationId;
  var _extractErrorMessage$63 = extractErrorMessage.h(''),
    _extractErrorMessage$64 = _slicedToArray(_extractErrorMessage$63, 2),
    recoveryCode = _extractErrorMessage$64[0],
    setRecoveryCode = _extractErrorMessage$64[1];
  var _useMutate7 = useMutate('stytch.recoveryCodes.recover', function (_, _ref105) {
      var _ref105$arg = _ref105.arg,
        recoveryCode = _ref105$arg.recoveryCode,
        memberId = _ref105$arg.memberId,
        organizationId = _ref105$arg.organizationId,
        sessionDurationMinutes = _ref105$arg.sessionDurationMinutes;
      return stytchClient.recoveryCodes.recover({
        recovery_code: recoveryCode,
        member_id: memberId,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess() {
        dispatch({
          type: 'recovery_code/authenticate_success'
        });
      }
    }),
    authenticate = _useMutate7.trigger,
    isSubmitting = _useMutate7.isMutating,
    error = _useMutate7.error;
  var errorMessage = error ? 'Invalid backup code, please try again.' : undefined;
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            e.preventDefault();
            authenticate({
              recoveryCode: recoveryCode,
              memberId: memberId,
              organizationId: organizationId,
              sessionDurationMinutes: sessionDurationMinutes
            });
          case 2:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    }));
  };
  var handleSwitchToTotp = function handleSwitchToTotp() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: handleSwitchToTotp
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Enter backup code"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Enter one of the backup codes you saved when setting up your authenticator app."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Input, {
    value: recoveryCode,
    onChange: function onChange(e) {
      setRecoveryCode(e.target.value);
    },
    placeholder: "Enter backup code",
    "aria-label": "Backup code",
    required: true,
    autoComplete: "off"
  }), errorMessage && /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    text: "Continue",
    disabled: !recoveryCode,
    isSubmitting: isSubmitting
  })));
};
var InsetContainer = extractErrorMessage.He.div(_templateObject58 || (_templateObject58 = _taggedTemplateLiteral(["\n  background-color: #f3f5f6;\n  color: #000;\n  font-size: 16px;\n  line-height: 28px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 8px;\n"])));
var CodeList = extractErrorMessage.He.ul(_templateObject59 || (_templateObject59 = _taggedTemplateLiteral(["\n  list-style: none;\n  padding: 0;\n  margin: 0;\n"])));
var downloadFile = function downloadFile(content, filename) {
  var blob = new Blob([content], {
    type: 'text/plain'
  });
  var url = URL.createObjectURL(blob);
  var a = document.createElement('a');
  a.href = url;
  a.download = filename;
  a.click();
  URL.revokeObjectURL(url);
};
var RecoveryCodeSaveScreen = function RecoveryCodeSaveScreen() {
  var _useGlobalReducer63 = useGlobalReducer(),
    _useGlobalReducer64 = _slicedToArray(_useGlobalReducer63, 2),
    state = _useGlobalReducer64[0],
    dispatch = _useGlobalReducer64[1];
  var recoveryCodes = state.mfa.totp.enrollment.recoveryCodes;
  var handleContinue = function handleContinue() {
    dispatch({
      type: 'recovery_code/save_acknowledge'
    });
  };
  var handleCodesDownload = function handleCodesDownload() {
    var _a;
    var organizationName = (_a = state.flowState.organization) === null || _a === void 0 ? void 0 : _a.organization_name;
    downloadFile(recoveryCodes.join('\n'), "".concat(!!organizationName ? organizationName + '-' : '', "backup-codes.txt"));
  };
  var handleCodesCopy = function handleCodesCopy() {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            _context9.prev = 0;
            _context9.next = 3;
            return navigator.clipboard.writeText(recoveryCodes.join('\n'));
          case 3:
            _t.success('Copied');
            _context9.next = 9;
            break;
          case 6:
            _context9.prev = 6;
            _context9.t0 = _context9["catch"](0);
            _t.error("Couldn't copy codes to clipboard");
          case 9:
          case "end":
            return _context9.stop();
        }
      }, _callee9, null, [[0, 6]]);
    }));
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Save your backup codes!"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "This is the only time you will be able to access and save your backup codes."), /*#__PURE__*/extractErrorMessage.wn.createElement(InsetContainer, null, /*#__PURE__*/extractErrorMessage.wn.createElement(CodeList, null, recoveryCodes.map(function (code, i) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement("li", {
      key: i
    }, /*#__PURE__*/extractErrorMessage.wn.createElement("code", null, code));
  }))), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    onClick: handleCodesDownload
  }, "Download file"), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    onClick: handleCodesCopy
  }, "Copy all")), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleContinue
  }, "Done"));
};
var Select = extractErrorMessage.He.select(_templateObject60 || (_templateObject60 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n  height: 47px;\n  box-sizing: border-box;\n  padding: 0 8px;\n  color: ", ";\n  font-family: ", ";\n  width: 80px;\n  font-size: 18px;\n"])), function (props) {
  return props.theme.inputs.backgroundColor;
}, function (props) {
  return props.theme.inputs.borderColor;
}, function (props) {
  return props.theme.inputs.borderRadius;
}, function (props) {
  return props.theme.inputs.textColor;
}, function (props) {
  return props.theme.typography.fontFamily;
});
var CountrySelector = function CountrySelector(_ref106) {
  var country = _ref106.country,
    setCountry = _ref106.setCountry;
  var countryFormatter = new Intl.DisplayNames(['en'], {
    type: 'region'
  });
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Select, {
    "data-testid": "select-test-id",
    name: "country-select",
    value: country,
    onChange: function onChange(e) {
      setCountry(e.target.value);
    }
  }, Object.entries(internal.COUNTRIES_LIST).map(function (_ref107) {
    var _ref108 = _slicedToArray(_ref107, 2),
      countryCode = _ref108[0],
      countryNumber = _ref108[1];
    return /*#__PURE__*/extractErrorMessage.wn.createElement("option", {
      key: countryCode,
      value: countryCode
    }, countryCode !== country ? "+".concat(countryNumber, " ").concat(countryFormatter.of(countryCode)) : "+".concat(countryNumber));
  }));
};
var formatNumber = function formatNumber(_ref109) {
  var parsePhoneNumber = _ref109.parsePhoneNumber,
    phoneNumber = _ref109.phoneNumber,
    country = _ref109.country;
  return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
    var parsedPhoneNumber;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          _context10.prev = 0;
          _context10.next = 3;
          return Promise.race([parsePhoneNumber(phoneNumber, country), new Promise(function (done) {
            return setTimeout(function () {
              return done(undefined);
            }, 10000);
          })]);
        case 3:
          parsedPhoneNumber = _context10.sent;
          if (parsedPhoneNumber) {
            _context10.next = 6;
            break;
          }
          return _context10.abrupt("return", phoneNumber);
        case 6:
          return _context10.abrupt("return", parsedPhoneNumber.national);
        case 9:
          _context10.prev = 9;
          _context10.t0 = _context10["catch"](0);
          return _context10.abrupt("return", phoneNumber);
        case 12:
        case "end":
          return _context10.stop();
      }
    }, _callee10, null, [[0, 9]]);
  }));
};
var formatNumberToIncludeCountryCode = function formatNumberToIncludeCountryCode(_ref110) {
  var parsePhoneNumber = _ref110.parsePhoneNumber,
    phoneNumber = _ref110.phoneNumber,
    country = _ref110.country;
  return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
    var code, fallbackNumber, fallback, parsedPhoneNumber;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          code = internal.COUNTRIES_LIST[country];
          fallbackNumber = "+".concat(code).concat(phoneNumber);
          fallback = {
            isValid: true,
            number: fallbackNumber
          };
          _context11.prev = 3;
          _context11.next = 6;
          return Promise.race([parsePhoneNumber(phoneNumber, country), new Promise(function (done) {
            return setTimeout(function () {
              return done(undefined);
            }, 2000);
          })]);
        case 6:
          parsedPhoneNumber = _context11.sent;
          if (parsedPhoneNumber) {
            _context11.next = 9;
            break;
          }
          return _context11.abrupt("return", fallback);
        case 9:
          return _context11.abrupt("return", parsedPhoneNumber);
        case 12:
          _context11.prev = 12;
          _context11.t0 = _context11["catch"](3);
          return _context11.abrupt("return", fallback);
        case 15:
        case "end":
          return _context11.stop();
      }
    }, _callee11, null, [[3, 12]]);
  }));
};
var PhoneStyledInput = extractErrorMessage.He(Input)(_templateObject61 || (_templateObject61 = _taggedTemplateLiteral(["\n  flex-grow: 1;\n  min-width: 100px;\n"])));
var PhoneInput = function PhoneInput(_ref111) {
  var phone = _ref111.phone,
    setPhone = _ref111.setPhone,
    country = _ref111.country,
    setCountry = _ref111.setCountry,
    parsePhoneNumber = _ref111.parsePhoneNumber,
    hasPasskeys = _ref111.hasPasskeys;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "row",
    wrap: "nowrap",
    justifyContent: "flex-start",
    alignContent: "stretch",
    alignItems: "center",
    gap: 8
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(CountrySelector, {
    country: country,
    setCountry: setCountry
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(PhoneStyledInput, Object.assign({
    placeholder: "(123) 456-7890",
    name: hasPasskeys ? 'email' : 'phoneNumber',
    id: "phone-input",
    autoComplete: hasPasskeys ? 'webauthn' : undefined,
    value: phone,
    type: 'text',
    onChange: function onChange(e) {
      return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        var userInput, national;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              userInput = e.target.value;
              _context12.next = 3;
              return formatNumber({
                parsePhoneNumber: parsePhoneNumber,
                phoneNumber: userInput,
                country: country
              });
            case 3:
              national = _context12.sent;
              if (!(userInput !== e.target.value)) {
                _context12.next = 6;
                break;
              }
              return _context12.abrupt("return");
            case 6:
              setPhone(national);
            case 7:
            case "end":
              return _context12.stop();
          }
        }, _callee12);
      }));
    },
    required: true
  }, hasPasskeys ? extractErrorMessage.passwordManagerDisableAutofillProps : {})));
};
var extractErrorType = function extractErrorType(error) {
  if (error && _typeof(error) === 'object') {
    if ('error_type' in error && typeof error.error_type === 'string') {
      return error.error_type;
    }
  }
};
var DEFAULT_COUNTRY_CODE = 'US';
var InvalidPhoneNumberError = /*#__PURE__*/function (_internal$StytchSDKEr) {
  _inherits(InvalidPhoneNumberError, _internal$StytchSDKEr);
  function InvalidPhoneNumberError() {
    _classCallCheck(this, InvalidPhoneNumberError);
    return _callSuper(this, InvalidPhoneNumberError, ['InvalidPhoneNumberError', 'Invalid phone number']);
  }
  return _createClass(InvalidPhoneNumberError);
}(internal.StytchSDKError);
var findErrorTypeFrom = function findErrorTypeFrom(_ref112) {
  var error = _ref112.error;
  var errorType = extractErrorType(error);
  return !!errorType && errorType in supportedErrorTypeMap ? errorType : 'default';
};
var supportedErrorTypeMap = {
  "default": 'Invalid phone number, please try again.',
  duplicate_member_phone_number: 'A member with the specified phone number already exists for this organization.'
};
var SMSOTPEnrollScreen = function SMSOTPEnrollScreen() {
  var _a, _b;
  var stytchClient = useStytch();
  var _useGlobalReducer65 = useGlobalReducer(),
    _useGlobalReducer66 = _slicedToArray(_useGlobalReducer65, 2),
    state = _useGlobalReducer66[0],
    dispatch = _useGlobalReducer66[1];
  var _state$mfa$smsOtp = state.mfa.smsOtp,
    isSending = _state$mfa$smsOtp.isSending,
    sendError = _state$mfa$smsOtp.sendError,
    enrolledNumber = _state$mfa$smsOtp.enrolledNumber;
  var _state$mfa$primaryInf2 = state.mfa.primaryInfo,
    memberId = _state$mfa$primaryInf2.memberId,
    organizationId = _state$mfa$primaryInf2.organizationId;
  var _extractErrorMessage$65 = extractErrorMessage.wn.useState((_a = enrolledNumber === null || enrolledNumber === void 0 ? void 0 : enrolledNumber.countryCode) !== null && _a !== void 0 ? _a : DEFAULT_COUNTRY_CODE),
    _extractErrorMessage$66 = _slicedToArray(_extractErrorMessage$65, 2),
    countryCode = _extractErrorMessage$66[0],
    setCountryCode = _extractErrorMessage$66[1];
  var _extractErrorMessage$67 = extractErrorMessage.wn.useState((_b = enrolledNumber === null || enrolledNumber === void 0 ? void 0 : enrolledNumber.phoneNumber) !== null && _b !== void 0 ? _b : ''),
    _extractErrorMessage$68 = _slicedToArray(_extractErrorMessage$67, 2),
    phoneNumber = _extractErrorMessage$68[0],
    setPhoneNumber = _extractErrorMessage$68[1];
  var errorType = findErrorTypeFrom({
    error: sendError
  });
  var errorMessage = sendError ? supportedErrorTypeMap[errorType] : undefined;
  var parsePhoneNumber = function parsePhoneNumber(phoneNumber, countryCode) {
    return internal.readB2BInternals(stytchClient).clientsideServices.parsedPhoneNumber({
      phoneNumber: phoneNumber,
      regionCode: countryCode
    });
  };
  var _useMutate8 = useMutate('stytch.otps.sms.send', function (_, _ref113) {
      var parsedNumber = _ref113.arg.parsedNumber;
      return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              return _context13.abrupt("return", stytchClient.otps.sms.send({
                mfa_phone_number: parsedNumber,
                member_id: memberId,
                organization_id: organizationId
              }));
            case 1:
            case "end":
              return _context13.stop();
          }
        }, _callee13);
      }));
    }, {
      onSuccess: function onSuccess(response) {
        dispatch({
          type: 'sms_otp/send_success',
          response: response,
          countryCode: countryCode,
          phoneNumber: phoneNumber,
          formattedPhoneNumber: "+".concat(internal.COUNTRIES_LIST[countryCode], " ").concat(phoneNumber)
        });
      },
      onError: function onError(error) {
        dispatch({
          type: 'sms_otp/send_error',
          error: error
        });
      }
    }),
    sendSms = _useMutate8.trigger;
  var handleSubmit = function handleSubmit(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
      var parsedNumber;
      return _regeneratorRuntime().wrap(function _callee14$(_context14) {
        while (1) switch (_context14.prev = _context14.next) {
          case 0:
            e.preventDefault();
            dispatch({
              type: 'sms_otp/send'
            });
            _context14.prev = 2;
            _context14.next = 5;
            return formatNumberToIncludeCountryCode({
              parsePhoneNumber: parsePhoneNumber,
              phoneNumber: phoneNumber,
              country: countryCode
            });
          case 5:
            parsedNumber = _context14.sent;
            if (parsedNumber.isValid) {
              _context14.next = 8;
              break;
            }
            throw new InvalidPhoneNumberError();
          case 8:
            _context14.next = 10;
            return sendSms({
              parsedNumber: parsedNumber.number
            });
          case 10:
            _context14.next = 15;
            break;
          case 12:
            _context14.prev = 12;
            _context14.t0 = _context14["catch"](2);
            dispatch({
              type: 'sms_otp/send_error',
              error: _context14.t0
            });
          case 15:
          case "end":
            return _context14.stop();
        }
      }, _callee14, null, [[2, 12]]);
    }));
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Enter your phone number to set up Multi-Factor Authentication"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Your organization requires an additional form of verification to make your account more secure."), /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(PhoneInput, {
    country: countryCode,
    setCountry: setCountryCode,
    phone: phoneNumber,
    setPhone: setPhoneNumber,
    parsePhoneNumber: parsePhoneNumber
  }), errorMessage && /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorText, {
    errorMessage: errorMessage
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(SubmitButton, {
    text: "Continue",
    isSubmitting: isSending,
    disabled: !phoneNumber
  })));
};
var SMSOTPEntryScreen = function SMSOTPEntryScreen() {
  var _a;
  var stytchClient = useStytch();
  var _useConfig3 = useConfig(),
    sessionDurationMinutes = _useConfig3.sessionOptions.sessionDurationMinutes;
  var _useGlobalReducer67 = useGlobalReducer(),
    _useGlobalReducer68 = _slicedToArray(_useGlobalReducer67, 2),
    state = _useGlobalReducer68[0],
    dispatch = _useGlobalReducer68[1];
  var _state$mfa = state.mfa,
    isEnrolling = _state$mfa.isEnrolling,
    _state$mfa$smsOtp2 = _state$mfa.smsOtp,
    codeExpiration = _state$mfa$smsOtp2.codeExpiration,
    formattedDestination = _state$mfa$smsOtp2.formattedDestination;
  var _state$mfa$primaryInf3 = state.mfa.primaryInfo,
    enrolledMfaMethods = _state$mfa$primaryInf3.enrolledMfaMethods,
    memberId = _state$mfa$primaryInf3.memberId,
    memberPhoneNumber = _state$mfa$primaryInf3.memberPhoneNumber,
    organizationId = _state$mfa$primaryInf3.organizationId,
    organizationMfaOptionsSupported = _state$mfa$primaryInf3.organizationMfaOptionsSupported;
  var _useMutate9 = useMutate('stytch.otps.sms.send', function (_, _ref114) {
      var _ref114$arg = _ref114.arg,
        memberId = _ref114$arg.memberId,
        organizationId = _ref114$arg.organizationId;
      dispatch({
        type: 'sms_otp/send'
      });
      return stytchClient.otps.sms.send({
        member_id: memberId,
        organization_id: organizationId
      });
    }, {
      onSuccess: function onSuccess(response) {
        dispatch({
          type: 'sms_otp/send_success',
          response: response
        });
      },
      onError: function onError(error) {
        var message = extractErrorMessage.extractErrorMessage(error);
        if (message) {
          _t.error(message);
        }
        dispatch({
          type: 'sms_otp/send_error',
          error: error
        });
      }
    }),
    sendSms = _useMutate9.trigger,
    isSending = _useMutate9.isMutating,
    sendError = _useMutate9.error;
  var _useMutate10 = useMutate('stytch.otps.sms.authenticate', function (_, _ref115) {
      var _ref115$arg = _ref115.arg,
        otp = _ref115$arg.otp,
        memberId = _ref115$arg.memberId,
        organizationId = _ref115$arg.organizationId,
        sessionDurationMinutes = _ref115$arg.sessionDurationMinutes;
      return stytchClient.otps.sms.authenticate({
        code: otp,
        member_id: memberId,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess() {
        dispatch({
          type: 'sms_otp/authenticate_success'
        });
      }
    }),
    authenticate = _useMutate10.trigger,
    isAuthenticating = _useMutate10.isMutating,
    authenticateError = _useMutate10.error;
  var shouldCreate = codeExpiration === null && !isSending && !sendError;
  extractErrorMessage.p(function () {
    if (shouldCreate) {
      sendSms({
        memberId: memberId,
        organizationId: organizationId
      });
    }
  }, [memberId, organizationId, sendSms, shouldCreate]);
  extractErrorMessage.p(function () {
    if (!formattedDestination && memberPhoneNumber) {
      var handleFormatNumber = function handleFormatNumber() {
        return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
          var parsePhoneNumber, national;
          return _regeneratorRuntime().wrap(function _callee15$(_context15) {
            while (1) switch (_context15.prev = _context15.next) {
              case 0:
                parsePhoneNumber = function parsePhoneNumber(phoneNumber) {
                  return internal.readB2BInternals(stytchClient).clientsideServices.parsedPhoneNumber({
                    phoneNumber: phoneNumber
                  });
                };
                _context15.next = 3;
                return formatNumber({
                  parsePhoneNumber: parsePhoneNumber,
                  phoneNumber: memberPhoneNumber
                });
              case 3:
                national = _context15.sent;
                dispatch({
                  type: 'sms_otp/format_destination',
                  formattedPhoneNumber: national
                });
              case 5:
              case "end":
                return _context15.stop();
            }
          }, _callee15);
        }));
      };
      handleFormatNumber();
    }
  }, [dispatch, formattedDestination, stytchClient, memberPhoneNumber]);
  var isTotpAvailable = extractErrorMessage.F(function () {
    return !isEnrolling && enrolledMfaMethods.includes(internal.B2BMFAProducts.totp) && (organizationMfaOptionsSupported.length === 0 || organizationMfaOptionsSupported.includes(internal.B2BMFAProducts.totp));
  }, [enrolledMfaMethods, isEnrolling, organizationMfaOptionsSupported]);
  var errorMessage = authenticateError ? 'Invalid passcode, please try again.' : undefined;
  var canGoBack = extractErrorMessage.F(function () {
    return isEnrolling || enrolledMfaMethods.length === 0 || organizationMfaOptionsSupported.length > 0 && !enrolledMfaMethods.some(function (enrolledMethod) {
      return organizationMfaOptionsSupported.includes(enrolledMethod);
    });
  }, [enrolledMfaMethods, isEnrolling, organizationMfaOptionsSupported]);
  var handleSubmit = function handleSubmit(otp) {
    authenticate({
      otp: otp,
      memberId: memberId,
      organizationId: organizationId,
      sessionDurationMinutes: sessionDurationMinutes
    });
  };
  var handleSwitchToTotp = function handleSwitchToTotp() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  var handleResendOTP = function handleResendOTP() {
    sendSms({
      memberId: memberId,
      organizationId: organizationId
    });
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'mfa/start_enrollment',
      method: internal.B2BMFAProducts.smsOtp
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, canGoBack && /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: handleBack
  }), codeExpiration !== null ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(SentOTPEntry, {
    isSubmitting: isAuthenticating,
    onSubmit: handleSubmit,
    errorMessage: errorMessage,
    expiration: codeExpiration,
    formattedDestination: (_a = formattedDestination !== null && formattedDestination !== void 0 ? formattedDestination : memberPhoneNumber) !== null && _a !== void 0 ? _a : '',
    resendOTP: handleResendOTP
  })) : ( /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingScreen, null)), isTotpAvailable && ( /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, /*#__PURE__*/extractErrorMessage.wn.createElement(Divider, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleSwitchToTotp
  }, "Use an authenticator app"))));
};
var CopyIcon = function CopyIcon() {
  return /*#__PURE__*/extractErrorMessage.y("svg", {
    width: "25",
    height: "24",
    viewBox: "0 0 25 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/extractErrorMessage.y("path", {
    d: "M17 1H5C3.9 1 3 1.9 3 3V17H5V3H17V1ZM20 5H9C7.9 5 7 5.9 7 7V21C7 22.1 7.9 23 9 23H20C21.1 23 22 22.1 22 21V7C22 5.9 21.1 5 20 5ZM20 21H9V7H20V21Z",
    fill: "currentColor"
  }));
};
var Copy = CreateIcon(CopyIcon);
var CopyButton = extractErrorMessage.He.button(_templateObject62 || (_templateObject62 = _taggedTemplateLiteral(["\n  all: unset;\n  flex: 0 0 24px;\n  height: 28px;\n  opacity: 0;\n  :focus {\n    opacity: 1;\n  }\n"])));
var CodeContainer = extractErrorMessage.He(InsetContainer)(_templateObject63 || (_templateObject63 = _taggedTemplateLiteral(["\n  cursor: pointer;\n  :hover ", " {\n    opacity: 1;\n  }\n"])), CopyButton);
var Spacer = extractErrorMessage.He.div(_templateObject64 || (_templateObject64 = _taggedTemplateLiteral(["\n  flex: 0 1 24px;\n"])));
var Code = extractErrorMessage.He.code(_templateObject65 || (_templateObject65 = _taggedTemplateLiteral(["\n  white-space: pre-wrap;\n  align-self: center;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1ch;\n"])));
var TOTPEnrollManualScreen = function TOTPEnrollManualScreen() {
  var _useGlobalReducer69 = useGlobalReducer(),
    _useGlobalReducer70 = _slicedToArray(_useGlobalReducer69, 2),
    state = _useGlobalReducer70[0],
    dispatch = _useGlobalReducer70[1];
  var secret = state.mfa.totp.enrollment.secret;
  var displaySecret = secret.toLowerCase();
  var secretChunked = displaySecret.split(/(.{4})/g).filter(Boolean);
  var handleShowQRCode = function handleShowQRCode() {
    dispatch({
      type: 'totp/show_code',
      method: 'qr'
    });
  };
  var handleContinue = function handleContinue() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  var handleCodeCopy = function handleCodeCopy(e) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
      return _regeneratorRuntime().wrap(function _callee16$(_context16) {
        while (1) switch (_context16.prev = _context16.next) {
          case 0:
            e.stopPropagation();
            _context16.prev = 1;
            _context16.next = 4;
            return navigator.clipboard.writeText(displaySecret);
          case 4:
            _t.success('Code copied');
            _context16.next = 10;
            break;
          case 7:
            _context16.prev = 7;
            _context16.t0 = _context16["catch"](1);
            _t.error("Couldn't copy code to clipboard");
          case 10:
          case "end":
            return _context16.stop();
        }
      }, _callee16, null, [[1, 7]]);
    }));
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: handleShowQRCode
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Having trouble scanning the QR code?"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Click to copy the code below. Enter into your authenticator app to link your account."), /*#__PURE__*/extractErrorMessage.wn.createElement(CodeContainer, {
    onClick: handleCodeCopy
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Spacer, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Code, null, secretChunked.map(function (part, i) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement("span", {
      key: i
    }, part);
  })), /*#__PURE__*/extractErrorMessage.wn.createElement(CopyButton, {
    type: "button",
    onClick: handleCodeCopy,
    "aria-label": "Copy code"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Copy, null))), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    onClick: handleContinue
  }, "Continue"), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleShowQRCode
  }, "Try to scan the QR code again"));
};
var QRCodeImg = extractErrorMessage.He.img(_templateObject66 || (_templateObject66 = _taggedTemplateLiteral(["\n  margin: 0 auto;\n"])));
var TOTPEnrollQRScreen = function TOTPEnrollQRScreen() {
  var stytchClient = useStytch();
  var _useGlobalReducer71 = useGlobalReducer(),
    _useGlobalReducer72 = _slicedToArray(_useGlobalReducer71, 2),
    state = _useGlobalReducer72[0],
    dispatch = _useGlobalReducer72[1];
  var _state$mfa$totp = state.mfa.totp,
    createError = _state$mfa$totp.createError,
    enrollment = _state$mfa$totp.enrollment,
    isCreating = _state$mfa$totp.isCreating;
  var _state$mfa$primaryInf4 = state.mfa.primaryInfo,
    memberId = _state$mfa$primaryInf4.memberId,
    organizationId = _state$mfa$primaryInf4.organizationId;
  var _useMutate11 = useMutate('stytch.totp.create', function (_, _ref116) {
      var _ref116$arg = _ref116.arg,
        memberId = _ref116$arg.memberId,
        organizationId = _ref116$arg.organizationId;
      dispatch({
        type: 'totp/create'
      });
      return stytchClient.totp.create({
        member_id: memberId,
        organization_id: organizationId
      });
    }, {
      onSuccess: function onSuccess(response) {
        dispatch({
          type: 'totp/create_success',
          response: response,
          memberId: memberId,
          organizationId: organizationId
        });
      },
      onError: function onError(error) {
        var message = extractErrorMessage.extractErrorMessage(error);
        if (message) {
          _t.error(message);
        }
        dispatch({
          type: 'totp/create_error',
          error: error
        });
      }
    }),
    createTotp = _useMutate11.trigger;
  var shouldCreate = !enrollment && !isCreating && !createError;
  extractErrorMessage.p(function () {
    if (shouldCreate) {
      createTotp({
        memberId: memberId,
        organizationId: organizationId
      });
    }
  }, [createTotp, memberId, organizationId, shouldCreate]);
  var handleShowManualCode = function handleShowManualCode() {
    dispatch({
      type: 'totp/show_code',
      method: 'manual'
    });
  };
  var handleContinue = function handleContinue() {
    dispatch({
      type: 'totp/navigate_to_entry'
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Text, {
    size: "header"
  }, "Scan the QR code to link your authenticator app"), /*#__PURE__*/extractErrorMessage.wn.createElement(Text, null, "Your organization requires an additional form of verification to make your account more secure. If you don\u2019t have an authenticator app, you\u2019ll need to install one first."), !!enrollment ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, /*#__PURE__*/extractErrorMessage.wn.createElement(QRCodeImg, {
    alt: "QR code for TOTP enrollment",
    src: enrollment.qrCode
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleShowManualCode
  }, "Having trouble scanning?"), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    onClick: handleContinue
  }, "Continue"))) : ( /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingScreen, null)));
};
var TOTPEntry = function TOTPEntry(_ref117) {
  var helperContent = _ref117.helperContent,
    isSubmitting = _ref117.isSubmitting,
    onSubmit = _ref117.onSubmit,
    errorMessage = _ref117.errorMessage;
  return /*#__PURE__*/extractErrorMessage.wn.createElement(OTPEntry, {
    header: "Enter verification code",
    instruction: "Enter the 6-digit code from your authenticator app.",
    helperContent: helperContent,
    isSubmitting: isSubmitting,
    onSubmit: onSubmit,
    errorMessage: errorMessage
  });
};
var TOTPEntryScreen = function TOTPEntryScreen() {
  var stytchClient = useStytch();
  var _useConfig4 = useConfig(),
    sessionDurationMinutes = _useConfig4.sessionOptions.sessionDurationMinutes;
  var _useGlobalReducer73 = useGlobalReducer(),
    _useGlobalReducer74 = _slicedToArray(_useGlobalReducer73, 2),
    state = _useGlobalReducer74[0],
    dispatch = _useGlobalReducer74[1];
  var isEnrolling = state.mfa.isEnrolling;
  var _state$mfa$primaryInf5 = state.mfa.primaryInfo,
    enrolledMfaMethods = _state$mfa$primaryInf5.enrolledMfaMethods,
    memberId = _state$mfa$primaryInf5.memberId,
    organizationId = _state$mfa$primaryInf5.organizationId,
    organizationMfaOptionsSupported = _state$mfa$primaryInf5.organizationMfaOptionsSupported;
  var _useMutate12 = useMutate('stytch.totp.authenticate', function (_, _ref118) {
      var _ref118$arg = _ref118.arg,
        memberId = _ref118$arg.memberId,
        organizationId = _ref118$arg.organizationId,
        otp = _ref118$arg.otp,
        sessionDurationMinutes = _ref118$arg.sessionDurationMinutes;
      return stytchClient.totp.authenticate({
        code: otp,
        member_id: memberId,
        organization_id: organizationId,
        session_duration_minutes: sessionDurationMinutes
      });
    }, {
      onSuccess: function onSuccess() {
        dispatch({
          type: 'totp/authenticate_success'
        });
      }
    }),
    authenticate = _useMutate12.trigger,
    isAuthenticating = _useMutate12.isMutating,
    authenticateError = _useMutate12.error;
  var isSmsOtpAvailable = extractErrorMessage.F(function () {
    return !isEnrolling && enrolledMfaMethods.includes(internal.B2BMFAProducts.smsOtp) && (organizationMfaOptionsSupported.length === 0 || organizationMfaOptionsSupported.includes(internal.B2BMFAProducts.smsOtp));
  }, [enrolledMfaMethods, isEnrolling, organizationMfaOptionsSupported]);
  var errorMessage = authenticateError ? 'Invalid passcode, please try again.' : undefined;
  var canGoBack = isEnrolling;
  var handleSubmit = function handleSubmit(otp) {
    return internal.__awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
      return _regeneratorRuntime().wrap(function _callee17$(_context17) {
        while (1) switch (_context17.prev = _context17.next) {
          case 0:
            authenticate({
              memberId: memberId,
              organizationId: organizationId,
              otp: otp,
              sessionDurationMinutes: sessionDurationMinutes
            });
          case 1:
          case "end":
            return _context17.stop();
        }
      }, _callee17);
    }));
  };
  var handleSwitchToRecoveryCode = function handleSwitchToRecoveryCode() {
    dispatch({
      type: 'recovery_code/navigate_to_entry'
    });
  };
  var handleSwitchToSms = function handleSwitchToSms() {
    dispatch({
      type: 'sms_otp/navigate_to_entry'
    });
  };
  var handleBack = function handleBack() {
    dispatch({
      type: 'totp/show_code'
    });
  };
  return /*#__PURE__*/extractErrorMessage.wn.createElement(Flex, {
    direction: "column",
    gap: 24
  }, canGoBack && /*#__PURE__*/extractErrorMessage.wn.createElement(BackArrow, {
    onClick: handleBack
  }), /*#__PURE__*/extractErrorMessage.wn.createElement(TOTPEntry, {
    helperContent: !isEnrolling ? ( /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, "Can\u2019t access your authenticator app?", ' ', /*#__PURE__*/extractErrorMessage.wn.createElement(InlineButton, {
      onClick: handleSwitchToRecoveryCode
    }, "Use a backup code"))) : 'If the verification code doesn’t work, go back to your authenticator app to get a new code.',
    isSubmitting: isAuthenticating,
    onSubmit: handleSubmit,
    errorMessage: errorMessage
  }), isSmsOtpAvailable && ( /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, /*#__PURE__*/extractErrorMessage.wn.createElement(Divider, null), /*#__PURE__*/extractErrorMessage.wn.createElement(Button, {
    type: "button",
    variant: "text",
    onClick: handleSwitchToSms
  }, "Text me a code instead"))));
};
var MainContainer = extractErrorMessage.He.div(_templateObject67 || (_templateObject67 = _taggedTemplateLiteral(["\n  width: ", ";\n  font-family: ", ";\n  box-sizing: border-box;\n  * {\n    box-sizing: content-box;\n  }\n  background-color: ", ";\n  border: ", ";\n  border-radius: ", ";\n  border-bottom-left-radius: ", ";\n  border-bottom-right-radius: ", ";\n  border-bottom: ", ";\n"])), function (_ref119) {
  var theme = _ref119.theme;
  return theme.container.width;
}, function (_ref120) {
  var theme = _ref120.theme;
  return theme.typography.fontFamily;
}, function (_ref121) {
  var theme = _ref121.theme;
  return theme.container.backgroundColor;
}, function (_ref122) {
  var theme = _ref122.theme;
  return theme.container.border;
}, function (_ref123) {
  var theme = _ref123.theme;
  return theme.container.borderRadius;
}, function (_ref124) {
  var theme = _ref124.theme,
    displayWatermark = _ref124.displayWatermark;
  return displayWatermark ? '0' : theme.container.borderRadius;
}, function (_ref125) {
  var theme = _ref125.theme,
    displayWatermark = _ref125.displayWatermark;
  return displayWatermark ? '0' : theme.container.borderRadius;
}, function (_ref126) {
  var theme = _ref126.theme,
    displayWatermark = _ref126.displayWatermark;
  return displayWatermark ? 'none' : theme.container.border;
});
var ChildrenContainer = extractErrorMessage.He.div(_templateObject68 || (_templateObject68 = _taggedTemplateLiteral(["\n  padding: 24px 32px;\n"])));
var WatermarkContainer = extractErrorMessage.He.div(_templateObject69 || (_templateObject69 = _taggedTemplateLiteral(["\n  box-sizing: border-box;\n  width: ", ";\n  background-color: ", ";\n  border: ", ";\n  border-top: none;\n  border-bottom-left-radius: ", ";\n  border-bottom-right-radius: ", ";\n  overflow: hidden;\n"])), function (_ref127) {
  var theme = _ref127.theme;
  return theme.container.width;
}, function (_ref128) {
  var theme = _ref128.theme;
  return theme.container.backgroundColor;
}, function (_ref129) {
  var theme = _ref129.theme;
  return theme.container.border;
}, function (_ref130) {
  var theme = _ref130.theme;
  return theme.container.borderRadius;
}, function (_ref131) {
  var theme = _ref131.theme;
  return theme.container.borderRadius;
});
var InnerContainer = extractErrorMessage.He.div(_templateObject70 || (_templateObject70 = _taggedTemplateLiteral(["\n  background-color: #19303d;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0.5;\n"])));
var Image = extractErrorMessage.He.img(_templateObject71 || (_templateObject71 = _taggedTemplateLiteral(["\n  width: 150px;\n"])));
var POWERED_BY_STYTCH_IMG_URL = 'https://public-assets.stytch.com/et_powered_by_stytch_logo.png';
var getTokenFromUrl = function getTokenFromUrl() {
  var url = new URL(window.location.href);
  var tokenType = url.searchParams.get('stytch_token_type');
  var token = url.searchParams.get('token');
  return {
    tokenType: tokenType,
    token: token
  };
};
var supportedTokenTypes = ['discovery', 'discovery_oauth', 'oauth', 'sso', 'multi_tenant_magic_links'];
var supportedTokenTypesSet = new Set(supportedTokenTypes);
var isSupportedTokenType = function isSupportedTokenType(tokenType) {
  return !!(tokenType && supportedTokenTypesSet.has(tokenType));
};
var AppContainer$1 = function AppContainer$1() {
  var _ScreenComponentMap;
  var _useGlobalReducer75 = useGlobalReducer(),
    _useGlobalReducer76 = _slicedToArray(_useGlobalReducer75, 2),
    state = _useGlobalReducer76[0],
    dispatch = _useGlobalReducer76[1];
  var stytchClient = useStytch();
  var config = useConfig();
  var _extractErrorMessage$69 = extractErrorMessage.Ze(),
    displayWatermark = _extractErrorMessage$69.displayWatermark;
  var isOnlyFloatingOneTap = useIsOnlyFloatingOneTap();
  var currentScreen = state.screen;
  var ScreenComponentMap = (_ScreenComponentMap = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ScreenComponentMap, AppScreens$1.Main, /*#__PURE__*/extractErrorMessage.wn.createElement(MainScreen, null)), AppScreens$1.EmailConfirmation, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailConfirmation, null)), AppScreens$1.LoggedIn, /*#__PURE__*/extractErrorMessage.wn.createElement(ConfirmationScreen, null)), AppScreens$1.Discovery, /*#__PURE__*/extractErrorMessage.wn.createElement(Discovery, null)), AppScreens$1.Error, /*#__PURE__*/extractErrorMessage.wn.createElement(ErrorScreen, null)), AppScreens$1.PasswordEmailForm, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordsEmailForm, null)), AppScreens$1.PasswordAuthenticate, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordsAuthenticate, null)), AppScreens$1.PasswordResetForm, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordResetForm, null)), AppScreens$1.PasswordResetVerifyConfirmation, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordResetConfirmation, null)), AppScreens$1.PasswordForgotForm, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordsForgotForm, null)), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ScreenComponentMap, AppScreens$1.PasswordSetNewConfirmation, /*#__PURE__*/extractErrorMessage.wn.createElement(PasswordSetNew, null)), AppScreens$1.MFAEnrollmentSelection, /*#__PURE__*/extractErrorMessage.wn.createElement(MFAEnrollmentSelectionScreen, null)), AppScreens$1.SMSOTPEnrollment, /*#__PURE__*/extractErrorMessage.wn.createElement(SMSOTPEnrollScreen, null)), AppScreens$1.SMSOTPEntry, /*#__PURE__*/extractErrorMessage.wn.createElement(SMSOTPEntryScreen, null)), AppScreens$1.RecoveryCodeEntry, /*#__PURE__*/extractErrorMessage.wn.createElement(RecoveryCodeEntryScreen, null)), AppScreens$1.RecoveryCodeSave, /*#__PURE__*/extractErrorMessage.wn.createElement(RecoveryCodeSaveScreen, null)), AppScreens$1.TOTPEnrollmentQRCode, /*#__PURE__*/extractErrorMessage.wn.createElement(TOTPEnrollQRScreen, null)), AppScreens$1.TOTPEnrollmentManual, /*#__PURE__*/extractErrorMessage.wn.createElement(TOTPEnrollManualScreen, null)), AppScreens$1.TOTPEntry, /*#__PURE__*/extractErrorMessage.wn.createElement(TOTPEntryScreen, null)), AppScreens$1.EmailMethodSelection, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailMethodSelectionScreen, null)), _defineProperty(_ScreenComponentMap, AppScreens$1.EmailOTPEntry, /*#__PURE__*/extractErrorMessage.wn.createElement(EmailOTPEntryScreen, null)));
  var onSuccess = function onSuccess(data) {
    clearStytchSearchParams();
    onAuthenticateSuccess(data, dispatch, config);
  };
  var onDiscoverySuccess = function onDiscoverySuccess(data) {
    clearStytchSearchParams();
    onDiscoveryAuthenticateSuccess(data, dispatch);
  };
  var handleStytchAPIError = function handleStytchAPIError(defaultErrorType) {
    return function (error) {
      var error_type = extractErrorType(error);
      var errorTypeMap = {
        ad_blocker_detected: ErrorType.AdBlockerDetected
      };
      var errorType = error_type && errorTypeMap[error_type] ? errorTypeMap[error_type] : defaultErrorType !== null && defaultErrorType !== void 0 ? defaultErrorType : ErrorType.Default;
      clearStytchSearchParams();
      dispatch({
        type: 'set_error_message_and_transition',
        errorType: errorType
      });
    };
  };
  var _useMutate13 = useMutate("stytch.magicLinks.authenticate", function (_, _ref132) {
      var token = _ref132.arg.token;
      return stytchClient.magicLinks.authenticate({
        magic_links_token: token,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError(ErrorType.EmailMagicLink)
    }),
    stytchMagicLinkAuthenticate = _useMutate13.trigger,
    isMagicLinkLoading = _useMutate13.isMutating;
  var _useMutate14 = useMutate("stytch.oauth.authenticate", function (_, _ref133) {
      var token = _ref133.arg.token;
      return stytchClient.oauth.authenticate({
        oauth_token: token,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError()
    }),
    stytchOAuthAuthenticate = _useMutate14.trigger,
    isOAuthLoading = _useMutate14.isMutating;
  var _useMutate15 = useMutate("stytch.oauth.discovery.authenticate", function (_, _ref134) {
      var token = _ref134.arg.token;
      return stytchClient.oauth.discovery.authenticate({
        discovery_oauth_token: token
      });
    }, {
      onSuccess: onDiscoverySuccess,
      onError: handleStytchAPIError()
    }),
    stytchOAuthDiscoveryAuthenticate = _useMutate15.trigger,
    isDiscoveryOAuthLoading = _useMutate15.isMutating;
  var _useMutate16 = useMutate("stytch.sso.authenticate", function (_, _ref135) {
      var token = _ref135.arg.token;
      return stytchClient.sso.authenticate({
        sso_token: token,
        session_duration_minutes: config.sessionOptions.sessionDurationMinutes
      });
    }, {
      onSuccess: onSuccess,
      onError: handleStytchAPIError()
    }),
    stytchSSOAuthenticate = _useMutate16.trigger,
    isSSOLoading = _useMutate16.isMutating;
  var _useMutate17 = useMutate("stytch.magicLinks.discovery.authenticate", function (_, _ref136) {
      var token = _ref136.arg.token;
      return stytchClient.magicLinks.discovery.authenticate({
        discovery_magic_links_token: token
      });
    }, {
      onSuccess: onDiscoverySuccess,
      onError: handleStytchAPIError()
    }),
    stytchDiscoveryAuthenticate = _useMutate17.trigger,
    isDiscoveryLoading = _useMutate17.isMutating;
  var isTokenAuthLoading = isMagicLinkLoading || isSSOLoading || isDiscoveryLoading || isDiscoveryOAuthLoading || isOAuthLoading;
  var _useExtractSlug = useExtractSlug(),
    isSearching = _useExtractSlug.isSearching,
    slug = _useExtractSlug.slug,
    pattern = _useExtractSlug.pattern;
  extractErrorMessage.p(function () {
    if (isOnlyFloatingOneTap) {
      return;
    }
    if (state.flowState.type == internal.AuthFlowType.PasswordReset) {
      return;
    }
    var _getTokenFromUrl = getTokenFromUrl(),
      tokenType = _getTokenFromUrl.tokenType,
      token = _getTokenFromUrl.token;
    if (token && isSupportedTokenType(tokenType) && !isTokenAuthLoading) {
      switch (tokenType) {
        case 'discovery':
          stytchDiscoveryAuthenticate({
            token: token
          });
          break;
        case 'discovery_oauth':
          stytchOAuthDiscoveryAuthenticate({
            token: token
          });
          break;
        case 'oauth':
          stytchOAuthAuthenticate({
            token: token
          });
          break;
        case 'sso':
          stytchSSOAuthenticate({
            token: token
          });
          break;
        case 'multi_tenant_magic_links':
          stytchMagicLinkAuthenticate({
            token: token
          });
          break;
        default:
          return assertUnreachable();
      }
    }
  }, []);
  var triggerError = useErrorCallback();
  extractErrorMessage.p(function () {
    if (isOnlyFloatingOneTap) {
      return;
    }
    if (isTokenAuthLoading) {
      return;
    }
    var _getTokenFromUrl2 = getTokenFromUrl(),
      tokenType = _getTokenFromUrl2.tokenType,
      token = _getTokenFromUrl2.token;
    if (token && isSupportedTokenType(tokenType)) {
      return;
    }
    if (!slug && pattern !== undefined && !isSearching && state.flowState.organization === null && state.screen === AppScreens$1.Main && state.flowState.type == internal.AuthFlowType.Organization) {
      dispatch({
        type: 'set_error_message_and_transition',
        errorType: ErrorType.Organization
      });
    }
  }, [dispatch, isOnlyFloatingOneTap, isSearching, isTokenAuthLoading, pattern, slug, state.flowState.organization, state.flowState.type, state.screen, triggerError]);
  if (isOnlyFloatingOneTap) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(B2BGoogleOneTap, null);
  }
  if (isTokenAuthLoading) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(MainContainer, {
      displayWatermark: false
    }, /*#__PURE__*/extractErrorMessage.wn.createElement(ChildrenContainer, null, /*#__PURE__*/extractErrorMessage.wn.createElement(LoggingInScreen, null)));
  }
  if (isSearching) {
    return /*#__PURE__*/extractErrorMessage.wn.createElement(MainContainer, {
      displayWatermark: false
    }, /*#__PURE__*/extractErrorMessage.wn.createElement(ChildrenContainer, null, /*#__PURE__*/extractErrorMessage.wn.createElement(LoadingScreen, null)));
  }
  return /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.wn.Fragment, null, /*#__PURE__*/extractErrorMessage.wn.createElement(MainContainer, {
    displayWatermark: displayWatermark
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(ChildrenContainer, null, ScreenComponentMap[currentScreen], /*#__PURE__*/extractErrorMessage.wn.createElement(Snackbar, null))), displayWatermark && ( /*#__PURE__*/extractErrorMessage.wn.createElement(WatermarkContainer, null, /*#__PURE__*/extractErrorMessage.wn.createElement(InnerContainer, null, /*#__PURE__*/extractErrorMessage.wn.createElement("a", {
    style: {
      height: 32,
      display: 'flex',
      alignItems: 'center',
      padding: '8px 0px',
      boxSizing: 'border-box'
    },
    href: "https://stytch.com/",
    target: "_blank",
    rel: "noreferrer"
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(Image, {
    alt: "Powered by Stytch",
    src: POWERED_BY_STYTCH_IMG_URL
  }))))));
};
var AppContainer = function AppContainer(_ref137) {
  var client = _ref137.client,
    styles = _ref137.styles,
    callbacks = _ref137.callbacks,
    config = _ref137.config;
  var _extractErrorMessage$70 = extractErrorMessage.h(function () {
      var _internal$readB2BInte5 = internal.readB2BInternals(client).bootstrap.getSync(),
        displayWatermark = _internal$readB2BInte5.displayWatermark;
      return displayWatermark;
    }),
    _extractErrorMessage$71 = _slicedToArray(_extractErrorMessage$70, 2),
    displayWatermark = _extractErrorMessage$71[0],
    setDisplayWatermark = _extractErrorMessage$71[1];
  extractErrorMessage.p(function () {
    internal.readB2BInternals(client).networkClient.logEvent({
      name: 'render_b2b_login_screen',
      details: {
        options: config
      }
    });
    internal.readB2BInternals(client).bootstrap.getAsync().then(function (_ref138) {
      var displayWatermark = _ref138.displayWatermark;
      setDisplayWatermark(displayWatermark);
    });
  }, [client]);
  var getRedirectTypeFromUrl = function getRedirectTypeFromUrl() {
    var url = new URL(window.location.href);
    var redirectType = url.searchParams.get('stytch_redirect_type');
    return redirectType;
  };
  var redirectType = getRedirectTypeFromUrl();
  var authFlowType = redirectType === internal.RedirectURLType.ResetPassword ? internal.AuthFlowType.PasswordReset : config.authFlowType;
  var initialState = Object.assign(Object.assign({}, DEFAULT_STATE), {
    screen: authFlowType === internal.AuthFlowType.PasswordReset ? AppScreens$1.PasswordResetForm : AppScreens$1.Main,
    flowState: Object.assign(Object.assign({}, DEFAULT_STATE.flowState), {
      type: authFlowType
    })
  });
  var theme = useTheme({
    styles: styles,
    displayWatermark: displayWatermark
  });
  return /*#__PURE__*/extractErrorMessage.wn.createElement(GlobalContextProvider, {
    client: client,
    callbacks: callbacks,
    config: config,
    initialState: initialState
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(extractErrorMessage.Fe, {
    theme: theme
  }, /*#__PURE__*/extractErrorMessage.wn.createElement(AppContainer$1, null)));
};
var B2B_UI_SCREEN_WEB_COMPONENT_NAME = 'stytch-b2b-ui';
var B2BUILoginComponent = extractErrorMessage.CreateSSRSafeWebComponent(AppContainer, B2B_UI_SCREEN_WEB_COMPONENT_NAME);
var StytchB2BUIClient = /*#__PURE__*/function (_b2b_index_headless$S) {
  _inherits(StytchB2BUIClient, _b2b_index_headless$S);
  function StytchB2BUIClient() {
    _classCallCheck(this, StytchB2BUIClient);
    internal.checkNotSSR('StytchUIClient');
    for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return _callSuper(this, StytchB2BUIClient, [].concat(args));
  }
  _createClass(StytchB2BUIClient, [{
    key: "mount",
    value: function mount(_ref139) {
      var elementId = _ref139.elementId,
        styles = _ref139.styles,
        callbacks = _ref139.callbacks,
        config = _ref139.config;
      var _a;
      var targetParentDomNode = document.querySelector(elementId);
      if (!targetParentDomNode) {
        var errorMessage = "The selector you specified (".concat(elementId, ") applies to no DOM elements that are currently on the page. Make sure the element exists on the page before calling mountLogin().");
        throw new Error(errorMessage);
      }
      if (((_a = targetParentDomNode.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName.toLowerCase()) === B2B_UI_SCREEN_WEB_COMPONENT_NAME.toLowerCase()) {
        var node = targetParentDomNode.firstChild;
        node.render({
          client: this,
          config: config,
          callbacks: callbacks,
          styles: styles
        });
        return;
      }
      var loginElement = B2BUILoginComponent({
        client: this,
        config: config,
        callbacks: callbacks,
        styles: styles
      });
      targetParentDomNode.appendChild(loginElement);
    }
  }]);
  return StytchB2BUIClient;
}(b2b_index_headless.StytchB2BHeadlessClient);
Object.defineProperty(exports, "AuthFlowType", {
  enumerable: true,
  get: function get() {
    return internal.AuthFlowType;
  }
});
Object.defineProperty(exports, "B2BMFAProducts", {
  enumerable: true,
  get: function get() {
    return internal.B2BMFAProducts;
  }
});
Object.defineProperty(exports, "B2BOAuthProviders", {
  enumerable: true,
  get: function get() {
    return internal.B2BOAuthProviders;
  }
});
Object.defineProperty(exports, "B2BProducts", {
  enumerable: true,
  get: function get() {
    return internal.B2BProducts;
  }
});
exports.BiometricsFailedError = internal.BiometricsFailedError;
exports.BiometricsUnavailableError = internal.BiometricsUnavailableError;
exports.ChallengeSigningFailedError = internal.ChallengeSigningFailedError;
exports.DeviceCredentialsNotAllowedError = internal.DeviceCredentialsNotAllowedError;
exports.FailedCodeChallengeError = internal.FailedCodeChallengeError;
exports.FailedToDecryptDataError = internal.FailedToDecryptDataError;
exports.InternalError = internal.InternalError;
exports.InvalidAuthorizationCredentialError = internal.InvalidAuthorizationCredentialError;
exports.InvalidCredentialTypeError = internal.InvalidCredentialTypeError;
exports.InvalidRedirectSchemeError = internal.InvalidRedirectSchemeError;
exports.InvalidStartUrlError = internal.InvalidStartUrlError;
exports.JSONDataNotConvertibleToStringError = internal.JSONDataNotConvertibleToStringError;
exports.KeyInvalidatedError = internal.KeyInvalidatedError;
exports.KeystoreUnavailableError = internal.KeystoreUnavailableError;
exports.MissingAttestationObjectError = internal.MissingAttestationObjectError;
exports.MissingAuthorizationCredentialIDTokenError = internal.MissingAuthorizationCredentialIDTokenError;
exports.MissingGoogleClientIDError = internal.MissingGoogleClientIDError;
exports.MissingPKCEError = internal.MissingPKCEError;
exports.MissingPublicKeyError = internal.MissingPublicKeyError;
exports.MissingUrlError = internal.MissingUrlError;
exports.NoBiometricsEnrolledError = internal.NoBiometricsEnrolledError;
exports.NoBiometricsRegistrationError = internal.NoBiometricsRegistrationError;
exports.NoCredentialsPresentError = internal.NoCredentialsPresentError;
exports.NoCurrentSessionError = internal.NoCurrentSessionError;
Object.defineProperty(exports, "OAuthProviders", {
  enumerable: true,
  get: function get() {
    return internal.OAuthProviders;
  }
});
Object.defineProperty(exports, "OTPMethods", {
  enumerable: true,
  get: function get() {
    return internal.OTPMethods;
  }
});
Object.defineProperty(exports, "OneTapPositions", {
  enumerable: true,
  get: function get() {
    return internal.OneTapPositions;
  }
});
exports.PasskeysInvalidEncoding = internal.PasskeysInvalidEncoding;
exports.PasskeysMisconfigured = internal.PasskeysMisconfigured;
exports.PasskeysUnsupportedError = internal.PasskeysUnsupportedError;
Object.defineProperty(exports, "Products", {
  enumerable: true,
  get: function get() {
    return internal.Products;
  }
});
Object.defineProperty(exports, "RNUIProducts", {
  enumerable: true,
  get: function get() {
    return internal.RNUIProducts;
  }
});
exports.RandomNumberGenerationFailed = internal.RandomNumberGenerationFailed;
Object.defineProperty(exports, "RedirectURLType", {
  enumerable: true,
  get: function get() {
    return internal.RedirectURLType;
  }
});
exports.SDKAPIUnreachableError = internal.SDKAPIUnreachableError;
exports.SDKNotConfiguredError = internal.SDKNotConfiguredError;
exports.SignInWithAppleMisconfigured = internal.SignInWithAppleMisconfigured;
exports.StytchAPIError = internal.StytchAPIError;
exports.StytchAPISchemaError = internal.StytchAPISchemaError;
exports.StytchAPIUnreachableError = internal.StytchAPIUnreachableError;
exports.StytchError = internal.StytchError;
Object.defineProperty(exports, "StytchEventType", {
  enumerable: true,
  get: function get() {
    return internal.StytchEventType;
  }
});
exports.StytchSDKAPIError = internal.StytchSDKAPIError;
exports.StytchSDKError = internal.StytchSDKError;
exports.StytchSDKSchemaError = internal.StytchSDKSchemaError;
exports.StytchSDKUsageError = internal.StytchSDKUsageError;
exports.UNRECOVERABLE_ERROR_TYPES = internal.UNRECOVERABLE_ERROR_TYPES;
exports.UserCancellationError = internal.UserCancellationError;
exports.UserLockedOutError = internal.UserLockedOutError;
Object.defineProperty(exports, "Wallets", {
  enumerable: true,
  get: function get() {
    return internal.Wallets;
  }
});
exports.errorToStytchError = internal.errorToStytchError;
exports.StytchB2BUIClient = StytchB2BUIClient;
