import { AdditionalTelemetryData, INetworkClient, RetriableSDKRequestInfo, SDKRequestInfo, SDKTelemetry } from '@stytch/core';
import { ResponseCommon } from '@stytch/core/public';
import { B2BSubscriptionDataLayer, ConsumerSubscriptionDataLayer } from './SubscriptionService';
export declare class NetworkClient implements INetworkClient {
    private _publicToken;
    private _subscriptionDataLayer;
    private additionalTelemetryDataFn;
    private eventLogger;
    private readonly baseURL;
    constructor(_publicToken: string, _subscriptionDataLayer: ConsumerSubscriptionDataLayer | B2BSubscriptionDataLayer, _liveAPIURL: string, _testAPIURL: string, additionalTelemetryDataFn: () => AdditionalTelemetryData);
    updateSessionToken: () => null;
    logEvent({ name, details, error, }: {
        name: string;
        details: Record<string, unknown>;
        error?: {
            error_code?: string;
            error_description?: string;
            http_status_code?: string;
        };
    }): void;
    createTelemetryBlob(): SDKTelemetry;
    fetchSDK<T extends ResponseCommon>({ url, body, method }: SDKRequestInfo): Promise<T>;
    retriableFetchSDK<T extends ResponseCommon>({ url, body, method, retryCallback, }: RetriableSDKRequestInfo): Promise<T>;
    buildSDKUrl(url: string): string;
}
